#!/bin/env bash
###################################################################
#  NAME
#	update_configure
#
#  SYNOPSIS
#       update_configure
#
#  DESCRIPTION
#       This script will update all the aclocal.m4 and configure 
#       files recursively.
#
#       Author: Kelly Thompson
#               Los Alamos National Laboratory
#       Date:   2005 Feb 2
#
#
###################################################################
# $Id$
###################################################################

# Must be run from a directory that has a configure.ac file
if test ! -f configure.ac; then
   echo " "
   echo ">>> This script must be run from a directory that contains a"
   echo ">>> configure.ac file."
   echo ">>> Abnormal exit."
   echo " "
fi

# find the config directory
config_dir=""
curdir=`pwd`
while : ; do 
   if test "`find . -name config -print | grep config`" = ""; then
      config_dir="${config_dir}../"
      cd ..
   else
      config_dir="${config_dir}config"
      break
   fi
done
cd ${curdir}

# Obtain full path name for config_dir
config_dir=`(cd ${config_dir} &> /dev/null;pwd)`
pkg_config_dir=`echo $config_dir | sed -e 's/config/pkg_config/'`

# ensure that we found a directory
if test ! -d ${config_dir}; then
   echo " "
   echo ">>> Found a file ${config_dir}, but it is not a directory."
   echo ">>> Abnormal exit."
   echo " "
fi
if test ! -f ${config_dir}/ac_dracoarg.m4; then
   echo " "
   echo ">>> Found a directory ${config_dir}, but it is not the Draco"
   echo ">>> config directory."
   echo ">>> Abnormal exit."
   echo " "
fi

# Recursive update:
for dir in `find . -type d -print`; do
   top_dir=`pwd`
   if test -f ${dir}/configure.ac; then
      echo ">>> Working in ${dir}"
      cd ${dir}
      echo "    Removing configure, aclocal.m4 and autom4te.cache"
      rm -f configure aclocal.m4
      rm -rf autom4te.cache
      echo "    Updating configure files."
      if test -d ${pkg_config_dir}; then
        aclocal -I ${pkg_config_dir} -I ${config_dir}
      else
        aclocal -I ${config_dir}
      fi
      autoconf
      echo "    Done."
      cd ${top_dir}
   fi
done

echo ">>> All Done."

