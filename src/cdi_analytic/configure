#! /bin/sh
# Guess values for system-dependent variables and create Makefiles.
# Generated by GNU Autoconf 2.59.
#
# Copyright (C) 2003 Free Software Foundation, Inc.
# This configure script is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi
DUALCASE=1; export DUALCASE # for MKS sh

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# Work around bugs in pre-3.0 UWIN ksh.
$as_unset ENV MAIL MAILPATH
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)$' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
  	  /^X\/\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`


# PATH needs CR, and LINENO needs CR and PATH.
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi


  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
  # Find who we are.  Look in the path if we contain no path at all
  # relative or not.
  case $0 in
    *[\\/]* ) as_myself=$0 ;;
    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done

       ;;
  esac
  # We did not find ourselves, most probably we were run as `sh COMMAND'
  # in which case we are not to be found in the path.
  if test "x$as_myself" = x; then
    as_myself=$0
  fi
  if test ! -f "$as_myself"; then
    { echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2
   { (exit 1); exit 1; }; }
  fi
  case $CONFIG_SHELL in
  '')
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for as_base in sh bash ksh sh5; do
	 case $as_dir in
	 /*)
	   if ("$as_dir/$as_base" -c '
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
	     CONFIG_SHELL=$as_dir/$as_base
	     export CONFIG_SHELL
	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
	   fi;;
	 esac
       done
done
;;
  esac

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line before each line; the second 'sed' does the real
  # work.  The second script uses 'N' to pair each line-number line
  # with the numbered line, and appends trailing '-' during
  # substitution so that $LINENO is not a special case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
  sed '=' <$as_myself |
    sed '
      N
      s,$,-,
      : loop
      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
      t loop
      s,-$,,
      s,^['$as_cr_digits']*\n,,
    ' >$as_me.lineno &&
  chmod +x $as_me.lineno ||
    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensible to this).
  . ./$as_me.lineno
  # Exit status is that of the last command.
  exit
}


case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='	' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac

if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  # We could just check for DJGPP; but this test a) works b) is more generic
  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
  if test -f conf$$.exe; then
    # Don't use ln at all; we don't have any links
    as_ln_s='cp -p'
  else
    as_ln_s='ln -s'
  fi
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.file

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_executable_p="test -f"

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


# IFS
# We need space, tab and new line, in precisely that order.
as_nl='
'
IFS=" 	$as_nl"

# CDPATH.
$as_unset CDPATH


# Name of the host.
# hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
# so uname gets run too.
ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`

exec 6>&1

#
# Initializations.
#
ac_default_prefix=/usr/local
ac_config_libobj_dir=.
cross_compiling=no
subdirs=
MFLAGS=
MAKEFLAGS=
SHELL=${CONFIG_SHELL-/bin/sh}

# Maximum number of lines to put in a shell here document.
# This variable seems obsolete.  It should probably be removed, and
# only ac_max_sed_lines should be used.
: ${ac_max_here_lines=38}

# Identity of this package.
PACKAGE_NAME=
PACKAGE_TARNAME=
PACKAGE_VERSION=
PACKAGE_STRING=
PACKAGE_BUGREPORT=

ac_unique_file="Analytic_Gray_Opacity.hh"
ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS latex_yes_no doxygen_output_top build build_cpu build_vendor build_os host host_cpu host_vendor host_os PYTHON_PATH PERL_PATH CVS_PATH GHOSTVIEW LATEX LATEXFLAGS BIBTEX BIBTEXFLAGS XDVI XDVIFLAGS PS2PDF DOTCMD DVIPS DVIPSFLAGS LP LPFLAGS DOXYGEN_PATH F90 F90FREE F90FIXED F90FLAGS MODFLAG CXX CC GCC_BIN RANLIB ac_ct_RANLIB CFLAGS CXXFLAGS LD LDFLAGS AR ARFLAGS CPPFLAGS DEPENDENCY_RULES STRICTFLAG PARALLEL_FLAG RPATH LIB_PREFIX INSTALL INSTALL_DATA installfiles install_executable install_lib install_headers installdirs alltarget libsuffix dirstoclean package DRACO_DEPENDS DRACO_LIBS VENDOR_DEPENDS VENDOR_INC VENDOR_LIBS ARLIBS PKG_DEPENDS PKG_LIBS DRACO_TEST_DEPENDS DRACO_TEST_LIBS VENDOR_TEST_DEPENDS VENDOR_TEST_LIBS ARTESTLIBS test_alltarget test_flags test_scalar test_nprocs test_output_files configure_command package_top_srcdir number doxygen_input doxygen_examples doxygen_html_output doxygen_latex_output DOXYGEN_TAGFILES rel_package_html header_dir autodoc_dir LIBOBJS LTLIBOBJS'
ac_subst_files=''

# Initialize some variables set by options.
ac_init_help=
ac_init_version=false
# The variables have the same names as the options, with
# dashes changed to underlines.
cache_file=/dev/null
exec_prefix=NONE
no_create=
no_recursion=
prefix=NONE
program_prefix=NONE
program_suffix=NONE
program_transform_name=s,x,x,
silent=
site=
srcdir=
verbose=
x_includes=NONE
x_libraries=NONE

# Installation directory options.
# These are left unexpanded so users can "make install exec_prefix=/foo"
# and all the variables that are supposed to be based on exec_prefix
# by default will actually change.
# Use braces instead of parens because sh, perl, etc. also accept them.
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libexecdir='${exec_prefix}/libexec'
datadir='${prefix}/share'
sysconfdir='${prefix}/etc'
sharedstatedir='${prefix}/com'
localstatedir='${prefix}/var'
libdir='${exec_prefix}/lib'
includedir='${prefix}/include'
oldincludedir='/usr/include'
infodir='${prefix}/info'
mandir='${prefix}/man'

ac_prev=
for ac_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$ac_prev"; then
    eval "$ac_prev=\$ac_option"
    ac_prev=
    continue
  fi

  ac_optarg=`expr "x$ac_option" : 'x[^=]*=\(.*\)'`

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $ac_option in

  -bindir | --bindir | --bindi | --bind | --bin | --bi)
    ac_prev=bindir ;;
  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
    bindir=$ac_optarg ;;

  -build | --build | --buil | --bui | --bu)
    ac_prev=build_alias ;;
  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
    build_alias=$ac_optarg ;;

  -cache-file | --cache-file | --cache-fil | --cache-fi \
  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
    ac_prev=cache_file ;;
  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
    cache_file=$ac_optarg ;;

  --config-cache | -C)
    cache_file=config.cache ;;

  -datadir | --datadir | --datadi | --datad | --data | --dat | --da)
    ac_prev=datadir ;;
  -datadir=* | --datadir=* | --datadi=* | --datad=* | --data=* | --dat=* \
  | --da=*)
    datadir=$ac_optarg ;;

  -disable-* | --disable-*)
    ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid feature name: $ac_feature" >&2
   { (exit 1); exit 1; }; }
    ac_feature=`echo $ac_feature | sed 's/-/_/g'`
    eval "enable_$ac_feature=no" ;;

  -enable-* | --enable-*)
    ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid feature name: $ac_feature" >&2
   { (exit 1); exit 1; }; }
    ac_feature=`echo $ac_feature | sed 's/-/_/g'`
    case $ac_option in
      *=*) ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`;;
      *) ac_optarg=yes ;;
    esac
    eval "enable_$ac_feature='$ac_optarg'" ;;

  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
  | --exec | --exe | --ex)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
  | --exec=* | --exe=* | --ex=*)
    exec_prefix=$ac_optarg ;;

  -gas | --gas | --ga | --g)
    # Obsolete; use --with-gas.
    with_gas=yes ;;

  -help | --help | --hel | --he | -h)
    ac_init_help=long ;;
  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
    ac_init_help=recursive ;;
  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
    ac_init_help=short ;;

  -host | --host | --hos | --ho)
    ac_prev=host_alias ;;
  -host=* | --host=* | --hos=* | --ho=*)
    host_alias=$ac_optarg ;;

  -includedir | --includedir | --includedi | --included | --include \
  | --includ | --inclu | --incl | --inc)
    ac_prev=includedir ;;
  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
  | --includ=* | --inclu=* | --incl=* | --inc=*)
    includedir=$ac_optarg ;;

  -infodir | --infodir | --infodi | --infod | --info | --inf)
    ac_prev=infodir ;;
  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
    infodir=$ac_optarg ;;

  -libdir | --libdir | --libdi | --libd)
    ac_prev=libdir ;;
  -libdir=* | --libdir=* | --libdi=* | --libd=*)
    libdir=$ac_optarg ;;

  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
  | --libexe | --libex | --libe)
    ac_prev=libexecdir ;;
  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
  | --libexe=* | --libex=* | --libe=*)
    libexecdir=$ac_optarg ;;

  -localstatedir | --localstatedir | --localstatedi | --localstated \
  | --localstate | --localstat | --localsta | --localst \
  | --locals | --local | --loca | --loc | --lo)
    ac_prev=localstatedir ;;
  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
  | --localstate=* | --localstat=* | --localsta=* | --localst=* \
  | --locals=* | --local=* | --loca=* | --loc=* | --lo=*)
    localstatedir=$ac_optarg ;;

  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
    mandir=$ac_optarg ;;

  -nfp | --nfp | --nf)
    # Obsolete; use --without-fp.
    with_fp=no ;;

  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c | -n)
    no_create=yes ;;

  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
    no_recursion=yes ;;

  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
  | --oldin | --oldi | --old | --ol | --o)
    ac_prev=oldincludedir ;;
  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
    oldincludedir=$ac_optarg ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    ac_prev=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix=$ac_optarg ;;

  -program-prefix | --program-prefix | --program-prefi | --program-pref \
  | --program-pre | --program-pr | --program-p)
    ac_prev=program_prefix ;;
  -program-prefix=* | --program-prefix=* | --program-prefi=* \
  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
    program_prefix=$ac_optarg ;;

  -program-suffix | --program-suffix | --program-suffi | --program-suff \
  | --program-suf | --program-su | --program-s)
    ac_prev=program_suffix ;;
  -program-suffix=* | --program-suffix=* | --program-suffi=* \
  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
    program_suffix=$ac_optarg ;;

  -program-transform-name | --program-transform-name \
  | --program-transform-nam | --program-transform-na \
  | --program-transform-n | --program-transform- \
  | --program-transform | --program-transfor \
  | --program-transfo | --program-transf \
  | --program-trans | --program-tran \
  | --progr-tra | --program-tr | --program-t)
    ac_prev=program_transform_name ;;
  -program-transform-name=* | --program-transform-name=* \
  | --program-transform-nam=* | --program-transform-na=* \
  | --program-transform-n=* | --program-transform-=* \
  | --program-transform=* | --program-transfor=* \
  | --program-transfo=* | --program-transf=* \
  | --program-trans=* | --program-tran=* \
  | --progr-tra=* | --program-tr=* | --program-t=*)
    program_transform_name=$ac_optarg ;;

  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil)
    silent=yes ;;

  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
    ac_prev=sbindir ;;
  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
  | --sbi=* | --sb=*)
    sbindir=$ac_optarg ;;

  -sharedstatedir | --sharedstatedir | --sharedstatedi \
  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
  | --sharedst | --shareds | --shared | --share | --shar \
  | --sha | --sh)
    ac_prev=sharedstatedir ;;
  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
  | --sha=* | --sh=*)
    sharedstatedir=$ac_optarg ;;

  -site | --site | --sit)
    ac_prev=site ;;
  -site=* | --site=* | --sit=*)
    site=$ac_optarg ;;

  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
    ac_prev=srcdir ;;
  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
    srcdir=$ac_optarg ;;

  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
  | --syscon | --sysco | --sysc | --sys | --sy)
    ac_prev=sysconfdir ;;
  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
    sysconfdir=$ac_optarg ;;

  -target | --target | --targe | --targ | --tar | --ta | --t)
    ac_prev=target_alias ;;
  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
    target_alias=$ac_optarg ;;

  -v | -verbose | --verbose | --verbos | --verbo | --verb)
    verbose=yes ;;

  -version | --version | --versio | --versi | --vers | -V)
    ac_init_version=: ;;

  -with-* | --with-*)
    ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid package name: $ac_package" >&2
   { (exit 1); exit 1; }; }
    ac_package=`echo $ac_package| sed 's/-/_/g'`
    case $ac_option in
      *=*) ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`;;
      *) ac_optarg=yes ;;
    esac
    eval "with_$ac_package='$ac_optarg'" ;;

  -without-* | --without-*)
    ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid package name: $ac_package" >&2
   { (exit 1); exit 1; }; }
    ac_package=`echo $ac_package | sed 's/-/_/g'`
    eval "with_$ac_package=no" ;;

  --x)
    # Obsolete; use --with-x.
    with_x=yes ;;

  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
  | --x-incl | --x-inc | --x-in | --x-i)
    ac_prev=x_includes ;;
  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
    x_includes=$ac_optarg ;;

  -x-libraries | --x-libraries | --x-librarie | --x-librari \
  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
    ac_prev=x_libraries ;;
  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
    x_libraries=$ac_optarg ;;

  -*) { echo "$as_me: error: unrecognized option: $ac_option
Try \`$0 --help' for more information." >&2
   { (exit 1); exit 1; }; }
    ;;

  *=*)
    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
    # Reject names that are not valid shell variable names.
    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
   { (exit 1); exit 1; }; }
    ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
    eval "$ac_envvar='$ac_optarg'"
    export $ac_envvar ;;

  *)
    # FIXME: should be removed in autoconf 3.0.
    echo "$as_me: WARNING: you should use --build, --host, --target" >&2
    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
      echo "$as_me: WARNING: invalid host type: $ac_option" >&2
    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
    ;;

  esac
done

if test -n "$ac_prev"; then
  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
  { echo "$as_me: error: missing argument to $ac_option" >&2
   { (exit 1); exit 1; }; }
fi

# Be sure to have absolute paths.
for ac_var in exec_prefix prefix
do
  eval ac_val=$`echo $ac_var`
  case $ac_val in
    [\\/$]* | ?:[\\/]* | NONE | '' ) ;;
    *)  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
   { (exit 1); exit 1; }; };;
  esac
done

# Be sure to have absolute paths.
for ac_var in bindir sbindir libexecdir datadir sysconfdir sharedstatedir \
	      localstatedir libdir includedir oldincludedir infodir mandir
do
  eval ac_val=$`echo $ac_var`
  case $ac_val in
    [\\/$]* | ?:[\\/]* ) ;;
    *)  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
   { (exit 1); exit 1; }; };;
  esac
done

# There might be people who depend on the old broken behavior: `$host'
# used to hold the argument of --host etc.
# FIXME: To remove some day.
build=$build_alias
host=$host_alias
target=$target_alias

# FIXME: To remove some day.
if test "x$host_alias" != x; then
  if test "x$build_alias" = x; then
    cross_compiling=maybe
    echo "$as_me: WARNING: If you wanted to set the --build type, don't use --host.
    If a cross compiler is detected then cross compile mode will be used." >&2
  elif test "x$build_alias" != "x$host_alias"; then
    cross_compiling=yes
  fi
fi

ac_tool_prefix=
test -n "$host_alias" && ac_tool_prefix=$host_alias-

test "$silent" = yes && exec 6>/dev/null


# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  ac_srcdir_defaulted=yes
  # Try the directory containing this script, then its parent.
  ac_confdir=`(dirname "$0") 2>/dev/null ||
$as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$0" : 'X\(//\)[^/]' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$0" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
  srcdir=$ac_confdir
  if test ! -r $srcdir/$ac_unique_file; then
    srcdir=..
  fi
else
  ac_srcdir_defaulted=no
fi
if test ! -r $srcdir/$ac_unique_file; then
  if test "$ac_srcdir_defaulted" = yes; then
    { echo "$as_me: error: cannot find sources ($ac_unique_file) in $ac_confdir or .." >&2
   { (exit 1); exit 1; }; }
  else
    { echo "$as_me: error: cannot find sources ($ac_unique_file) in $srcdir" >&2
   { (exit 1); exit 1; }; }
  fi
fi
(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
  { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
   { (exit 1); exit 1; }; }
srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
ac_env_build_alias_set=${build_alias+set}
ac_env_build_alias_value=$build_alias
ac_cv_env_build_alias_set=${build_alias+set}
ac_cv_env_build_alias_value=$build_alias
ac_env_host_alias_set=${host_alias+set}
ac_env_host_alias_value=$host_alias
ac_cv_env_host_alias_set=${host_alias+set}
ac_cv_env_host_alias_value=$host_alias
ac_env_target_alias_set=${target_alias+set}
ac_env_target_alias_value=$target_alias
ac_cv_env_target_alias_set=${target_alias+set}
ac_cv_env_target_alias_value=$target_alias
ac_env_CC_set=${CC+set}
ac_env_CC_value=$CC
ac_cv_env_CC_set=${CC+set}
ac_cv_env_CC_value=$CC
ac_env_CFLAGS_set=${CFLAGS+set}
ac_env_CFLAGS_value=$CFLAGS
ac_cv_env_CFLAGS_set=${CFLAGS+set}
ac_cv_env_CFLAGS_value=$CFLAGS
ac_env_CXX_set=${CXX+set}
ac_env_CXX_value=$CXX
ac_cv_env_CXX_set=${CXX+set}
ac_cv_env_CXX_value=$CXX
ac_env_CXXFLAGS_set=${CXXFLAGS+set}
ac_env_CXXFLAGS_value=$CXXFLAGS
ac_cv_env_CXXFLAGS_set=${CXXFLAGS+set}
ac_cv_env_CXXFLAGS_value=$CXXFLAGS
ac_env_LD_set=${LD+set}
ac_env_LD_value=$LD
ac_cv_env_LD_set=${LD+set}
ac_cv_env_LD_value=$LD
ac_env_LDFLAGS_set=${LDFLAGS+set}
ac_env_LDFLAGS_value=$LDFLAGS
ac_cv_env_LDFLAGS_set=${LDFLAGS+set}
ac_cv_env_LDFLAGS_value=$LDFLAGS
ac_env_AR_set=${AR+set}
ac_env_AR_value=$AR
ac_cv_env_AR_set=${AR+set}
ac_cv_env_AR_value=$AR
ac_env_ARFLAGS_set=${ARFLAGS+set}
ac_env_ARFLAGS_value=$ARFLAGS
ac_cv_env_ARFLAGS_set=${ARFLAGS+set}
ac_cv_env_ARFLAGS_value=$ARFLAGS
ac_env_CPPFLAGS_set=${CPPFLAGS+set}
ac_env_CPPFLAGS_value=$CPPFLAGS
ac_cv_env_CPPFLAGS_set=${CPPFLAGS+set}
ac_cv_env_CPPFLAGS_value=$CPPFLAGS
ac_env_LIBS_set=${LIBS+set}
ac_env_LIBS_value=$LIBS
ac_cv_env_LIBS_set=${LIBS+set}
ac_cv_env_LIBS_value=$LIBS

#
# Report the --help message.
#
if test "$ac_init_help" = "long"; then
  # Omit some internal or obsolete options to make the list less imposing.
  # This message is too long to be a string in the A/UX 3.1 sh.
  cat <<_ACEOF
\`configure' configures this package to adapt to many kinds of systems.

Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print \`checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for \`--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or \`..']

_ACEOF

  cat <<_ACEOF
Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
			  [$ac_default_prefix]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
			  [PREFIX]

By default, \`make install' will install all the files in
\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
an installation prefix other than \`$ac_default_prefix' using \`--prefix',
for instance \`--prefix=\$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR           user executables [EPREFIX/bin]
  --sbindir=DIR          system admin executables [EPREFIX/sbin]
  --libexecdir=DIR       program executables [EPREFIX/libexec]
  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
  --libdir=DIR           object code libraries [EPREFIX/lib]
  --includedir=DIR       C header files [PREFIX/include]
  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
  --infodir=DIR          info documentation [PREFIX/info]
  --mandir=DIR           man documentation [PREFIX/man]
_ACEOF

  cat <<\_ACEOF

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
_ACEOF
fi

if test -n "$ac_init_help"; then

  cat <<\_ACEOF

Optional Features:
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-shared         turn on shared libraries (.a default)
  --enable-static-ld      use (.a) libraries if possible
  --disable-strict-ansi   turn off strict ansi compliance
  --disable-one-per       turn off --one_per flag
  --enable-debug          turn on debug (-g) option
  --enable-32-bit         do 32-bit compilation (compiler dependent)
  --enable-64-bit         do 64-bit compilation (compiler dependent)
  --enable-latex-doc      build latex docs with doxygen (off by default)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-lib-prefix=library prefix
                          give prefix to libraries (default rtt_)
  --with-c4=scalar,mpi,shmem
		          turn on c4 (default scalar)
  --with-dbc=level      set Design-by-Contract
  --with-cxx=gcc,icpc,sgi,kcc,compaq,guide
                          choose a c++ compiler (defaults are machine dependent)
  --with-opt=0,1,2,3    set optimization level (0 by default)
  --with-posix=num      give posix source (system-dependent defaults)
  --with-cppflags=flags add flags to \$CPPFLAGS
  --with-cxxflags=flags add flags to \$CXXFLAGS
  --with-cflags=flags   add flags to \$CFLAGS
  --with-f90flags=flags add flags to \$F90FLAGS
  --with-arflags=flags  add flags to \$ARFLAGS
  --with-ldflags=flags  add flags to \$LDFLAGS
  --with-libs=libs      add libs to \$LIBS
  --with-mips=1,2,3,4   set mips, mips4 by default (SGI ONLY)
  --with-stlport        replace default STL with stlPort (off by default)
  --with-doc-output=path  build documentation in path (prefix/documentation by default)

Some influential environment variables:
  CC
  CFLAGS
  CXX
  CXXFLAGS
  LD
  LDFLAGS
  AR
  ARFLAGS
  CPPFLAGS
  LIBS

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

_ACEOF
fi

if test "$ac_init_help" = "recursive"; then
  # If there are subdirs, report their specific --help.
  ac_popdir=`pwd`
  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
    test -d $ac_dir || continue
    ac_builddir=.

if test "$ac_dir" != .; then
  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
  # A "../" for each directory in $ac_dir_suffix.
  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
else
  ac_dir_suffix= ac_top_builddir=
fi

case $srcdir in
  .)  # No --srcdir option.  We are building in place.
    ac_srcdir=.
    if test -z "$ac_top_builddir"; then
       ac_top_srcdir=.
    else
       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
    fi ;;
  [\\/]* | ?:[\\/]* )  # Absolute path.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir ;;
  *) # Relative path.
    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_builddir$srcdir ;;
esac

# Do not use `cd foo && pwd` to compute absolute paths, because
# the directories may not exist.
case `pwd` in
.) ac_abs_builddir="$ac_dir";;
*)
  case "$ac_dir" in
  .) ac_abs_builddir=`pwd`;;
  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
  *) ac_abs_builddir=`pwd`/"$ac_dir";;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_builddir=${ac_top_builddir}.;;
*)
  case ${ac_top_builddir}. in
  .) ac_abs_top_builddir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_srcdir=$ac_srcdir;;
*)
  case $ac_srcdir in
  .) ac_abs_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_srcdir=$ac_top_srcdir;;
*)
  case $ac_top_srcdir in
  .) ac_abs_top_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
  esac;;
esac

    cd $ac_dir
    # Check for guested configure; otherwise get Cygnus style configure.
    if test -f $ac_srcdir/configure.gnu; then
      echo
      $SHELL $ac_srcdir/configure.gnu  --help=recursive
    elif test -f $ac_srcdir/configure; then
      echo
      $SHELL $ac_srcdir/configure  --help=recursive
    elif test -f $ac_srcdir/configure.ac ||
	   test -f $ac_srcdir/configure.in; then
      echo
      $ac_configure --help
    else
      echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
    fi
    cd $ac_popdir
  done
fi

test -n "$ac_init_help" && exit 0
if $ac_init_version; then
  cat <<\_ACEOF

Copyright (C) 2003 Free Software Foundation, Inc.
This configure script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it.
_ACEOF
  exit 0
fi
exec 5>config.log
cat >&5 <<_ACEOF
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by $as_me, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  $ $0 $@

_ACEOF
{
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  echo "PATH: $as_dir"
done

} >&5

cat >&5 <<_ACEOF


## ----------- ##
## Core tests. ##
## ----------- ##

_ACEOF


# Keep a trace of the command line.
# Strip out --no-create and --no-recursion so they do not pile up.
# Strip out --silent because we don't want to record it for future runs.
# Also quote any args containing shell meta-characters.
# Make two passes to allow for proper duplicate-argument suppression.
ac_configure_args=
ac_configure_args0=
ac_configure_args1=
ac_sep=
ac_must_keep_next=false
for ac_pass in 1 2
do
  for ac_arg
  do
    case $ac_arg in
    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
    | -silent | --silent | --silen | --sile | --sil)
      continue ;;
    *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\"\']*)
      ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    case $ac_pass in
    1) ac_configure_args0="$ac_configure_args0 '$ac_arg'" ;;
    2)
      ac_configure_args1="$ac_configure_args1 '$ac_arg'"
      if test $ac_must_keep_next = true; then
	ac_must_keep_next=false # Got value, back to normal.
      else
	case $ac_arg in
	  *=* | --config-cache | -C | -disable-* | --disable-* \
	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
	  | -with-* | --with-* | -without-* | --without-* | --x)
	    case "$ac_configure_args0 " in
	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
	    esac
	    ;;
	  -* ) ac_must_keep_next=true ;;
	esac
      fi
      ac_configure_args="$ac_configure_args$ac_sep'$ac_arg'"
      # Get rid of the leading space.
      ac_sep=" "
      ;;
    esac
  done
done
$as_unset ac_configure_args0 || test "${ac_configure_args0+set}" != set || { ac_configure_args0=; export ac_configure_args0; }
$as_unset ac_configure_args1 || test "${ac_configure_args1+set}" != set || { ac_configure_args1=; export ac_configure_args1; }

# When interrupted or exit'd, cleanup temporary files, and complete
# config.log.  We remove comments because anyway the quotes in there
# would cause problems or look ugly.
# WARNING: Be sure not to use single quotes in there, as some shells,
# such as our DU 5.0 friend, will then `close' the trap.
trap 'exit_status=$?
  # Save into config.log some information that might help in debugging.
  {
    echo

    cat <<\_ASBOX
## ---------------- ##
## Cache variables. ##
## ---------------- ##
_ASBOX
    echo
    # The following way of writing the cache mishandles newlines in values,
{
  (set) 2>&1 |
    case `(ac_space='"'"' '"'"'; set | grep ac_space) 2>&1` in
    *ac_space=\ *)
      sed -n \
	"s/'"'"'/'"'"'\\\\'"'"''"'"'/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='"'"'\\2'"'"'/p"
      ;;
    *)
      sed -n \
	"s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1=\\2/p"
      ;;
    esac;
}
    echo

    cat <<\_ASBOX
## ----------------- ##
## Output variables. ##
## ----------------- ##
_ASBOX
    echo
    for ac_var in $ac_subst_vars
    do
      eval ac_val=$`echo $ac_var`
      echo "$ac_var='"'"'$ac_val'"'"'"
    done | sort
    echo

    if test -n "$ac_subst_files"; then
      cat <<\_ASBOX
## ------------- ##
## Output files. ##
## ------------- ##
_ASBOX
      echo
      for ac_var in $ac_subst_files
      do
	eval ac_val=$`echo $ac_var`
	echo "$ac_var='"'"'$ac_val'"'"'"
      done | sort
      echo
    fi

    if test -s confdefs.h; then
      cat <<\_ASBOX
## ----------- ##
## confdefs.h. ##
## ----------- ##
_ASBOX
      echo
      sed "/^$/d" confdefs.h | sort
      echo
    fi
    test "$ac_signal" != 0 &&
      echo "$as_me: caught signal $ac_signal"
    echo "$as_me: exit $exit_status"
  } >&5
  rm -f core *.core &&
  rm -rf conftest* confdefs* conf$$* $ac_clean_files &&
    exit $exit_status
     ' 0
for ac_signal in 1 2 13 15; do
  trap 'ac_signal='$ac_signal'; { (exit 1); exit 1; }' $ac_signal
done
ac_signal=0

# confdefs.h avoids OS command line length limits that DEFS can exceed.
rm -rf conftest* confdefs.h
# AIX cpp loses on an empty file, so make sure it contains at least a newline.
echo >confdefs.h

# Predefined preprocessor variables.

cat >>confdefs.h <<_ACEOF
#define PACKAGE_NAME "$PACKAGE_NAME"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define PACKAGE_TARNAME "$PACKAGE_TARNAME"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define PACKAGE_VERSION "$PACKAGE_VERSION"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define PACKAGE_STRING "$PACKAGE_STRING"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
_ACEOF


# Let the site file select an alternate cache file if it wants to.
# Prefer explicitly selected file to automatically selected ones.
if test -z "$CONFIG_SITE"; then
  if test "x$prefix" != xNONE; then
    CONFIG_SITE="$prefix/share/config.site $prefix/etc/config.site"
  else
    CONFIG_SITE="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
  fi
fi
for ac_site_file in $CONFIG_SITE; do
  if test -r "$ac_site_file"; then
    { echo "$as_me:$LINENO: loading site script $ac_site_file" >&5
echo "$as_me: loading site script $ac_site_file" >&6;}
    sed 's/^/| /' "$ac_site_file" >&5
    . "$ac_site_file"
  fi
done

if test -r "$cache_file"; then
  # Some versions of bash will fail to source /dev/null (special
  # files actually), so we avoid doing that.
  if test -f "$cache_file"; then
    { echo "$as_me:$LINENO: loading cache $cache_file" >&5
echo "$as_me: loading cache $cache_file" >&6;}
    case $cache_file in
      [\\/]* | ?:[\\/]* ) . $cache_file;;
      *)                      . ./$cache_file;;
    esac
  fi
else
  { echo "$as_me:$LINENO: creating cache $cache_file" >&5
echo "$as_me: creating cache $cache_file" >&6;}
  >$cache_file
fi

# Check that the precious variables saved in the cache have kept the same
# value.
ac_cache_corrupted=false
for ac_var in `(set) 2>&1 |
	       sed -n 's/^ac_env_\([a-zA-Z_0-9]*\)_set=.*/\1/p'`; do
  eval ac_old_set=\$ac_cv_env_${ac_var}_set
  eval ac_new_set=\$ac_env_${ac_var}_set
  eval ac_old_val="\$ac_cv_env_${ac_var}_value"
  eval ac_new_val="\$ac_env_${ac_var}_value"
  case $ac_old_set,$ac_new_set in
    set,)
      { echo "$as_me:$LINENO: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,set)
      { echo "$as_me:$LINENO: error: \`$ac_var' was not set in the previous run" >&5
echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,);;
    *)
      if test "x$ac_old_val" != "x$ac_new_val"; then
	{ echo "$as_me:$LINENO: error: \`$ac_var' has changed since the previous run:" >&5
echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
	{ echo "$as_me:$LINENO:   former value:  $ac_old_val" >&5
echo "$as_me:   former value:  $ac_old_val" >&2;}
	{ echo "$as_me:$LINENO:   current value: $ac_new_val" >&5
echo "$as_me:   current value: $ac_new_val" >&2;}
	ac_cache_corrupted=:
      fi;;
  esac
  # Pass precious variables to config.status.
  if test "$ac_new_set" = set; then
    case $ac_new_val in
    *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\"\']*)
      ac_arg=$ac_var=`echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
    *) ac_arg=$ac_var=$ac_new_val ;;
    esac
    case " $ac_configure_args " in
      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
      *) ac_configure_args="$ac_configure_args '$ac_arg'" ;;
    esac
  fi
done
if $ac_cache_corrupted; then
  { echo "$as_me:$LINENO: error: changes in the environment can compromise the build" >&5
echo "$as_me: error: changes in the environment can compromise the build" >&2;}
  { { echo "$as_me:$LINENO: error: run \`make distclean' and/or \`rm $cache_file' and start over" >&5
echo "$as_me: error: run \`make distclean' and/or \`rm $cache_file' and start over" >&2;}
   { (exit 1); exit 1; }; }
fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu




















ac_aux_dir=
for ac_dir in ../../config $srcdir/../../config; do
  if test -f $ac_dir/install-sh; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/install-sh -c"
    break
  elif test -f $ac_dir/install.sh; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/install.sh -c"
    break
  elif test -f $ac_dir/shtool; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/shtool install -c"
    break
  fi
done
if test -z "$ac_aux_dir"; then
  { { echo "$as_me:$LINENO: error: cannot find install-sh or install.sh in ../../config $srcdir/../../config" >&5
echo "$as_me: error: cannot find install-sh or install.sh in ../../config $srcdir/../../config" >&2;}
   { (exit 1); exit 1; }; }
fi
ac_config_guess="$SHELL $ac_aux_dir/config.guess"
ac_config_sub="$SHELL $ac_aux_dir/config.sub"
ac_configure="$SHELL $ac_aux_dir/configure" # This should be Cygnus configure.

          ac_config_headers="$ac_config_headers cdi_analytic/config.h:config.h.in"

package="cdi_analytic"


    install_headers="\${installheaders}"
   installdirs="${installdirs} \${includedir} \${includedir}/\${package}"

    install_lib='${libdir}/lib${LIB_PREFIX}${package}${libsuffix}'
   installdirs="${installdirs} \${libdir}"
   alltarget="${alltarget} lib\${LIB_PREFIX}\${package}\${libsuffix}"

   # test will need to link this library
   PKG_DEPENDS='../lib${LIB_PREFIX}${package}${libsuffix}'
   PKG_LIBS='-L.. -l${LIB_PREFIX}${package}'

   if test ${has_libdir:=no} != "yes" ; then
       DRACO_LIBS="${DRACO_LIBS} -L\${libdir}"
       has_libdir="yes"
   fi

   for lib in cdi ds++
   do
       # temporary string to keep line from getting too long
       draco_depends="\${libdir}/lib\${LIB_PREFIX}${lib}\${libsuffix}"
       DRACO_DEPENDS="${DRACO_DEPENDS} ${draco_depends}"
       DRACO_LIBS="${DRACO_LIBS} -l\${LIB_PREFIX}${lib}"
   done

   # Keep a list of component dependencies free of other tags or paths.
   DEPENDENT_COMPONENTS="cdi ds++"



	test_alltarget="$test_alltarget tstAnalytic_Gray_Opacity tstAnalytic_Multigroup_Opacity \
            tstAnalytic_EoS"

	test_nprocs="scalar"

	if test -z "${test_nprocs}" ; then
	    { { echo "$as_me:$LINENO: error: \"No procs choosen for the tests!\"" >&5
echo "$as_me: error: \"No procs choosen for the tests!\"" >&2;}
   { (exit 1); exit 1; }; }
        fi


# Make sure we can run config.sub.
$ac_config_sub sun4 >/dev/null 2>&1 ||
  { { echo "$as_me:$LINENO: error: cannot run $ac_config_sub" >&5
echo "$as_me: error: cannot run $ac_config_sub" >&2;}
   { (exit 1); exit 1; }; }

echo "$as_me:$LINENO: checking build system type" >&5
echo $ECHO_N "checking build system type... $ECHO_C" >&6
if test "${ac_cv_build+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  ac_cv_build_alias=$build_alias
test -z "$ac_cv_build_alias" &&
  ac_cv_build_alias=`$ac_config_guess`
test -z "$ac_cv_build_alias" &&
  { { echo "$as_me:$LINENO: error: cannot guess build type; you must specify one" >&5
echo "$as_me: error: cannot guess build type; you must specify one" >&2;}
   { (exit 1); exit 1; }; }
ac_cv_build=`$ac_config_sub $ac_cv_build_alias` ||
  { { echo "$as_me:$LINENO: error: $ac_config_sub $ac_cv_build_alias failed" >&5
echo "$as_me: error: $ac_config_sub $ac_cv_build_alias failed" >&2;}
   { (exit 1); exit 1; }; }

fi
echo "$as_me:$LINENO: result: $ac_cv_build" >&5
echo "${ECHO_T}$ac_cv_build" >&6
build=$ac_cv_build
build_cpu=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
build_vendor=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
build_os=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`


echo "$as_me:$LINENO: checking host system type" >&5
echo $ECHO_N "checking host system type... $ECHO_C" >&6
if test "${ac_cv_host+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  ac_cv_host_alias=$host_alias
test -z "$ac_cv_host_alias" &&
  ac_cv_host_alias=$ac_cv_build_alias
ac_cv_host=`$ac_config_sub $ac_cv_host_alias` ||
  { { echo "$as_me:$LINENO: error: $ac_config_sub $ac_cv_host_alias failed" >&5
echo "$as_me: error: $ac_config_sub $ac_cv_host_alias failed" >&2;}
   { (exit 1); exit 1; }; }

fi
echo "$as_me:$LINENO: result: $ac_cv_host" >&5
echo "${ECHO_T}$ac_cv_host" >&6
host=$ac_cv_host
host_cpu=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
host_vendor=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
host_os=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`




   # Retrieve the configure command line for possible use in
   # regression test output.

   configure_command="$0 $*"





# Check whether --with-lib-prefix or --without-lib-prefix was given.
if test "${with_lib_prefix+set}" = set; then
  withval="$with_lib_prefix"

fi;

   # default for lib_prefix is rtt_
   LIB_PREFIX="${with_lib_prefix:=rtt_}"
   if test "${LIB_PREFIX}" = no ; then
       LIB_PREFIX=''
   fi



# Check whether --with-c4 or --without-c4 was given.
if test "${with_c4+set}" = set; then
  withval="$with_c4"

fi;

   # give with-c4 implied argument
   if test "${with_c4:=scalar}" = yes ; then
       with_c4='scalar'
   fi



# Check whether --with-dbc or --without-dbc was given.
if test "${with_dbc+set}" = set; then
  withval="$with_dbc"

fi;

   if test "${with_dbc}" = yes ; then
       with_dbc='7'
   elif test "${with_dbc}" = no ; then
       with_dbc='0'
   fi


      # Check whether --enable-shared or --disable-shared was given.
if test "${enable_shared+set}" = set; then
  enableval="$enable_shared"

fi;



# Check whether --with-cxx or --without-cxx was given.
if test "${with_cxx+set}" = set; then
  withval="$with_cxx"

fi;

      if test "${with_cxx}" = yes ; then
       with_cxx='gcc'
   fi


      # Check whether --enable-static-ld or --disable-static-ld was given.
if test "${enable_static_ld+set}" = set; then
  enableval="$enable_static_ld"

fi;


      # Check whether --enable-strict-ansi or --disable-strict-ansi was given.
if test "${enable_strict_ansi+set}" = set; then
  enableval="$enable_strict_ansi"

fi;


      # Check whether --enable-one-per or --disable-one-per was given.
if test "${enable_one_per+set}" = set; then
  enableval="$enable_one_per"

fi;



# Check whether --with-opt or --without-opt was given.
if test "${with_opt+set}" = set; then
  withval="$with_opt"

fi;

   if test "${with_opt}" = yes ; then
       with_opt='0'
   fi

      # Check whether --enable-debug or --disable-debug was given.
if test "${enable_debug+set}" = set; then
  enableval="$enable_debug"

fi;



# Check whether --with-posix or --without-posix was given.
if test "${with_posix+set}" = set; then
  withval="$with_posix"

fi;



# Check whether --with-cppflags or --without-cppflags was given.
if test "${with_cppflags+set}" = set; then
  withval="$with_cppflags"

fi;



# Check whether --with-cxxflags or --without-cxxflags was given.
if test "${with_cxxflags+set}" = set; then
  withval="$with_cxxflags"

fi;



# Check whether --with-cflags or --without-cflags was given.
if test "${with_cflags+set}" = set; then
  withval="$with_cflags"

fi;



# Check whether --with-f90flags or --without-f90flags was given.
if test "${with_f90flags+set}" = set; then
  withval="$with_f90flags"

fi;



# Check whether --with-arflags or --without-arflags was given.
if test "${with_arflags+set}" = set; then
  withval="$with_arflags"

fi;



# Check whether --with-ldflags or --without-ldflags was given.
if test "${with_ldflags+set}" = set; then
  withval="$with_ldflags"

fi;



# Check whether --with-libs or --without-libs was given.
if test "${with_libs+set}" = set; then
  withval="$with_libs"

fi;


      # Check whether --enable-32-bit or --disable-32-bit was given.
if test "${enable_32_bit+set}" = set; then
  enableval="$enable_32_bit"

fi;

      # Check whether --enable-64-bit or --disable-64-bit was given.
if test "${enable_64_bit+set}" = set; then
  enableval="$enable_64_bit"

fi;



# Check whether --with-mips or --without-mips was given.
if test "${with_mips+set}" = set; then
  withval="$with_mips"

fi;

   if test "${with_mips}" = yes ; then
       with_mips='4'
   fi



# Check whether --with-stlport or --without-stlport was given.
if test "${with_stlport+set}" = set; then
  withval="$with_stlport"

fi;


   # Check whether --enable-latex-doc or --disable-latex-doc was given.
if test "${enable_latex_doc+set}" = set; then
  enableval="$enable_latex_doc"
  latex_yes_no='YES'

else
  latex_yes_no='NO'

fi;


# Check whether --with-doc-output or --without-doc-output was given.
if test "${with_doc_output+set}" = set; then
  withval="$with_doc_output"
  doxygen_output_top=${with_doc_output}

else
  doxygen_output_top='DEFAULT'
fi;







   # we use the install script provided with autoconf on all machines
   INSTALL='${config_dir}/install-sh -c'
   INSTALL_DATA='${INSTALL} -m 644'


   # do the correct #defines
   if test "$with_c4" = scalar ; then
       cat >>confdefs.h <<\_ACEOF
#define C4_SCALAR 1
_ACEOF

   elif test "$with_c4" = mpi ; then
       cat >>confdefs.h <<\_ACEOF
#define C4_MPI 1
_ACEOF

   fi


   # set the DBC level
   if test "${with_dbc:=default}" != default ; then
       cat >>confdefs.h <<_ACEOF
#define DBC $with_dbc
_ACEOF

   fi


   # set the libsuffix variable
   if test "${enable_shared:=no}" = yes ; then
       libsuffix='.so'
   else
       libsuffix='.a'
   fi




   # the tool checks are called in the top-level configure, so in
   # each subsequent configure these should just grab cached values


      # Extract the first word of "python", so it can be a program name with args.
set dummy python; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_PYTHON_PATH+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $PYTHON_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PYTHON_PATH="$PYTHON_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_PYTHON_PATH="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_PYTHON_PATH" && ac_cv_path_PYTHON_PATH="null"
  ;;
esac
fi
PYTHON_PATH=$ac_cv_path_PYTHON_PATH

if test -n "$PYTHON_PATH"; then
  echo "$as_me:$LINENO: result: $PYTHON_PATH" >&5
echo "${ECHO_T}$PYTHON_PATH" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${PYTHON_PATH}" = null ; then
       { { echo "$as_me:$LINENO: error: \"No valid Python found!\"" >&5
echo "$as_me: error: \"No valid Python found!\"" >&2;}
   { (exit 1); exit 1; }; }
   fi

      # Extract the first word of "perl", so it can be a program name with args.
set dummy perl; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_PERL_PATH+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $PERL_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_PERL_PATH="$PERL_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_PERL_PATH="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_PERL_PATH" && ac_cv_path_PERL_PATH="null"
  ;;
esac
fi
PERL_PATH=$ac_cv_path_PERL_PATH

if test -n "$PERL_PATH"; then
  echo "$as_me:$LINENO: result: $PERL_PATH" >&5
echo "${ECHO_T}$PERL_PATH" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${PERL_PATH}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid Perl found!\"" >&5
echo "$as_me: WARNING: \"No valid Perl found!\"" >&2;}
   fi

      # Extract the first word of "cvs", so it can be a program name with args.
set dummy cvs; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_CVS_PATH+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $CVS_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_CVS_PATH="$CVS_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_CVS_PATH="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_CVS_PATH" && ac_cv_path_CVS_PATH="null"
  ;;
esac
fi
CVS_PATH=$ac_cv_path_CVS_PATH

if test -n "$CVS_PATH"; then
  echo "$as_me:$LINENO: result: $CVS_PATH" >&5
echo "${ECHO_T}$CVS_PATH" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${CVS_PATH}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid CVS found!\"" >&5
echo "$as_me: WARNING: \"No valid CVS found!\"" >&2;}
   fi

      for ac_prog in ghostview gv
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_GHOSTVIEW+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$GHOSTVIEW"; then
  ac_cv_prog_GHOSTVIEW="$GHOSTVIEW" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_GHOSTVIEW="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
GHOSTVIEW=$ac_cv_prog_GHOSTVIEW
if test -n "$GHOSTVIEW"; then
  echo "$as_me:$LINENO: result: $GHOSTVIEW" >&5
echo "${ECHO_T}$GHOSTVIEW" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$GHOSTVIEW" && break
done
test -n "$GHOSTVIEW" || GHOSTVIEW="null"

   if test "${GHOSTVIEW}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid ghostview found!\"" >&5
echo "$as_me: WARNING: \"No valid ghostview found!\"" >&2;}
   fi

      for ac_prog in latex
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_LATEX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$LATEX"; then
  ac_cv_prog_LATEX="$LATEX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_LATEX="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
LATEX=$ac_cv_prog_LATEX
if test -n "$LATEX"; then
  echo "$as_me:$LINENO: result: $LATEX" >&5
echo "${ECHO_T}$LATEX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$LATEX" && break
done
test -n "$LATEX" || LATEX="null"

   if test "${LATEX}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid latex found!\"" >&5
echo "$as_me: WARNING: \"No valid latex found!\"" >&2;}
   fi


      for ac_prog in bibtex
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_BIBTEX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$BIBTEX"; then
  ac_cv_prog_BIBTEX="$BIBTEX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_BIBTEX="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
BIBTEX=$ac_cv_prog_BIBTEX
if test -n "$BIBTEX"; then
  echo "$as_me:$LINENO: result: $BIBTEX" >&5
echo "${ECHO_T}$BIBTEX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$BIBTEX" && break
done
test -n "$BIBTEX" || BIBTEX="null"

   if test "${BIBTEX}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid bibtex found!\"" >&5
echo "$as_me: WARNING: \"No valid bibtex found!\"" >&2;}
   fi


      for ac_prog in xdvi
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_XDVI+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$XDVI"; then
  ac_cv_prog_XDVI="$XDVI" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_XDVI="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
XDVI=$ac_cv_prog_XDVI
if test -n "$XDVI"; then
  echo "$as_me:$LINENO: result: $XDVI" >&5
echo "${ECHO_T}$XDVI" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$XDVI" && break
done
test -n "$XDVI" || XDVI="null"

   if test "${XDVI}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid xdvi found!\"" >&5
echo "$as_me: WARNING: \"No valid xdvi found!\"" >&2;}
   fi


      for ac_prog in ps2pdf
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_PS2PDF+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$PS2PDF"; then
  ac_cv_prog_PS2PDF="$PS2PDF" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_PS2PDF="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
PS2PDF=$ac_cv_prog_PS2PDF
if test -n "$PS2PDF"; then
  echo "$as_me:$LINENO: result: $PS2PDF" >&5
echo "${ECHO_T}$PS2PDF" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$PS2PDF" && break
done
test -n "$PS2PDF" || PS2PDF="null"

   if test "${PS2PDF}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid ps2pdf found!\"" >&5
echo "$as_me: WARNING: \"No valid ps2pdf found!\"" >&2;}
   fi

      for ac_prog in dot
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_DOTCMD+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$DOTCMD"; then
  ac_cv_prog_DOTCMD="$DOTCMD" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_DOTCMD="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
DOTCMD=$ac_cv_prog_DOTCMD
if test -n "$DOTCMD"; then
  echo "$as_me:$LINENO: result: $DOTCMD" >&5
echo "${ECHO_T}$DOTCMD" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$DOTCMD" && break
done
test -n "$DOTCMD" || DOTCMD="null"

   if test "${DOTCMD}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid dot found!\"" >&5
echo "$as_me: WARNING: \"No valid dot found!\"" >&2;}
   fi

      for ac_prog in dvips
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_DVIPS+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$DVIPS"; then
  ac_cv_prog_DVIPS="$DVIPS" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_DVIPS="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
DVIPS=$ac_cv_prog_DVIPS
if test -n "$DVIPS"; then
  echo "$as_me:$LINENO: result: $DVIPS" >&5
echo "${ECHO_T}$DVIPS" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$DVIPS" && break
done
test -n "$DVIPS" || DVIPS="null"

   if test "${DVIPS}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid dvips found!\"" >&5
echo "$as_me: WARNING: \"No valid dvips found!\"" >&2;}
   fi


      for ac_prog in lp lpr
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_LP+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$LP"; then
  ac_cv_prog_LP="$LP" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_LP="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
LP=$ac_cv_prog_LP
if test -n "$LP"; then
  echo "$as_me:$LINENO: result: $LP" >&5
echo "${ECHO_T}$LP" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$LP" && break
done
test -n "$LP" || LP="null"

   if test "${LP}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid lp or lpr found!\"" >&5
echo "$as_me: WARNING: \"No valid lp or lpr found!\"" >&2;}
   fi


      # Extract the first word of "doxygen", so it can be a program name with args.
set dummy doxygen; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_DOXYGEN_PATH+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $DOXYGEN_PATH in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_DOXYGEN_PATH="$DOXYGEN_PATH" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_DOXYGEN_PATH="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_DOXYGEN_PATH" && ac_cv_path_DOXYGEN_PATH="null"
  ;;
esac
fi
DOXYGEN_PATH=$ac_cv_path_DOXYGEN_PATH

if test -n "$DOXYGEN_PATH"; then
  echo "$as_me:$LINENO: result: $DOXYGEN_PATH" >&5
echo "${ECHO_T}$DOXYGEN_PATH" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${DOXYGEN_PATH}" = null ; then
       { echo "$as_me:$LINENO: WARNING: \"No valid Doxygen found!\"" >&5
echo "$as_me: WARNING: \"No valid Doxygen found!\"" >&2;}
   fi




   # the default compiler is C++; we do not turn on F90 unless
   # AC_WITH_F90 is called in configure.in (which sets with_cxx='no')
   if test "${with_cxx}" = no ; then

       # if with_f90 defined test with_f90 for compiler, and call setup
       # if with_f90 set to yes or not set
       # attempt to guess compiler based on target


   case "${with_f90:=yes}" in
   XL)

   # Check for working XL F90 compiler

  if test "${with_upslib:=no}" != "no"
  then
     # Extract the first word of "mpxlf95", so it can be a program name with args.
set dummy mpxlf95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="mpxlf95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

     if test "${F90}" != mpxlf95
     then
         { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
     fi
  else
     # Extract the first word of "xlf95", so it can be a program name with args.
set dummy xlf95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="xlf95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

     if test "${F90}" != xlf95
     then
         { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
     fi
  fi

   # FREE, FIXED AND MODULE FLAGS

   F90FREE='-qfree=f90'
   F90FIXED='-qfixed'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=

   # COMPILATION FLAGS

   if test "$F90FLAGS" = ""
   then
     # F90FLAGS="-qsuffix=f=f90 -qmaxmem=-1 -qextchk -qarch=pwr2 -bmaxstack:0x70000000 -bmaxdata:0x70000000 -qalias=noaryovrlp -qhalt=s ${F90FREE}"
       F90FLAGS="-qsuffix=f=f90 -qmaxmem=-1 -qextchk -qarch=auto -bmaxstack:0x70000000 -bmaxdata:0x70000000 -qalias=noaryovrlp -qnosave -qlanglvl=95pure -qzerosize ${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	   trapflags="-qinitauto=FF"
	   trapflags="${trapflags} -qflttrap=overflow:underflow:zerodivide:invalid:enable"
	   trapflags="${trapflags} -qsigtrap"
	   F90FLAGS="-g -d -C ${trapflags} -bloadmap:loadmap.dat ${F90FLAGS}"
       else
	 # F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
	   F90FLAGS="-O3 ${F90FLAGS}"
       fi
   fi


   ;;
   Fujitsu)

   # Check for working Fujitsu F90 compiler

   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90 && ${F90} -V 2>&1 | grep "Fujitsu"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG

   F90FREE='-Free'
   F90FIXED='-Fixed'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-static-flib'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="-X9 -Am ${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	    F90FLAGS="-g -Haesu ${F90FLAGS}"
       else
	    F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
       fi
   fi


   ;;
   Lahey)

   # Extract the first word of "lf95", so it can be a program name with args.
set dummy lf95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="lf95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


   # F90FREE, F90FIXED AND MODFLAG

   F90FREE='--nfix'
   F90FIXED='--fix'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-static-flib'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
     # F90FLAGS="--f95 ${F90FREE}"
       F90FLAGS="--staticlink --f95 --in --info --swm 2004,2006,2008,8202,8203,8204,8205,8206,8209,8220 ${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	  # F90FLAGS="-g --chk --trace ${F90FLAGS}"
	    F90FLAGS="-g --ap --chk --pca --private --trap --wo ${F90FLAGS}"
       else
	  # F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
	    F90FLAGS="-O --ntrace ${F90FLAGS}"
       fi
   fi


   ;;
   Portland)

   # Check for working Portland Group F90 compiler

   # Extract the first word of "pgf90", so it can be a program name with args.
set dummy pgf90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="pgf90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = pgf90 && ${F90} --V 2>&1 | grep "Portland"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG

   F90FREE='-Mfreeform'
   F90FIXED='-Mnofreeform'
   MODFLAG='-module'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC=

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	    F90FLAGS="-g -Mbounds -Mchkptr ${F90FLAGS}"
       else
	    F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
       fi
   fi


   ;;
   WorkShop)

   # Check for working WorkShop F90 compiler

   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90 && ${F90} -V 2>&1 | grep "WorkShop"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # Set F90FREE, F90FIXED, and MODFLAG

   F90FREE='-free'
   F90FIXED='-fixed'
   MODFLAG='-M'

   # Set LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-Bstatic'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	    F90FLAGS="-g"
       else
	    F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
       fi
   fi


   ;;
   Cray)

   # Check for working Cray F90 compiler

   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # FREE, FIXED AND MODULE FLAGS

   F90FREE='-f free'
   F90FIXED='-f fixed'
   MODFLAG='-p'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	   F90FLAGS="-g ${F90FLAGS}"
       else
	   F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
       fi
   fi


   ;;
   MIPS)

   # Look for working MIPS compiler

   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90 && ${F90} -version 2>&1 | grep "MIPS"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # Set F90FREE, F90FIXED, and MODFLAG

   F90FREE='-freeform'
   F90FIXED='-col72'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
	#F90FLAGS="${F90FREE} -OPT:Olimit=0"
	F90FLAGS="${F90FREE} -mips4 -r10000 -DEBUG:fullwarn=ON:woff=878,938,1193,1438"

	if test "${enable_debug:=no}" = yes
	then
	  # F90FLAGS="-g ${F90FLAGS}"
	    F90FLAGS="-g -check_bounds -DEBUG:trap_uninitialized=ON ${F90FLAGS}"
	else
	  # F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
	    F90FLAGS="-O3 -OPT:IEEE_arithmetic=2:roundoff=2 ${F90FLAGS}"
	fi
   fi


   ;;
   Compaq)

   # Check for working compaq F90 compiler

   # Extract the first word of "f95", so it can be a program name with args.
set dummy f95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f95 && ${F90} -version 2>&1 | grep "Fortran"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG

   F90FREE=''
   F90FIXED=''
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-non_shared'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
     # F90FLAGS="${F90FREE} -assume byterecl"
       F90FLAGS="${F90FREE} -assume byterecl -automatic -std -warn argument_checking"

       if test "${enable_debug:=no}" = yes
       then
	  # F90FLAGS="-g ${F90FLAGS}"
	    F90FLAGS="-g -check bounds -fpe2 ${F90FLAGS}"
       else
	  # F90FLAGS="-O ${F90FLAGS}"
	    F90FLAGS="-O5 -arch host -assume noaccuracy_sensitive -math_library accurate -tune host ${F90FLAGS}"
       fi
   fi


   ;;
   HP)

   # CHECK FOR WORKING HP F90 COMPILER
   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90 && ${F90} +version 2>&1 | grep "HP"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG
   F90FREE='+source=free'
   F90FIXED='+source=fixed'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)
   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='+noshared'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE} +U77"

       if test "${enable_debug:=no}" = yes
       then
	    F90FLAGS="-g -C ${F90FLAGS}"
       else
	    F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
       fi
   fi


   ;;
   Intel)

   # CHECK FOR WORKING INTEL F90 COMPILER
   # Extract the first word of "ifc", so it can be a program name with args.
set dummy ifc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="ifc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = ifc && ${F90} -V 2>&1 | grep "Intel"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG
   F90FREE='-FR'
   F90FIXED='-FI'
   MODFLAG='-I '
   MODSUFFIX='mod'

   # LINKER AND LIBRARY (AR)
   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-static'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE} -e95"

       if test "${enable_debug:=no}" = yes
       then
	    F90FLAGS="-g -C -implicitnone ${F90FLAGS}"
       else
	    F90FLAGS="-O3 -fno-alias -tpp7 -ipo -pad -align ${F90FLAGS}"
       fi
   fi


   ;;
   NAG)

   # CHECK FOR WORKING NAG F90 COMPILER
   # Extract the first word of "f95", so it can be a program name with args.
set dummy f95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f95 && ${F90} -V 2>&1 | grep "NAGWare"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG
   F90FREE='-free'
   F90FIXED='-fixed'
   MODFLAG='-I '

   # LINKER AND LIBRARY (AR)
   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-unsharedf95'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE} -colour -info -target=native"

       if test "${enable_debug:=no}" = yes
       then
          # only use first line if memory error is suspected, too much output
          #   otherwise
	  # F90FLAGS="-g -C -mtrace=size -nan -u ${F90FLAGS}"
	    F90FLAGS="-g -C -nan -u ${F90FLAGS}"
       else
	    F90FLAGS="-O4 ${F90FLAGS}"
       fi
   fi


   ;;
   Absoft)

   # CHECK FOR WORKING ABSOFT F90 COMPILER
   # Extract the first word of "f95", so it can be a program name with args.
set dummy f95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


   # F90FREE, F90FIXED AND MODFLAG
   F90FREE=''
   F90FIXED=''
   MODFLAG='-p '

   # LINKER AND LIBRARY (AR)
   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC=''

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="-cpu:host -en"

       if test "${enable_debug:=no}" = yes
       then
	    F90FLAGS="-g -et -m0 -M399,1193,878 -Rb -Rc -Rs -Rp -trap=ALL ${F90FLAGS}"
       else
	    F90FLAGS="-O3 ${F90FLAGS}"
       fi
   fi


   ;;
   yes)				# guess compiler from target platform
       case "${host}" in
       rs6000-ibm-aix*)

   # Check for working XL F90 compiler

  if test "${with_upslib:=no}" != "no"
  then
     # Extract the first word of "mpxlf95", so it can be a program name with args.
set dummy mpxlf95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="mpxlf95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

     if test "${F90}" != mpxlf95
     then
         { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
     fi
  else
     # Extract the first word of "xlf95", so it can be a program name with args.
set dummy xlf95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="xlf95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

     if test "${F90}" != xlf95
     then
         { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
     fi
  fi

   # FREE, FIXED AND MODULE FLAGS

   F90FREE='-qfree=f90'
   F90FIXED='-qfixed'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=

   # COMPILATION FLAGS

   if test "$F90FLAGS" = ""
   then
     # F90FLAGS="-qsuffix=f=f90 -qmaxmem=-1 -qextchk -qarch=pwr2 -bmaxstack:0x70000000 -bmaxdata:0x70000000 -qalias=noaryovrlp -qhalt=s ${F90FREE}"
       F90FLAGS="-qsuffix=f=f90 -qmaxmem=-1 -qextchk -qarch=auto -bmaxstack:0x70000000 -bmaxdata:0x70000000 -qalias=noaryovrlp -qnosave -qlanglvl=95pure -qzerosize ${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	   trapflags="-qinitauto=FF"
	   trapflags="${trapflags} -qflttrap=overflow:underflow:zerodivide:invalid:enable"
	   trapflags="${trapflags} -qsigtrap"
	   F90FLAGS="-g -d -C ${trapflags} -bloadmap:loadmap.dat ${F90FLAGS}"
       else
	 # F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
	   F90FLAGS="-O3 ${F90FLAGS}"
       fi
   fi


       ;;
       powerpc-ibm-aix*)

   # Check for working XL F90 compiler

  if test "${with_upslib:=no}" != "no"
  then
     # Extract the first word of "mpxlf95", so it can be a program name with args.
set dummy mpxlf95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="mpxlf95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

     if test "${F90}" != mpxlf95
     then
         { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
     fi
  else
     # Extract the first word of "xlf95", so it can be a program name with args.
set dummy xlf95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="xlf95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

     if test "${F90}" != xlf95
     then
         { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
     fi
  fi

   # FREE, FIXED AND MODULE FLAGS

   F90FREE='-qfree=f90'
   F90FIXED='-qfixed'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=

   # COMPILATION FLAGS

   if test "$F90FLAGS" = ""
   then
     # F90FLAGS="-qsuffix=f=f90 -qmaxmem=-1 -qextchk -qarch=pwr2 -bmaxstack:0x70000000 -bmaxdata:0x70000000 -qalias=noaryovrlp -qhalt=s ${F90FREE}"
       F90FLAGS="-qsuffix=f=f90 -qmaxmem=-1 -qextchk -qarch=auto -bmaxstack:0x70000000 -bmaxdata:0x70000000 -qalias=noaryovrlp -qnosave -qlanglvl=95pure -qzerosize ${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	   trapflags="-qinitauto=FF"
	   trapflags="${trapflags} -qflttrap=overflow:underflow:zerodivide:invalid:enable"
	   trapflags="${trapflags} -qsigtrap"
	   F90FLAGS="-g -d -C ${trapflags} -bloadmap:loadmap.dat ${F90FLAGS}"
       else
	 # F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
	   F90FLAGS="-O3 ${F90FLAGS}"
       fi
   fi


       ;;
       sparc-sun-solaris2.*)

   # Check for working WorkShop F90 compiler

   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90 && ${F90} -V 2>&1 | grep "WorkShop"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # Set F90FREE, F90FIXED, and MODFLAG

   F90FREE='-free'
   F90FIXED='-fixed'
   MODFLAG='-M'

   # Set LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-Bstatic'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	    F90FLAGS="-g"
       else
	    F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
       fi
   fi


       ;;
       i?86-pc-linux*)

   # Extract the first word of "lf95", so it can be a program name with args.
set dummy lf95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="lf95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


   # F90FREE, F90FIXED AND MODFLAG

   F90FREE='--nfix'
   F90FIXED='--fix'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-static-flib'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
     # F90FLAGS="--f95 ${F90FREE}"
       F90FLAGS="--staticlink --f95 --in --info --swm 2004,2006,2008,8202,8203,8204,8205,8206,8209,8220 ${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	  # F90FLAGS="-g --chk --trace ${F90FLAGS}"
	    F90FLAGS="-g --ap --chk --pca --private --trap --wo ${F90FLAGS}"
       else
	  # F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
	    F90FLAGS="-O --ntrace ${F90FLAGS}"
       fi
   fi


       ;;
       ymp-cray-unicos*)

   # Check for working Cray F90 compiler

   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # FREE, FIXED AND MODULE FLAGS

   F90FREE='-f free'
   F90FIXED='-f fixed'
   MODFLAG='-p'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE}"

       if test "${enable_debug:=no}" = yes
       then
	   F90FLAGS="-g ${F90FLAGS}"
       else
	   F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
       fi
   fi


       ;;
       mips-sgi-irix*)

   # Look for working MIPS compiler

   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90 && ${F90} -version 2>&1 | grep "MIPS"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # Set F90FREE, F90FIXED, and MODFLAG

   F90FREE='-freeform'
   F90FIXED='-col72'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
	#F90FLAGS="${F90FREE} -OPT:Olimit=0"
	F90FLAGS="${F90FREE} -mips4 -r10000 -DEBUG:fullwarn=ON:woff=878,938,1193,1438"

	if test "${enable_debug:=no}" = yes
	then
	  # F90FLAGS="-g ${F90FLAGS}"
	    F90FLAGS="-g -check_bounds -DEBUG:trap_uninitialized=ON ${F90FLAGS}"
	else
	  # F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
	    F90FLAGS="-O3 -OPT:IEEE_arithmetic=2:roundoff=2 ${F90FLAGS}"
	fi
   fi


       ;;
       i??86-pc-cygwin*)

   # Check for working compaq F90 compiler

   # Extract the first word of "f95", so it can be a program name with args.
set dummy f95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f95 && ${F90} -version 2>&1 | grep "Fortran"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG

   F90FREE=''
   F90FIXED=''
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-non_shared'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
     # F90FLAGS="${F90FREE} -assume byterecl"
       F90FLAGS="${F90FREE} -assume byterecl -automatic -std -warn argument_checking"

       if test "${enable_debug:=no}" = yes
       then
	  # F90FLAGS="-g ${F90FLAGS}"
	    F90FLAGS="-g -check bounds -fpe2 ${F90FLAGS}"
       else
	  # F90FLAGS="-O ${F90FLAGS}"
	    F90FLAGS="-O5 -arch host -assume noaccuracy_sensitive -math_library accurate -tune host ${F90FLAGS}"
       fi
   fi


       ;;
       alpha*)

   # Check for working compaq F90 compiler

   # Extract the first word of "f95", so it can be a program name with args.
set dummy f95; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f95"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f95 && ${F90} -version 2>&1 | grep "Fortran"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG

   F90FREE=''
   F90FIXED=''
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)

   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='-non_shared'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
     # F90FLAGS="${F90FREE} -assume byterecl"
       F90FLAGS="${F90FREE} -assume byterecl -automatic -std -warn argument_checking"

       if test "${enable_debug:=no}" = yes
       then
	  # F90FLAGS="-g ${F90FLAGS}"
	    F90FLAGS="-g -check bounds -fpe2 ${F90FLAGS}"
       else
	  # F90FLAGS="-O ${F90FLAGS}"
	    F90FLAGS="-O5 -arch host -assume noaccuracy_sensitive -math_library accurate -tune host ${F90FLAGS}"
       fi
   fi


       ;;
       *hp-hpux*)

   # CHECK FOR WORKING HP F90 COMPILER
   # Extract the first word of "f90", so it can be a program name with args.
set dummy f90; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="f90"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_F90" && ac_cv_prog_F90="none"
fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

   if test "${F90}" = f90 && ${F90} +version 2>&1 | grep "HP"
   then
       :
   else
       { { echo "$as_me:$LINENO: error: not found" >&5
echo "$as_me: error: not found" >&2;}
   { (exit 1); exit 1; }; }
   fi

   # F90FREE, F90FIXED AND MODFLAG
   F90FREE='+source=free'
   F90FIXED='+source=fixed'
   MODFLAG='-I'

   # LINKER AND LIBRARY (AR)
   LD='${F90}'
   AR='ar'
   ARFLAGS=
   ARLIBS=
   F90STATIC='+noshared'

   # SET COMPILATION FLAGS IF NOT SET IN ENVIRONMENT
   if test "$F90FLAGS" = ""
   then
       F90FLAGS="${F90FREE} +U77"

       if test "${enable_debug:=no}" = yes
       then
	    F90FLAGS="-g -C ${F90FLAGS}"
       else
	    F90FLAGS="-O${with_opt:=} ${F90FLAGS}"
       fi
   fi


       ;;
       *)
          { { echo "$as_me:$LINENO: error: Cannot guess F90 compiler, set --with-f90" >&5
echo "$as_me: error: Cannot guess F90 compiler, set --with-f90" >&2;}
   { (exit 1); exit 1; }; }
       ;;
       esac
   ;;
   no)
   ;;
   *)
       { { echo "$as_me:$LINENO: error: Unrecognized F90 compiler, use --help" >&5
echo "$as_me: error: Unrecognized F90 compiler, use --help" >&2;}
   { (exit 1); exit 1; }; }
   ;;
   esac






   else

       # set up the C++ compilers; if with_cxx is undefined, an
       # appropriate default for the machine will be choosen

   # make sure that the host is defined


      case $host in

   # IRIX -> CC
   mips-sgi-irix6.*)
       if test -z "${with_cxx}" ; then
	   with_cxx='sgi'
       fi
   ;;

   # COMPAQ -> CXX
   alpha*-dec-osf*)
       if test -z "${with_cxx}" ; then
	   with_cxx='compaq'
       fi
   ;;

   # IBM ASCI WHITE -> newxlC (use --with-cxx=ibm for regular SP2)
   *ibm-aix*)
       if test -z "${with_cxx}" ; then
	   with_cxx='asciwhite'
       fi
   ;;

   # EVERYTHING ELSE -> gcc
   *)
       if test -z "${with_cxx}" ; then
	   with_cxx='gcc'
       fi
   ;;
   esac


   # do tests of --with-cxx, see if the compiler exists and then call
   # the proper setup function

   if test "${with_cxx}" = sgi ; then
       # Extract the first word of "CC", so it can be a program name with args.
set dummy CC; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="CC"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

       # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="cc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


       if test "${CXX}" = CC && test "${CC}" = cc ; then

   echo "$as_me:$LINENO: checking \"configuration of ${CXX}/${CC} compilers\"" >&5
echo $ECHO_N "checking \"configuration of ${CXX}/${CC} compilers\"... $ECHO_C" >&6

   # dirs to clean
   dirstoclean='ii_files'

   # LINKER AND LIBRARY (AR)
   LD='${CXX}'
   AR='${CXX}'
   ARLIBS='${DRACO_LIBS}'
   ARTESTLIBS='${PKG_LIBS} ${DRACO_TEST_LIBS} ${DRACO_LIBS}'

   # for CC we need to add a flag to AR to determine whether we build
   # shared or archive libraries
   if test "${enable_shared}" = yes ; then
       ARFLAGS='-shared -o'
   else
       ARFLAGS='-ar -o'
   fi

   # COMPILATION FLAGS

   # strict asci compliance
   if test "${enable_strict_ansi:=yes}" = yes ; then
       # not really sure what the CC strict flag is, however, since
       # KCC can do our "strict" checking for us this is probably
       # not a big deal
       STRICTFLAG=""
   fi

   # optimization level
   # as opposed to KCC, -g overrides the optimization level, thus, we
   # assume that debug is the default, however, if an optimization
   # level is set we turn of debugging
   if test "${with_opt:=0}" != 0 ; then
       CXXFLAGS="${CXXFLAGS} -O${with_opt}"
       CFLAGS="${CFLAGS} -O${with_opt}"
       enable_debug="no"
   fi

   if test "${enable_debug:=yes}" = yes ; then
       CXXFLAGS="${CXXFLAGS} -g"
       CFLAGS="${CFLAGS} -g"
   fi

   # static linking option
   if test "${enable_static_ld}" = yes ; then
       LDFLAGS="${LDFLAGS} -non_shared"
   fi

   # final compiler additions
   CXXFLAGS="${CXXFLAGS} -LANG:std -no_auto_include"
   LDFLAGS="${LDFLAGS} -LANG:std"

   echo "$as_me:$LINENO: result: \"SGI CC compiler flags set\"" >&5
echo "${ECHO_T}\"SGI CC compiler flags set\"" >&6


       else
	   { { echo "$as_me:$LINENO: error: \"Did not find SGI CC compiler!\"" >&5
echo "$as_me: error: \"Did not find SGI CC compiler!\"" >&2;}
   { (exit 1); exit 1; }; }
       fi

   elif test "${with_cxx}" = gcc ; then
       # Extract the first word of "g++", so it can be a program name with args.
set dummy g++; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="g++"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

       # Extract the first word of "gcc", so it can be a program name with args.
set dummy gcc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="gcc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


       if test "${CXX}" = g++ && test "${CC}" = gcc ; then

   # finding path of gcc compiler
   # Extract the first word of "g++", so it can be a program name with args.
set dummy g++; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_GCC_BIN+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $GCC_BIN in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GCC_BIN="$GCC_BIN" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_GCC_BIN="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_GCC_BIN" && ac_cv_path_GCC_BIN="null"
  ;;
esac
fi
GCC_BIN=$ac_cv_path_GCC_BIN

if test -n "$GCC_BIN"; then
  echo "$as_me:$LINENO: result: $GCC_BIN" >&5
echo "${ECHO_T}$GCC_BIN" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


   echo "$as_me:$LINENO: checking \"Setting library path of GNU compiler\"" >&5
echo $ECHO_N "checking \"Setting library path of GNU compiler\"... $ECHO_C" >&6
   if test "${GCC_BIN}" = null ; then
       GCC_LIB_DIR='/usr/lib'
   else
       GCC_BIN=`dirname ${GCC_BIN}`
       GCC_HOME=`dirname ${GCC_BIN}`

       # Ensure that libraries exist at this location.  If we can't
       # find libstdc++.a at this location we leave GCC_LIB_DIR set to
       # null and issue a warning.

       if test -r ${GCC_HOME}/lib/libstdc++.a; then
         GCC_LIB_DIR="${GCC_HOME}/lib"
       fi
   fi
   echo "$as_me:$LINENO: result: \"${GCC_LIB_DIR}\"" >&5
echo "${ECHO_T}\"${GCC_LIB_DIR}\"" >&6

   if test -z ${GCC_LIB_DIR}; then
       { echo "$as_me:$LINENO: WARNING: \"Could not determine location of gcc libraries. GCC_LIB_DIR is null\"" >&5
echo "$as_me: WARNING: \"Could not determine location of gcc libraries. GCC_LIB_DIR is null\"" >&2;}
   fi

   # do compiler configuration
   echo "$as_me:$LINENO: checking \"configuration of ${CXX}/${CC} compilers\"" >&5
echo $ECHO_N "checking \"configuration of ${CXX}/${CC} compilers\"... $ECHO_C" >&6

   # LINKER AND LIBRARY (AR)
   LD='${CXX}'

   # if shared then ar is gcc
   if test "${enable_shared}" = yes ; then
       AR="${CXX}"
       ARFLAGS='-shared -o'
   else
       AR='ar'
       ARFLAGS='cr'
   fi

   ARLIBS=''
   ARTESTLIBS=''

   # COMPILATION FLAGS

   # strict asci compliance
   if test "${enable_strict_ansi:=yes}" = yes ; then
       STRICTFLAG="-ansi -Wnon-virtual-dtor -Wreturn-type -pedantic"
   fi

   # optimization level
   # gcc allows -g with -O (like KCC)

   # set opt level in flags
   gcc_opt_flags="-O${with_opt:=0}"

   # set up compiler when optimized
   if test "${with_opt}" != 0; then

       # set up inlining when optimization is on
       gcc_opt_flags="-finline-functions ${gcc_opt_flags}"

       # turn off debug flag by default if not requested explicitly
       if test "${enable_debug:=no}" = yes ; then
	   gcc_opt_flags="-g ${gcc_opt_flags}"
       fi

   # set up compiler when not optimized
   else

       # default is to have debug flag on when opt=0
       if test "${enable_debug:=yes}" = yes ; then
	   gcc_opt_flags="-g ${gcc_opt_flags}"
       fi

   fi

   # add opt flags
   CXXFLAGS="${gcc_opt_flags} ${CXXFLAGS}"
   CFLAGS="${gcc_opt_flags} ${CFLAGS}"

   # RPATH FLAGS

   # add -rpath for the compiler library (G++ as LD does not do this
   # automatically) if required.
   case $host in

   # Darwin doesn't need any special flags
   powerpc-apple-darwin*)
   ;;

   # COMPAQ -> CXX
   alpha*-dec-osf*)
   ;;

   # EVERYTHING ELSE -> linux?
   *)
      if test -n "${GCC_LIB_DIR}"; then
           RPATH="${RPATH} -Xlinker -rpath ${GCC_LIB_DIR}"
      fi
   ;;
   esac

   # static linking option
   if test "${enable_static_ld}" = yes ; then
       LDFLAGS="${LDFLAGS} -Bstatic"
   fi

   echo "$as_me:$LINENO: result: \"GNU g++ compiler flags set\"" >&5
echo "${ECHO_T}\"GNU g++ compiler flags set\"" >&6


       else
	   { { echo "$as_me:$LINENO: error: \"Did not find gnu c++ compiler!\"" >&5
echo "$as_me: error: \"Did not find gnu c++ compiler!\"" >&2;}
   { (exit 1); exit 1; }; }
       fi

   elif test "${with_cxx}" = compaq ; then
       # Extract the first word of "cxx", so it can be a program name with args.
set dummy cxx; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="cxx"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

       # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="cc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


       if test "${CXX}" = cxx && test "${CC}" = cc ; then


   echo "$as_me:$LINENO: checking \"configuration of ${CXX}/${CC} compilers\"" >&5
echo $ECHO_N "checking \"configuration of ${CXX}/${CC} compilers\"... $ECHO_C" >&6

   # CXX SPECIFIC FLAGS
   dirstoclean='cxx_repository'

   # LINKER AND LIBRARY (AR)
   LD='${CXX}'

   # if shared then ar is cxx
   if test "${enable_shared}" = yes ; then
       AR='${CXX}'
       ARFLAGS="-shared -nocxxstd"
       ARFLAGS="${ARFLAGS} -o"
   else
       AR='ar'
       ARFLAGS='cr'
   fi

   # the contents of the cxx_repository do not seem to need adding
   # when building shared libraries; you do have to add them for
   # archives
   if test "${enable_shared}" != yes ; then
       ARLIBS='$(wildcard cxx_repository/*)'
       ARTESTLIBS='$(wildcard cxx_repository/*)'
   fi

   # COMPILATION FLAGS

   # strict asci compliance
   if test "${enable_strict_ansi:=yes}" = yes ; then
       STRICTFLAG="-std strict_ansi"
       CXX="${CXX} -model ansi"
   fi

   # make sure we always use the standard IO stream
   CPPFLAGS="${CPPFLAGS} -D__USE_STD_IOSTREAM"

   # optimization level

   # if optimization is on turn off debug flag unless asked for
   if test "${with_opt:=0}" != 0 ; then

       # if debug is on then use -g1,2,3
       if test "${enable_debug:=no}" = yes ; then
	   cxx_opt_flag="-g${with_opt}"
       else
	   cxx_opt_flag="-O${with_opt}"
       fi

   # turn off optimizations
   else

       # we want -g unless not asked for
       if test "${enable_debug:=yes}" = yes ; then
	   cxx_opt_flag="-g -O0"
       else
	   cxx_opt_flag="-O0"
       fi

   fi

   # set up cxx flags
   CXXFLAGS="${CXXFLAGS} ${cxx_opt_flag}"
   CFLAGS="${CFLAGS} ${cxx_opt_flag}"

   # add ieee flag
   CXXFLAGS="${CXXFLAGS} -ieee"
   CFLAGS="${CFLAGS} -ieee"

   # turn off implicit inclusion
   CXXFLAGS="${CXXFLAGS} -noimplicit_include"

   # use the -pt template option for the compiler:
   # -pt Automatically instantiate templates into the repository with
   #  external linkage. Manually instantiated templates are placed in
   #  the output object with external linkage. This option is the default.
   CXXFLAGS="${CXXFLAGS} -pt"

   # static linking option
   if test "${enable_static_ld}" = yes ; then
       LDFLAGS="${LDFLAGS} -non_shared"
   fi

   # add thread safe linkage
   LDFLAGS="${LDFLAGS}" # -pthread"

   echo "$as_me:$LINENO: result: \"CXX Compaq compiler flags set\"" >&5
echo "${ECHO_T}\"CXX Compaq compiler flags set\"" >&6


       else
	   { { echo "$as_me:$LINENO: error: \"Did not find Compaq cxx compiler!\"" >&5
echo "$as_me: error: \"Did not find Compaq cxx compiler!\"" >&2;}
   { (exit 1); exit 1; }; }
       fi

   elif test "${with_cxx}" = icpc ; then
       # Extract the first word of "icpc", so it can be a program name with args.
set dummy icpc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="icpc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


       if test "${CXX}" = icpc ; then
	   CC='icpc'

   echo "$as_me:$LINENO: checking \"configuration of ${CXX}/${CC} compilers\"" >&5
echo $ECHO_N "checking \"configuration of ${CXX}/${CC} compilers\"... $ECHO_C" >&6

   # icpc SPECIFIC FLAGS

   # LINKER AND LIBRARY
   LD='${CXX}'

   # if shared then ar is icpc
   if test "${enable_shared}" = yes ; then
       AR="${CXX}"
       ARFLAGS='-shared -o'
   else
       AR='ar'
       ARFLAGS='cr'
   fi

   ARLIBS=''
   ARTESTLIBS=''

   # COMPILATION FLAGS

   # strict asci compliance
   if test "${enable_strict_ansi:=yes}" = yes ; then
       STRICTFLAG="-ansi"
   fi

   # set up compiler when optimized (enable inline keyword but not
   # compiler-choice inlining)
   if test "${with_opt:=0}" != 0 ; then

       # turn off debug by default
       if test "${enable_debug:=no}" = yes ; then
	   icpc_opt_flags="-g -O${with_opt} -Ob1 -ip"
       else
	   icpc_opt_flags="-O${with_opt} -Ob1"
       fi

   #set up compiler when not optimized (turn off inlining with -Ob0)
   else

       # turn on debug by default
       if test "${enable_debug:=yes}" = yes ; then
	   icpc_opt_flags="-g -O0 -Ob0"
       else
	   icpc_opt_flags="-O0 -Ob0"
       fi

   fi

   # set the cxx and c flags
   CXXFLAGS="${CXXFLAGS} ${icpc_opt_flags}"
   CFLAGS="${CFLAGS} ${icpc_opt_flags}"

   # static linking option
   if test "${enable_static_ld}" = yes ; then
       LDFLAGS="${LDFLAGS} -static"
   fi

   echo "$as_me:$LINENO: result: \"icpc compiler flags set\"" >&5
echo "${ECHO_T}\"icpc compiler flags set\"" >&6


       else
	   { { echo "$as_me:$LINENO: error: \"Did not find Intel icpc compiler!\"" >&5
echo "$as_me: error: \"Did not find Intel icpc compiler!\"" >&2;}
   { (exit 1); exit 1; }; }
       fi

   elif test "${with_cxx}" = pgi ; then
       # only allow PGI on LINUX
       case $host in
       *-linux-gnu)
           # Extract the first word of "pgCC", so it can be a program name with args.
set dummy pgCC; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="pgCC"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


           if test "${CXX}" = pgCC ; then
               CC='pgcc'

   # do compiler configuration
   echo "$as_me:$LINENO: checking \"configuration of ${CXX}/${CC} compilers\"" >&5
echo $ECHO_N "checking \"configuration of ${CXX}/${CC} compilers\"... $ECHO_C" >&6

   # LINKER AND LIBRARY (AR)
   LD='${CXX}'

   # if shared then ar is pgCC
   if test "${enable_shared}" = yes ; then
       AR="${CXX}"
       ARFLAGS='-shared -o'

       # must use position-independent code
       CXXFLAGS="${CXXFLAGS} -fPIC"
       CFLAGS="${CFLAGS} -fPIC"
   else
       AR='ar'
       ARFLAGS='cr'
   fi

   ARLIBS=''
   ARTESTLIBS=''

   # COMPILATION FLAGS

   # strict asci compliance
   if test "${enable_strict_ansi:=yes}" = yes ; then
       STRICTFLAG="-Xa -A --no_using_std"

       # suppress long long errors in the platform-dependent options
       # section

       # suppress missing return statement warning (we get this in
       # nearly every STL inclusion through PGICC)
       STRICTFLAG="--diag_suppress 940 ${STRICTFLAG}"
   fi

   # optimization level
   # pgCC allows -g with -O

   # set opt level in flags
   pgcc_opt_flags="-O${with_opt:=0}"

   # set up compiler when optimized
   if test "${with_opt}" != 0; then

       # set up inlining when optimization is on
       pgcc_opt_flags="${pgcc_opt_flags}"

       # turn off debug flag by default if not requested explicitly
       if test "${enable_debug:=no}" = yes ; then
	   pgcc_opt_flags="-g ${pgcc_opt_flags}"
       fi

   # set up compiler when not optimized
   else

       # default is to have debug flag on when opt=0
       if test "${enable_debug:=yes}" = yes ; then
	   pgcc_opt_flags="-g ${pgcc_opt_flags}"
       fi

   fi

   # add opt flags
   CXXFLAGS="${pgcc_opt_flags} ${CXXFLAGS}"
   CFLAGS="${pgcc_opt_flags} ${CFLAGS}"

   # add ieee flag
   CXXFLAGS="${CXXFLAGS} -Kieee"
   CFLAGS="${CFLAGS} -Kieee"

   # instantiate only functions that are used in the compilation
   CXXFLAGS="${CXXFLAGS} -t=used --no_implicit_include"

   # set unnormalized values to zero
   CXXFLAGS="${CXXFLAGS} -Mdaz"
   CFLAGS="${CFLAGS} -Mdaz"

   echo "$as_me:$LINENO: result: \"PGI pgCC compiler flags set\"" >&5
echo "${ECHO_T}\"PGI pgCC compiler flags set\"" >&6


           else
               { { echo "$as_me:$LINENO: error: \"Did not find PGI C++ compiler!\"" >&5
echo "$as_me: error: \"Did not find PGI C++ compiler!\"" >&2;}
   { (exit 1); exit 1; }; }
           fi
       ;;
       *)
           { { echo "$as_me:$LINENO: error: \"PGI only available on LINUX.\"" >&5
echo "$as_me: error: \"PGI only available on LINUX.\"" >&2;}
   { (exit 1); exit 1; }; }
       ;;
       esac

   elif test "${with_cxx}" = ibm ; then
       # Extract the first word of "xlC", so it can be a program name with args.
set dummy xlC; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="xlC"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

       # Extract the first word of "xlc", so it can be a program name with args.
set dummy xlc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="xlc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


       if test "${CXX}" = xlC ; then

   echo "$as_me:$LINENO: checking \"configuration of ${CXX}/${CC} compilers\"" >&5
echo $ECHO_N "checking \"configuration of ${CXX}/${CC} compilers\"... $ECHO_C" >&6

   # xlC SPECIFIC FLAGS

   # LINKER AND LIBRARY
   LD='${CXX}'

   # if shared then ar is xlC
   if test "${enable_shared}" = yes ; then
       AR="${CXX}"
       ARFLAGS='-brtl -Wl,-bh:5 -G -o'

       # when AR=newmpxlC we need to add /lib/crt0.o to
       # avoid p_argcx and p_argvx link error when building libs
       if test "${AR}" = newmpxlC ; then
	   ARLIBS='/lib/crt0.o'
	   ARTESTLIBS='/lib/crt0.o'
       fi

       ARLIBS="${ARLIBS} \${DRACO_LIBS} \${VENDOR_LIBS}"
       ARTESTLIBS="${ARTESTLIBS} \${PKG_LIBS} \${DRACO_TEST_LIBS}"
       ARTESTLIBS="${ARTESTLIBS} \${DRACO_LIBS}\${VENDOR_TEST_LIBS}"
       ARTESTLIBS="${ARTESTLIBS} \${VENDOR_LIBS}"
   else
       AR='ar'
       ARFLAGS='cr'

       ARLIBS=''
       ARTESTLIBS=''
   fi

   # COMPILATION FLAGS

   # strict asci compliance
   if test "${enable_strict_ansi:=yes}" = yes ; then
       STRICTFLAG="-qlanglvl=strict98"
   fi

   # the qinline option controls inlining, when -g is on no inlining
   # is done, with -O# inlining is on by default

   # set up compiler when optimized
   if test "${with_opt:=0}" != 0; then

       # optflags
       xlC_opt_flags="-qarch=auto -qtune=auto -qcache=auto"

       # optimization level
       if test "${with_opt}" = 1; then
	   # if asking for 1 just use opt in ibm
	   xlC_opt_flags="${xlC_opt_flags} -qopt"
       else
	   # otherwise use number

	   # turn of aggressive semantic optimizations on all levels
	   # -O2 and above
	   xlC_opt_flags="${xlC_opt_flags} -qopt=${with_opt} -qstrict"
       fi

       # turn off debug by default
       if test "${enable_debug:=no}" = yes ; then
	   xlC_opt_flags="-g ${xlC_opt_flags}"
       fi

   #set up compiler when not optimized
   else

       # optflags
       xlC_opt_flags="-qnoopt"

       # turn on debug by default
       if test "${enable_debug:=yes}" = yes ; then
	   xlC_opt_flags="-g ${xlC_opt_flags}"
       fi

   fi

   # set the CXX and CC flags

   # set the optimizations
   CXXFLAGS="${CXXFLAGS} ${xlC_opt_flags}"
   CFLAGS="${CFLAGS} ${xlC_opt_flags}"

   # set template stuff
   CXXFLAGS="${CXXFLAGS} -w -qnotempinc"

   # static linking option
   if test "${enable_static_ld:=no}" = yes ; then
       LDFLAGS="${LDFLAGS} -bstatic"

   # if we are building shared libraries we need to add
   # run-time-linking
   else
       LDFLAGS="${LDFLAGS} -brtl -Wl,-bh:5"

   fi

   echo "$as_me:$LINENO: result: \"${CXX} compiler flags set\"" >&5
echo "${ECHO_T}\"${CXX} compiler flags set\"" >&6


       else
	   { { echo "$as_me:$LINENO: error: \"Did not find IBM Visual Age xlC compiler!\"" >&5
echo "$as_me: error: \"Did not find IBM Visual Age xlC compiler!\"" >&2;}
   { (exit 1); exit 1; }; }
       fi

   elif test "${with_cxx}" = asciwhite ; then
       # asci white uses different executables depending upon
       # the mpi setup; so we check to see if mpi is on
       # and set the executable appropriately

       # mpi is on, use newmpxlC
       if test -n "${vendor_mpi}" && test "${with_mpi}" = vendor; then
	   # Extract the first word of "newmpxlC", so it can be a program name with args.
set dummy newmpxlC; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="newmpxlC"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

	   # Extract the first word of "newmpxlc", so it can be a program name with args.
set dummy newmpxlc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="newmpxlc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


       # scalar build, use newxlC
       else
	   # Extract the first word of "newxlC", so it can be a program name with args.
set dummy newxlC; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="newxlC"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

	   # Extract the first word of "newxlc", so it can be a program name with args.
set dummy newxlc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="newxlc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


       fi

       # check to make sure compiler is valid
       if test "${CXX}" = newxlC || test "${CXX}" = newmpxlC ; then

   echo "$as_me:$LINENO: checking \"configuration of ${CXX}/${CC} compilers\"" >&5
echo $ECHO_N "checking \"configuration of ${CXX}/${CC} compilers\"... $ECHO_C" >&6

   # xlC SPECIFIC FLAGS

   # LINKER AND LIBRARY
   LD='${CXX}'

   # if shared then ar is xlC
   if test "${enable_shared}" = yes ; then
       AR="${CXX}"
       ARFLAGS='-brtl -Wl,-bh:5 -G -o'

       # when AR=newmpxlC we need to add /lib/crt0.o to
       # avoid p_argcx and p_argvx link error when building libs
       if test "${AR}" = newmpxlC ; then
	   ARLIBS='/lib/crt0.o'
	   ARTESTLIBS='/lib/crt0.o'
       fi

       ARLIBS="${ARLIBS} \${DRACO_LIBS} \${VENDOR_LIBS}"
       ARTESTLIBS="${ARTESTLIBS} \${PKG_LIBS} \${DRACO_TEST_LIBS}"
       ARTESTLIBS="${ARTESTLIBS} \${DRACO_LIBS}\${VENDOR_TEST_LIBS}"
       ARTESTLIBS="${ARTESTLIBS} \${VENDOR_LIBS}"
   else
       AR='ar'
       ARFLAGS='cr'

       ARLIBS=''
       ARTESTLIBS=''
   fi

   # COMPILATION FLAGS

   # strict asci compliance
   if test "${enable_strict_ansi:=yes}" = yes ; then
       STRICTFLAG="-qlanglvl=strict98"
   fi

   # the qinline option controls inlining, when -g is on no inlining
   # is done, with -O# inlining is on by default

   # set up compiler when optimized
   if test "${with_opt:=0}" != 0; then

       # optflags
       xlC_opt_flags="-qarch=auto -qtune=auto -qcache=auto"

       # optimization level
       if test "${with_opt}" = 1; then
	   # if asking for 1 just use opt in ibm
	   xlC_opt_flags="${xlC_opt_flags} -qopt"
       else
	   # otherwise use number

	   # turn of aggressive semantic optimizations on all levels
	   # -O2 and above
	   xlC_opt_flags="${xlC_opt_flags} -qopt=${with_opt} -qstrict"
       fi

       # turn off debug by default
       if test "${enable_debug:=no}" = yes ; then
	   xlC_opt_flags="-g ${xlC_opt_flags}"
       fi

   #set up compiler when not optimized
   else

       # optflags
       xlC_opt_flags="-qnoopt"

       # turn on debug by default
       if test "${enable_debug:=yes}" = yes ; then
	   xlC_opt_flags="-g ${xlC_opt_flags}"
       fi

   fi

   # set the CXX and CC flags

   # set the optimizations
   CXXFLAGS="${CXXFLAGS} ${xlC_opt_flags}"
   CFLAGS="${CFLAGS} ${xlC_opt_flags}"

   # set template stuff
   CXXFLAGS="${CXXFLAGS} -w -qnotempinc"

   # static linking option
   if test "${enable_static_ld:=no}" = yes ; then
       LDFLAGS="${LDFLAGS} -bstatic"

   # if we are building shared libraries we need to add
   # run-time-linking
   else
       LDFLAGS="${LDFLAGS} -brtl -Wl,-bh:5"

   fi

   echo "$as_me:$LINENO: result: \"${CXX} compiler flags set\"" >&5
echo "${ECHO_T}\"${CXX} compiler flags set\"" >&6


       else
	   { { echo "$as_me:$LINENO: error: \"Did not find ASCI White new(mp)xlC compiler!\"" >&5
echo "$as_me: error: \"Did not find ASCI White new(mp)xlC compiler!\"" >&2;}
   { (exit 1); exit 1; }; }
       fi

   else
       { { echo "$as_me:$LINENO: error: \"invalid compiler specification ${with_cxx}\"" >&5
echo "$as_me: error: \"invalid compiler specification ${with_cxx}\"" >&2;}
   { (exit 1); exit 1; }; }

   fi

   # set the language to C++
   ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu



   fi


   echo "$as_me:$LINENO: checking \"for stlport\"" >&5
echo $ECHO_N "checking \"for stlport\"... $ECHO_C" >&6
   if test "${with_stlport:=no}" != no; then
      if ! test -d "${with_stlport}/include"; then
         { { echo "$as_me:$LINENO: error: \"Invalid directory ${with_stlport}/include\"" >&5
echo "$as_me: error: \"Invalid directory ${with_stlport}/include\"" >&2;}
   { (exit 1); exit 1; }; }
      fi
      CPPFLAGS="-I${with_stlport}/include ${CPPFLAGS}"
      echo "$as_me:$LINENO: result: Yes. -I${with_stlport}/include added to CPPFLAGS." >&5
echo "${ECHO_T}Yes. -I${with_stlport}/include added to CPPFLAGS." >&6

                  echo "$as_me:$LINENO: checking \"for debug stlport mode\"" >&5
echo $ECHO_N "checking \"for debug stlport mode\"... $ECHO_C" >&6
#     if test "${enable_debug:-yes}" = yes; then
         if ! test -r "${with_stlport}/lib/libstlportstlg.so"; then
            { { echo "$as_me:$LINENO: error: \"Invalid library ${with_stlport}/lib/libstlportstlg.so\"" >&5
echo "$as_me: error: \"Invalid library ${with_stlport}/lib/libstlportstlg.so\"" >&2;}
   { (exit 1); exit 1; }; }
         fi
         LIBS="-L${with_stlport}/lib -lstlportstlg ${LIBS}"
         CPPFLAGS="${CPPFLAGS} -D_STLP_DEBUG"
         echo "$as_me:$LINENO: result: Yes. -D_STLP_DEBUG added to CPPFLAGS. -L${with_stlport}/lib -lstlportstlg added to LIBS." >&5
echo "${ECHO_T}Yes. -D_STLP_DEBUG added to CPPFLAGS. -L${with_stlport}/lib -lstlportstlg added to LIBS." >&6
#      else
#         dnl Use optimized STLport libraries.
#         if ! test -r "${with_stlport}/lib/libstlport.so"; then
#            AC_MSG_ERROR("Invalid library ${with_stlport}/lib/libstlport.so")
#         fi
#         LIBS="-L${with_stlport}/lib -lstlport ${LIBS}"
#         AC_MSG_RESULT([No. -L${with_stlport}/lib -lstlport added to LIBS.])
#      fi

      echo "$as_me:$LINENO: checking \"for RPATH mods for stlport\"" >&5
echo $ECHO_N "checking \"for RPATH mods for stlport\"... $ECHO_C" >&6
      RPATH="-Xlinker -rpath ${with_stlport}/lib ${RPATH}"
      echo "$as_me:$LINENO: result: \"Added -Xlinker -rpath ${with_stlport}/lib to RPATH\"" >&5
echo "${ECHO_T}\"Added -Xlinker -rpath ${with_stlport}/lib to RPATH\"" >&6

   elif test "${with_stlport}" = yes; then
      { { echo "$as_me:$LINENO: error: \"Must define path to stlport when using --with-stlport=dir\"" >&5
echo "$as_me: error: \"Must define path to stlport when using --with-stlport=dir\"" >&2;}
   { (exit 1); exit 1; }; }
   else
      echo "$as_me:$LINENO: result: \"none\"" >&5
echo "${ECHO_T}\"none\"" >&6
   fi




   # add user defined cppflags
   if test "${with_cppflags:=no}" != no ; then
       CPPFLAGS="${with_cppflags} ${CPPFLAGS}"
   fi

   # add user defined cxxflags
   if test "${with_cxxflags:=no}" != no ; then
       CXXFLAGS="${with_cxxflags} ${CXXFLAGS}"
   fi

   # add user defined cflags
   if test "${with_cflags:=no}" != no ; then
       CFLAGS="${with_cflags} ${CFLAGS}"
   fi

   # add user defined f90flags
   if test "${with_f90flags:=no}" != no ; then
       F90FLAGS="${with_f90flags} ${F90FLAGS}"
   fi

   # add user defined ARFLAGS
   if test "${with_arflags:=no}" != no ; then
       ARFLAGS="${with_arflags} ${ARFLAGS}"
   fi

   # add user defined LDFLAGS
   if test "${with_ldflags:=no}" != no ; then
       LDFLAGS="${with_ldflags} ${LDFLAGS}"
   fi

   # check user added libs (using --with-libs); these are appended to
   # LIBS after the machine-specific setup
   if test "${with_libs}" = yes ; then
       { { echo "$as_me:$LINENO: error: \"Must define libs when using --with-libs\"" >&5
echo "$as_me: error: \"Must define libs when using --with-libs\"" >&2;}
   { (exit 1); exit 1; }; }
   fi


   if test "${with_cxxflags}" = yes || test "${with_cflags}" = yes ||\
      test "${with_f90flags}" = yes || test "${with_arflags}" = yes \
      || test "${with_ldflags}" = yes \
      || test "${with_cppflags}" = yes ; then
       { { echo "$as_me:$LINENO: error: \"Poor definition of user defined flags!\"" >&5
echo "$as_me: error: \"Poor definition of user defined flags!\"" >&2;}
   { (exit 1); exit 1; }; }
   fi

      if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
set dummy ${ac_tool_prefix}ranlib; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_RANLIB+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$RANLIB"; then
  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
RANLIB=$ac_cv_prog_RANLIB
if test -n "$RANLIB"; then
  echo "$as_me:$LINENO: result: $RANLIB" >&5
echo "${ECHO_T}$RANLIB" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

fi
if test -z "$ac_cv_prog_RANLIB"; then
  ac_ct_RANLIB=$RANLIB
  # Extract the first word of "ranlib", so it can be a program name with args.
set dummy ranlib; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$ac_ct_RANLIB"; then
  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_RANLIB="ranlib"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_ac_ct_RANLIB" && ac_cv_prog_ac_ct_RANLIB=":"
fi
fi
ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
if test -n "$ac_ct_RANLIB"; then
  echo "$as_me:$LINENO: result: $ac_ct_RANLIB" >&5
echo "${ECHO_T}$ac_ct_RANLIB" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  RANLIB=$ac_ct_RANLIB
else
  RANLIB="$ac_cv_prog_RANLIB"
fi



   # this function macro sets up all of the platform specific
   # environment parameters (except compilers)

   # we must know the host


   # dependency rules
   DEPENDENCY_RULES='Makefile.dep.general'

   # systems setup
   case $host in

   # ***********
   # LINUX SETUP
   # ***********
   *-linux-gnu)

       # print out cpu message
       echo "$as_me:$LINENO: checking \"host platform cpu\"" >&5
echo $ECHO_N "checking \"host platform cpu\"... $ECHO_C" >&6
       echo "$as_me:$LINENO: result: \"${host_cpu}\"" >&5
echo "${ECHO_T}\"${host_cpu}\"" >&6


       if test "${with_posix:=no}" = yes ; then
	   with_posix='199309L'
       fi

       if test "${with_posix}" != no ; then
	   cat >>confdefs.h <<\_ACEOF
#define _POSIX_SOURCE 1
_ACEOF

	   cat >>confdefs.h <<_ACEOF
#define _POSIX_C_SOURCE $with_posix
_ACEOF

       fi



       #
       # LONG LONG on Linux
       #

       # always allow long long in strict ansi mode (if possible)

       if test -n "${STRICTFLAG}"; then

           case $CXX in

           # GNU g++
           g++)
               { echo "$as_me:$LINENO: g++ -ansi option set to allow long long type!" >&5
echo "$as_me: g++ -ansi option set to allow long long type!" >&6;}
               STRICTFLAG="$STRICTFLAG -Wno-long-long"
           ;;

           # PGI
           pgCC)
               { echo "$as_me:$LINENO: pgCC supressing error 450 for long long!" >&5
echo "$as_me: pgCC supressing error 450 for long long!" >&6;}
               STRICTFLAG="--diag_suppress 450 ${STRICTFLAG}"
           ;;

           # catchall
           *)
               # do nothing
           ;;

           esac

       fi

       #
       # end of LONG LONG setup
       #

       #
       # Setup communications packages
       #

       # setup for mpi support, on linux vendor and mpich are one
       # and the same because there is no vendor for mpi on linux

       if test "${with_mpi}" = vendor ; then
	   with_mpi=mpich
       fi

       # For CCS-2/4 users, we can also specify LAMPI in place of
       # mpich.

       case ${with_mpi} in
       mpich)
	   # define mpi libs for mpich on linux
	   mpi_libs='-lmpich'
           ;;
       lampi | LAMPI | LA-MPI)
           with_mpi='LAMPI'
	   # define mpi libs for LAMPI on linux
	   mpi_libs='-lmpi'
           echo "$as_me:$LINENO: checking \"mpirun -version\"" >&5
echo $ECHO_N "checking \"mpirun -version\"... $ECHO_C" >&6
           mpi_version=`mpirun -version`
           if test -n "`echo ${mpi_version} | grep -i LA-MPI`"; then
              echo "$as_me:$LINENO: result: ${mpi_version}" >&5
echo "${ECHO_T}${mpi_version}" >&6
           else
              { { echo "$as_me:$LINENO: error: \"Did not find LA-MPI version of mpirun.\"" >&5
echo "$as_me: error: \"Did not find LA-MPI version of mpirun.\"" >&2;}
   { (exit 1); exit 1; }; }
           fi
           ;;
       esac


       #
       # setup lapack
       #

       # we assume that the vendor option on linux is the install of
       # redhat rpms in /usr/lib; we don't worry about atlas because
       # that has already been defined

       if test "${with_lapack}" = vendor ; then
	   lapack_libs='-llapack -lblas'
       fi

       #
       # end of lapack setup
       #

       # setup F90 libs, rpath, etc.
       for ac_prog in pgf90 lf95
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$F90" && break
done

       case ${F90} in
       lf95)

   if test "${CXX}" != g++; then
       { { echo "$as_me:$LINENO: error: \"LAHEY must be configured with g++ on LINUX.\"" >&5
echo "$as_me: error: \"LAHEY must be configured with g++ on LINUX.\"" >&2;}
   { (exit 1); exit 1; }; }
   fi

   echo "$as_me:$LINENO: checking \"for extra lf95 library requirements.\"" >&5
echo $ECHO_N "checking \"for extra lf95 library requirements.\"... $ECHO_C" >&6
   if test -n "${vendor_eospac}"    ||
      test -n "${vendor_scalapack}" ||
      test -n "${vendor_trilinos}"; then
         f90_lib_loc=`which lf95 | sed -e 's/bin\/lf95/lib/'`
	 extra_f90_libs="-L${f90_lib_loc} -lfj9i6 -lfj9e6 -lfj9f6 -lfst -lfccx86_6a"
         LIBS="${LIBS} ${extra_f90_libs}"
         extra_f90_rpaths="-Xlinker -rpath ${f90_lib_loc}"
         RPATH="${RPATH} ${extra_f90_rpaths}"
         echo "$as_me:$LINENO: result: \"${extra_f90_libs}\"" >&5
echo "${ECHO_T}\"${extra_f90_libs}\"" >&6
   else
         echo "$as_me:$LINENO: result: \"none.\"" >&5
echo "${ECHO_T}\"none.\"" >&6
   fi

      echo "$as_me:$LINENO: checking \"for F90FLAGS\"" >&5
echo $ECHO_N "checking \"for F90FLAGS\"... $ECHO_C" >&6
   if test "${with_opt:=0}" != 0 ; then
      F90FLAGS="${F90FLAGS} -O${with_opt}"
   else
      F90FLAGS="${F90FLAGS} -g"
   fi

      F90FLAGS="${F90FLAGS} -Cpp"
   echo "$as_me:$LINENO: result: ${F90FLAGS}" >&5
echo "${ECHO_T}${F90FLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90MPIFLAGS\"" >&5
echo $ECHO_N "checking \"for F90MPIFLAGS\"... $ECHO_C" >&6
   if test ${with_mpi:=no} = "no"; then
      F90MPIFLAGS="${F90FLAGS} -DC4_SCALAR"
   else
      if test "${with_mpi}" = mpich; then
         F90MPIFLAGS="-lfmpich"
      else          F90MPIFLAGS="-lmpi"
      fi
   fi
   echo "$as_me:$LINENO: result: ${F90MPIFLAGS}" >&5
echo "${ECHO_T}${F90MPIFLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90CXXFLAGS\"" >&5
echo $ECHO_N "checking \"for F90CXXFLAGS\"... $ECHO_C" >&6
   CXXLIBDIR=${GCC_LIB_DIR}
   F90CXXFLAGS="-L${CXXLIBDIR} -lstdc++"
   echo "$as_me:$LINENO: result: ${F90CXXFLAGS}" >&5
echo "${ECHO_T}${F90CXXFLAGS}" >&6

   echo "$as_me:$LINENO: checking \"for F90VENDOR_LIBS\"" >&5
echo $ECHO_N "checking \"for F90VENDOR_LIBS\"... $ECHO_C" >&6
   F90VENDOR_LIBS="$F90VENDOR_LIBS ${F90MPIFLAGS} ${F90CXXFLAGS}"
   echo "$as_me:$LINENO: result: \"${F90VENDOR_LIBS}\"" >&5
echo "${ECHO_T}\"${F90VENDOR_LIBS}\"" >&6

          ;;
       pgf90)

   # set the proper RPATH command depending on the C++ compiler
   case ${CXX} in
       g++ | icpc)
           rpath='-Xlinker -rpath '
           ;;
       pgCC)
           rpath='-R'
           ;;
       *)
           { { echo "$as_me:$LINENO: error: \"Improper compiler set in LINUX.\"" >&5
echo "$as_me: error: \"Improper compiler set in LINUX.\"" >&2;}
   { (exit 1); exit 1; }; }
   esac

   echo "$as_me:$LINENO: checking \"for extra pgf90 library requirements.\"" >&5
echo $ECHO_N "checking \"for extra pgf90 library requirements.\"... $ECHO_C" >&6
   if test -n "${vendor_eospac}"    ||
      (test -n "${vendor_lapack}" && test "${with_lapack}" = "atlas") ||
      test -n "${vendor_scalapack}" ||
      test -n "${vendor_trilinos}"; then
         f90_lib_loc=`which pgf90 | sed -e 's/bin\/pgf90/lib/'`
         if test -r ${f90_lib_loc}/libpgc.a; then
	    extra_f90_libs="-L${f90_lib_loc} -lpgf90 -lpgf902 -lpgc -lpgftnrtl"
            extra_f90_libs="${extra_f90_libs} -lpgf90_rpm1 -lpghpf2"
            extra_f90_rpaths="$rpath${f90_lib_loc}"
         else
	    extra_f90_libs="-L${f90_lib_loc} -lpgf90 -lpgf902 -lpgftnrtl"
            extra_f90_libs="${extra_f90_libs} -lpgf90_rpm1 -lpghpf2"
            f90_lib_loc2=`which pgf90 | sed -e 's/bin\/pgf90/lib-linux86-g232/'`
            if test -r ${f90_lib_loc2}/libpgc.a; then
               extra_f90_libs="${extra_f90_libs} -L${f90_lib_loc2} -lpgc"
               extra_f90_rpaths="-Xlinker -rpath ${f90_lib_loc}"
               extra_f90_rpaths="${extra_f90_rpaths} $rpath${f90_lib_locs}"
            fi
         fi
         LIBS="${LIBS} ${extra_f90_libs}"
         RPATH="${RPATH} ${extra_f90_rpaths}"
         echo "$as_me:$LINENO: result: \"${extra_f90_libs}\"" >&5
echo "${ECHO_T}\"${extra_f90_libs}\"" >&6
   else
         echo "$as_me:$LINENO: result: \"none.\"" >&5
echo "${ECHO_T}\"none.\"" >&6
   fi

      echo "$as_me:$LINENO: checking \"for F90FLAGS\"" >&5
echo $ECHO_N "checking \"for F90FLAGS\"... $ECHO_C" >&6
   if test "${with_opt:=0}" != 0 ; then
      if test ${with_opt} -gt 2; then
         F90FLAGS="${F90FLAGS} -O2"
      else
         F90FLAGS="${F90FLAGS} -O${with_opt}"
      fi
   else
      F90FLAGS="${F90FLAGS} -g"
   fi

      F90FLAGS="${F90FLAGS} -Mpreprocess"
   echo "$as_me:$LINENO: result: ${F90FLAGS}" >&5
echo "${ECHO_T}${F90FLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90MPIFLAGS\"" >&5
echo $ECHO_N "checking \"for F90MPIFLAGS\"... $ECHO_C" >&6
   if test ${with_mpi:=no} = "no"; then
      F90FLAGS="${F90FLAGS} -DC4_SCALAR"
   else
      if test "${with_mpi}" = mpich; then
         F90MPIFLAGS="-lfmpich"
      else          F90MPIFLAGS="-lmpi"
      fi
   fi
   echo "$as_me:$LINENO: result: ${F90MPIFLAGS}" >&5
echo "${ECHO_T}${F90MPIFLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90CXXFLAGS\"" >&5
echo $ECHO_N "checking \"for F90CXXFLAGS\"... $ECHO_C" >&6
   if test ${with_cxx} = "pgi"; then
      CXXLIBDIR=`which pgCC | sed -e 's/\/bin\/pgCC//'`
      CXXLIBDIR="${CXXLIBDIR}/lib"
      F90CXXFLAGS="-L${CXXLIBDIR} -lC -lstd"
   else
      CXXLIBDIR=${GCC_LIB_DIR}
      F90CXXFLAGS="-L${CXXLIBDIR} -lstdc++"
   fi
   echo "$as_me:$LINENO: result: ${F90CXXFLAGS}" >&5
echo "${ECHO_T}${F90CXXFLAGS}" >&6

   echo "$as_me:$LINENO: checking \"for F90VENDOR_LIBS\"" >&5
echo $ECHO_N "checking \"for F90VENDOR_LIBS\"... $ECHO_C" >&6
   F90VENDOR_LIBS="$F90VENDOR_LIBS ${F90MPIFLAGS} ${F90CXXFLAGS}"
   echo "$as_me:$LINENO: result: \"${F90VENDOR_LIBS}\"" >&5
echo "${ECHO_T}\"${F90VENDOR_LIBS}\"" >&6

          ;;
       esac

       #
       # add libg2c to LIBS if lapack, gandolf, or pcg is used
       #
       echo "$as_me:$LINENO: checking \"libg2c requirements\"" >&5
echo $ECHO_N "checking \"libg2c requirements\"... $ECHO_C" >&6
       if test -n "${vendor_lapack}" ||
          test -n "${vendor_pcg}"    ||
	  test -n "${vendor_gandolf}"; then

	   # Add g2c for various compilers
           case "${CXX}" in

               g++)
                   LIBS="${LIBS} -lg2c"
                   echo "$as_me:$LINENO: result: \"-lg2c added to LIBS\"" >&5
echo "${ECHO_T}\"-lg2c added to LIBS\"" >&6
                   ;;

               icpc | pgCC)
                   # Extract the first word of "g++", so it can be a program name with args.
set dummy g++; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_GCC_BIN+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $GCC_BIN in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GCC_BIN="$GCC_BIN" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_GCC_BIN="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_GCC_BIN" && ac_cv_path_GCC_BIN="null"
  ;;
esac
fi
GCC_BIN=$ac_cv_path_GCC_BIN

if test -n "$GCC_BIN"; then
  echo "$as_me:$LINENO: result: $GCC_BIN" >&5
echo "${ECHO_T}$GCC_BIN" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

                   GCC_BIN=`dirname ${GCC_BIN}`
                   GCC_HOME=`dirname ${GCC_BIN}`
                   GCC_LIB_DIR="${GCC_HOME}/lib"
                   LIBS="${LIBS} -L${GCC_LIB_DIR} -lg2c"
                   echo "$as_me:$LINENO: result: \"-lg2c added to LIBS\"" >&5
echo "${ECHO_T}\"-lg2c added to LIBS\"" >&6
                   ;;

               *)
                   echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
                   ;;

           esac

       else
	   echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi

       #
       # add librt to LIBS if udm is used
       #
       echo "$as_me:$LINENO: checking \"librt requirements\"" >&5
echo $ECHO_N "checking \"librt requirements\"... $ECHO_C" >&6
       if test -n "${vendor_udm}"; then

	   # Add rt for g++
	   if test "${CXX}" = g++ ; then
	       LIBS="${LIBS} -lrt"
	       echo "$as_me:$LINENO: result: \"-lrt added to LIBS\"" >&5
echo "${ECHO_T}\"-lrt added to LIBS\"" >&6
           else
               echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
	   fi

       else
           echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi

       #
       # If dlopen is specified, 1) add libdl to LIBS;
       # 2) add -fPIC to compile flags.
       #
       echo "$as_me:$LINENO: checking \"libdl requirements\"" >&5
echo $ECHO_N "checking \"libdl requirements\"... $ECHO_C" >&6
       if test -n "${vendor_dlopen}" ; then
           if test "${enable_dlopen}" = yes ; then
               LIBS="${LIBS} -ldl"

               # if we are using g++ add fPIC (pgCC already has fPIC
               # when building shared libraries
               if test "${CXX}" = g++; then
                   CFLAGS="${CFLAGS} -fPIC"
                   CXXFLAGS="${CXXFLAGS} -fPIC"
                   echo "$as_me:$LINENO: result: \"-ldl added to LIBS -fPIC added to compile flags\"" >&5
echo "${ECHO_T}\"-ldl added to LIBS -fPIC added to compile flags\"" >&6
               else
                   echo "$as_me:$LINENO: result: \"-ldl added to LIBS\"" >&5
echo "${ECHO_T}\"-ldl added to LIBS\"" >&6
               fi

           else
               echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
           fi

       else
           echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi

       #
       # PTHREAD FLAG: Add -pthread to CXXFLAGS if we are using either
       # Trilinos or STLPort
       #
       if test "${with_trilinos:-no}" != no ||
          test "${with_stlport:-no}" != no; then
          CXXFLAGS="${CXXFLAGS} -pthread"
       fi

       #
       # Set up fpe_trap for this platform if gcc is on.
       #
       if test "${CXX}" = g++; then
           cat >>confdefs.h <<\_ACEOF
#define FPETRAP_LINUX_X86 1
_ACEOF

       fi

       #
       # finalize vendors
       #

   # call finalize functions for each vendor, the order is important
   # each vendor setup is appended to the previous; thus, the calling
   # level goes from high to low


   # set up the libraries and include path
   if test -n "${vendor_trilinos}" ; then

       # include path
       if test -n "${TRILINOS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${TRILINOS_INC}"
       fi

       # library path
       if test -n "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       elif test -z "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       fi

       # add TRILINOS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${TRILINOS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${TRILINOS_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_gsl}"; then

       # include path
       if test -n "${GSL_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GSL_INC}"
       fi

       # library path
       if test -n "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # -L${GSL_LIB} ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GSL_LIB} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GSL_LIB} ${gsl_libs}"
   fi

       elif test -z "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${gsl_libs}"
   fi

       fi

       # add GSL directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GSL_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GSL_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_superludist}"; then

       # include path
       if test -n "${SUPERLUDIST_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SUPERLUDIST_INC}"
       fi

       # library path
       # if this is a scalar build, use SUPERLU instead.
       if test "${with_c4}" = "scalar" ; then
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperlu"
   fi

         fi
       else
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperludist"
   fi

         fi
       fi

       # add SUPERLUDIST directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SUPERLUDIST_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SUPERLUDIST_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_aztec}" ; then

       # include path
       if test -n "${AZTEC_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${AZTEC_INC}"
       fi

       # library path
       if test -n "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -L${AZTEC_LIB} -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   fi

       elif test -z "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_aztec}"
   fi

       fi

       # add AZTEC directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${AZTEC_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${AZTEC_INC}"

   fi



   # set up the libraries
   if test -n "${vendor_pcg}"; then

       # library path
       if test -z "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_pcg}"
   fi

       elif test -n "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -L${PCG_LIB} -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${PCG_LIB} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${PCG_LIB} -l${with_pcg}"
   fi

       fi

       # add PCG directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${PCG_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_hypre}" ; then

       # include path
       if test -n "${HYPRE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HYPRE_INC}"
       fi

       # library path
       if test -n "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       elif test -z "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       fi

       # add HYPRE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HYPRE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HYPRE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_scalapack}" ; then

       # no includes for scalapack

       # library path
       if test -n "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -L${SCALAPACK_LIB} -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   fi

       elif test -z "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lscalapack"
   fi

       fi

       # add SCALAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SCALAPACK_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_blacs}" ; then

       # no includes for blacs

       # library path
       if test -n "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       elif test -z "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       fi

       # add BLACS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${BLACS_LIB}"

   fi


   # set up lapack libraries
   if test -n "${vendor_lapack}"; then

       # set libraries
       if test -z "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${lapack_libs}"
   fi

       elif test -n "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # -L${LAPACK_LIB} ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   fi

       fi

       # add LAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${LAPACK_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_eospac}"; then

       # set up library paths
       if test -z "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_eospac}"
   fi

       elif test -n "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -L${EOSPAC5_LIB} -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   fi

       fi

       # add EOSPAC5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${EOSPAC5_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_gandolf}"; then

       # set up library paths
       if test -z "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_gandolf}"
   fi

       elif test -n "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -L${GANDOLF_LIB} -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   fi

       fi

       # add GANDOLF directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GANDOLF_LIB}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_sprng}"; then

       # include path
       if test -n "${SPRNG_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPRNG_INC}"
       fi

       # libraries
       if test -n "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -L${SPRNG_LIB} -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   fi

       elif test -z "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_sprng}"
   fi

       fi

       # add sprng directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPRNG_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPRNG_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_grace}" ; then

       # include path
       if test -n "${GRACE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GRACE_INC}"
       fi

       # library path
       if test -n "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -L${GRACE_LIB} -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GRACE_LIB} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GRACE_LIB} -l${with_grace}"
   fi

       elif test -z "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_grace}"
   fi

       fi

       # add GRACE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GRACE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GRACE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_metis}" ; then

       # include path
       if test -n "${METIS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${METIS_INC}"
       fi

       # library path
       if test -n "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -L${METIS_LIB} -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${METIS_LIB} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${METIS_LIB} -l${with_metis}"
   fi

       elif test -z "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_metis}"
   fi

       fi

       # add METIS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${METIS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${METIS_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_spica}"; then

       # include path
       if test -n "${SPICA_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPICA_INC}"
       fi

       # libraries
       if test -n "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -L${SPICA_LIB} -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   fi

       elif test -z "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lSpicaCSG"
   fi

       fi

       # add spica directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPICA_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPICA_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_xerces}"; then

       # include path
       if test -n "${XERCES_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${XERCES_INC}"
       fi

       # libraries
       if test -n "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -L${XERCES_LIB} -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   fi

       elif test -z "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_xerces}"
   fi

       fi

       # add xerces directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${XERCES_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${XERCES_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_udm}" ; then

       # include path
       if test -n "${UDM_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${UDM_INC}"
           # set extra #define if using udm in parallel
           if test "${with_udm}" = mpi ; then
               cat >>confdefs.h <<\_ACEOF
#define UDM_HAVE_PARALLEL 1
_ACEOF

           fi
       fi

       # library path
       if test -n "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -L${UDM_LIB} -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${UDM_LIB} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${UDM_LIB} -ludm"
   fi

       elif test -z "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -ludm"
   fi

       fi

       # add UDM directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${UDM_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${UDM_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_hdf5}" ; then

       # include path
       if test -n "${HDF5_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HDF5_INC}"
       fi

       # library path
       if test -n "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -L${HDF5_LIB} -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   fi

       elif test -z "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lhdf5 -lz"
   fi

       fi

       # add HDF5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HDF5_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HDF5_INC}"

   fi




   # only add stuff if mpi is not no and the vendor is defined
   if test "${with_mpi}" != no && test -n "${vendor_mpi}"; then

       # include path
       if test -n "${MPI_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${MPI_INC}"
       fi

       # libraries
       if test -n "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # -L${MPI_LIB} ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${MPI_LIB} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${MPI_LIB} ${mpi_libs}"
   fi

       elif test -z "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${mpi_libs}"
   fi

       fi

       # add MPI directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${MPI_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${MPI_INC}"

   fi


      # Libraries are platform-specific; done in ac_platforms.


   # print out vendor include paths
   echo "$as_me:$LINENO: checking \"vendor include paths\"" >&5
echo $ECHO_N "checking \"vendor include paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_INC_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_INC_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_INC_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor include dirs defined\"" >&5
echo "${ECHO_T}\"no vendor include dirs defined\"" >&6
   fi

   # print out vendor lib paths
   echo "$as_me:$LINENO: checking \"vendor lib paths\"" >&5
echo $ECHO_N "checking \"vendor lib paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_LIB_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_LIB_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_LIB_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor lib dirs defined\"" >&5
echo "${ECHO_T}\"no vendor lib dirs defined\"" >&6
   fi



       # handle rpaths
       case ${CXX} in
           pgCC)

       rptrigger=-R
       dilem=nospace

       if test "${enable_shared}" = yes ; then

	   # turn off ranlib
	   RANLIB=':'

           if test "${dilem}" = "space"; then
	       RPATHA="${rptrigger} \${curdir}"
	       RPATHB="${rptrigger} \${curdir}/.."
	       RPATHC="${rptrigger} \${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "nospace"; then
	       RPATHA="${rptrigger}\${curdir}"
	       RPATHB="${rptrigger}\${curdir}/.."
	       RPATHC="${rptrigger}\${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "colon"; then
	       RPATH="${rptrigger} \${curdir}:\${curdir}/..:\${libdir} ${RPATH}"
           else
               { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
	   fi
       fi

       # add vendors to rpath
       for vendor_dir in ${VENDOR_LIB_DIRS}; do
                      so_libs=`ls ${vendor_dir}/*.so 2>/dev/null`
           if test ! "${so_libs:-none}" = "none"; then
              if test "${dilem}" = "space"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "nospace"; then
	          RPATH="${rptrigger}${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "colon"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              else
                  { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
   	      fi
           fi
       done


               ;;
           g++ | icpc)

       rptrigger='-Xlinker -rpath'
       dilem=space

       if test "${enable_shared}" = yes ; then

	   # turn off ranlib
	   RANLIB=':'

           if test "${dilem}" = "space"; then
	       RPATHA="${rptrigger} \${curdir}"
	       RPATHB="${rptrigger} \${curdir}/.."
	       RPATHC="${rptrigger} \${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "nospace"; then
	       RPATHA="${rptrigger}\${curdir}"
	       RPATHB="${rptrigger}\${curdir}/.."
	       RPATHC="${rptrigger}\${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "colon"; then
	       RPATH="${rptrigger} \${curdir}:\${curdir}/..:\${libdir} ${RPATH}"
           else
               { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
	   fi
       fi

       # add vendors to rpath
       for vendor_dir in ${VENDOR_LIB_DIRS}; do
                      so_libs=`ls ${vendor_dir}/*.so 2>/dev/null`
           if test ! "${so_libs:-none}" = "none"; then
              if test "${dilem}" = "space"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "nospace"; then
	          RPATH="${rptrigger}${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "colon"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              else
                  { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
   	      fi
           fi
       done


               ;;
           *)
               { { echo "$as_me:$LINENO: error: \"Unrecognized compiler on LINUX\"" >&5
echo "$as_me: error: \"Unrecognized compiler on LINUX\"" >&2;}
   { (exit 1); exit 1; }; }
               ;;
       esac

       # add the intel math library for better performance when
       # compiling with intel
       if test "${CXX}" = icpc; then
	   LIBS="$LIBS -limf"
       fi

   ;;

   # ***********
   # CYGWIN SETUP
   # ***********
   i686-pc-cygwin)

       # print out cpu message
       echo "$as_me:$LINENO: checking \"host platform cpu\"" >&5
echo $ECHO_N "checking \"host platform cpu\"... $ECHO_C" >&6
       echo "$as_me:$LINENO: result: \"${host_cpu}\"" >&5
echo "${ECHO_T}\"${host_cpu}\"" >&6


       if test "${with_posix:=no}" = yes ; then
	   with_posix='199309L'
       fi

       if test "${with_posix}" != no ; then
	   cat >>confdefs.h <<\_ACEOF
#define _POSIX_SOURCE 1
_ACEOF

	   cat >>confdefs.h <<_ACEOF
#define _POSIX_C_SOURCE $with_posix
_ACEOF

       fi




       # setup for mpi support, on linux vendor and mpich are one
       # and the same because there is no vendor for mpi on linux

       if test "${with_mpi}" = vendor ; then
	   with_mpi=mpich
       fi

       # For CCS-2/4 users, we can also specify LAMPI in place of
       # mpich.

       case ${with_mpi} in
       mpich)
	   # define mpi libs for mpich on linux
	   mpi_libs='-lmpich'
           ;;
       lampi | LAMPI | LA-MPI)
           with_mpi='LAMPI'
	   # define mpi libs for LAMPI on linux
	   mpi_libs='-lmpi'
           echo "$as_me:$LINENO: checking \"mpirun -version\"" >&5
echo $ECHO_N "checking \"mpirun -version\"... $ECHO_C" >&6
           mpi_version=`mpirun -version`
           if test -n "`echo ${mpi_version} | grep -i LA-MPI`"; then
              echo "$as_me:$LINENO: result: ${mpi_version}" >&5
echo "${ECHO_T}${mpi_version}" >&6
           else
              { { echo "$as_me:$LINENO: error: \"Did not find LA-MPI version of mpirun.\"" >&5
echo "$as_me: error: \"Did not find LA-MPI version of mpirun.\"" >&2;}
   { (exit 1); exit 1; }; }
           fi
           ;;
       esac




       if test "${with_lapack}" = vendor ; then
	   lapack_libs='-llapack -lblas'
       fi


       # setup lf95 libs

   if test "${CXX}" != g++; then
       { { echo "$as_me:$LINENO: error: \"LAHEY must be configured with g++ on LINUX.\"" >&5
echo "$as_me: error: \"LAHEY must be configured with g++ on LINUX.\"" >&2;}
   { (exit 1); exit 1; }; }
   fi

   echo "$as_me:$LINENO: checking \"for extra lf95 library requirements.\"" >&5
echo $ECHO_N "checking \"for extra lf95 library requirements.\"... $ECHO_C" >&6
   if test -n "${vendor_eospac}"    ||
      test -n "${vendor_scalapack}" ||
      test -n "${vendor_trilinos}"; then
         f90_lib_loc=`which lf95 | sed -e 's/bin\/lf95/lib/'`
	 extra_f90_libs="-L${f90_lib_loc} -lfj9i6 -lfj9e6 -lfj9f6 -lfst -lfccx86_6a"
         LIBS="${LIBS} ${extra_f90_libs}"
         extra_f90_rpaths="-Xlinker -rpath ${f90_lib_loc}"
         RPATH="${RPATH} ${extra_f90_rpaths}"
         echo "$as_me:$LINENO: result: \"${extra_f90_libs}\"" >&5
echo "${ECHO_T}\"${extra_f90_libs}\"" >&6
   else
         echo "$as_me:$LINENO: result: \"none.\"" >&5
echo "${ECHO_T}\"none.\"" >&6
   fi

      echo "$as_me:$LINENO: checking \"for F90FLAGS\"" >&5
echo $ECHO_N "checking \"for F90FLAGS\"... $ECHO_C" >&6
   if test "${with_opt:=0}" != 0 ; then
      F90FLAGS="${F90FLAGS} -O${with_opt}"
   else
      F90FLAGS="${F90FLAGS} -g"
   fi

      F90FLAGS="${F90FLAGS} -Cpp"
   echo "$as_me:$LINENO: result: ${F90FLAGS}" >&5
echo "${ECHO_T}${F90FLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90MPIFLAGS\"" >&5
echo $ECHO_N "checking \"for F90MPIFLAGS\"... $ECHO_C" >&6
   if test ${with_mpi:=no} = "no"; then
      F90MPIFLAGS="${F90FLAGS} -DC4_SCALAR"
   else
      if test "${with_mpi}" = mpich; then
         F90MPIFLAGS="-lfmpich"
      else          F90MPIFLAGS="-lmpi"
      fi
   fi
   echo "$as_me:$LINENO: result: ${F90MPIFLAGS}" >&5
echo "${ECHO_T}${F90MPIFLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90CXXFLAGS\"" >&5
echo $ECHO_N "checking \"for F90CXXFLAGS\"... $ECHO_C" >&6
   CXXLIBDIR=${GCC_LIB_DIR}
   F90CXXFLAGS="-L${CXXLIBDIR} -lstdc++"
   echo "$as_me:$LINENO: result: ${F90CXXFLAGS}" >&5
echo "${ECHO_T}${F90CXXFLAGS}" >&6

   echo "$as_me:$LINENO: checking \"for F90VENDOR_LIBS\"" >&5
echo $ECHO_N "checking \"for F90VENDOR_LIBS\"... $ECHO_C" >&6
   F90VENDOR_LIBS="$F90VENDOR_LIBS ${F90MPIFLAGS} ${F90CXXFLAGS}"
   echo "$as_me:$LINENO: result: \"${F90VENDOR_LIBS}\"" >&5
echo "${ECHO_T}\"${F90VENDOR_LIBS}\"" >&6


                            echo "$as_me:$LINENO: checking \"libg2c requirements\"" >&5
echo $ECHO_N "checking \"libg2c requirements\"... $ECHO_C" >&6
       if test -n "${vendor_lapack}" || test -n "${vendor_pcg}" ||
	  test -n "${vendor_gandolf}"; then

	   	   if test "${CXX}" = g++ ; then
	       LIBS="${LIBS} -lg2c"
	       echo "$as_me:$LINENO: result: \"-lg2c added to LIBS\"" >&5
echo "${ECHO_T}\"-lg2c added to LIBS\"" >&6
	   fi

       else
	   echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi


   # call finalize functions for each vendor, the order is important
   # each vendor setup is appended to the previous; thus, the calling
   # level goes from high to low


   # set up the libraries and include path
   if test -n "${vendor_trilinos}" ; then

       # include path
       if test -n "${TRILINOS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${TRILINOS_INC}"
       fi

       # library path
       if test -n "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       elif test -z "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       fi

       # add TRILINOS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${TRILINOS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${TRILINOS_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_gsl}"; then

       # include path
       if test -n "${GSL_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GSL_INC}"
       fi

       # library path
       if test -n "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # -L${GSL_LIB} ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GSL_LIB} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GSL_LIB} ${gsl_libs}"
   fi

       elif test -z "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${gsl_libs}"
   fi

       fi

       # add GSL directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GSL_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GSL_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_superludist}"; then

       # include path
       if test -n "${SUPERLUDIST_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SUPERLUDIST_INC}"
       fi

       # library path
       # if this is a scalar build, use SUPERLU instead.
       if test "${with_c4}" = "scalar" ; then
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperlu"
   fi

         fi
       else
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperludist"
   fi

         fi
       fi

       # add SUPERLUDIST directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SUPERLUDIST_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SUPERLUDIST_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_aztec}" ; then

       # include path
       if test -n "${AZTEC_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${AZTEC_INC}"
       fi

       # library path
       if test -n "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -L${AZTEC_LIB} -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   fi

       elif test -z "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_aztec}"
   fi

       fi

       # add AZTEC directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${AZTEC_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${AZTEC_INC}"

   fi



   # set up the libraries
   if test -n "${vendor_pcg}"; then

       # library path
       if test -z "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_pcg}"
   fi

       elif test -n "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -L${PCG_LIB} -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${PCG_LIB} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${PCG_LIB} -l${with_pcg}"
   fi

       fi

       # add PCG directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${PCG_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_hypre}" ; then

       # include path
       if test -n "${HYPRE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HYPRE_INC}"
       fi

       # library path
       if test -n "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       elif test -z "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       fi

       # add HYPRE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HYPRE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HYPRE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_scalapack}" ; then

       # no includes for scalapack

       # library path
       if test -n "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -L${SCALAPACK_LIB} -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   fi

       elif test -z "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lscalapack"
   fi

       fi

       # add SCALAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SCALAPACK_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_blacs}" ; then

       # no includes for blacs

       # library path
       if test -n "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       elif test -z "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       fi

       # add BLACS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${BLACS_LIB}"

   fi


   # set up lapack libraries
   if test -n "${vendor_lapack}"; then

       # set libraries
       if test -z "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${lapack_libs}"
   fi

       elif test -n "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # -L${LAPACK_LIB} ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   fi

       fi

       # add LAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${LAPACK_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_eospac}"; then

       # set up library paths
       if test -z "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_eospac}"
   fi

       elif test -n "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -L${EOSPAC5_LIB} -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   fi

       fi

       # add EOSPAC5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${EOSPAC5_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_gandolf}"; then

       # set up library paths
       if test -z "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_gandolf}"
   fi

       elif test -n "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -L${GANDOLF_LIB} -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   fi

       fi

       # add GANDOLF directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GANDOLF_LIB}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_sprng}"; then

       # include path
       if test -n "${SPRNG_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPRNG_INC}"
       fi

       # libraries
       if test -n "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -L${SPRNG_LIB} -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   fi

       elif test -z "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_sprng}"
   fi

       fi

       # add sprng directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPRNG_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPRNG_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_grace}" ; then

       # include path
       if test -n "${GRACE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GRACE_INC}"
       fi

       # library path
       if test -n "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -L${GRACE_LIB} -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GRACE_LIB} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GRACE_LIB} -l${with_grace}"
   fi

       elif test -z "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_grace}"
   fi

       fi

       # add GRACE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GRACE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GRACE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_metis}" ; then

       # include path
       if test -n "${METIS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${METIS_INC}"
       fi

       # library path
       if test -n "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -L${METIS_LIB} -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${METIS_LIB} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${METIS_LIB} -l${with_metis}"
   fi

       elif test -z "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_metis}"
   fi

       fi

       # add METIS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${METIS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${METIS_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_spica}"; then

       # include path
       if test -n "${SPICA_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPICA_INC}"
       fi

       # libraries
       if test -n "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -L${SPICA_LIB} -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   fi

       elif test -z "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lSpicaCSG"
   fi

       fi

       # add spica directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPICA_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPICA_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_xerces}"; then

       # include path
       if test -n "${XERCES_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${XERCES_INC}"
       fi

       # libraries
       if test -n "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -L${XERCES_LIB} -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   fi

       elif test -z "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_xerces}"
   fi

       fi

       # add xerces directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${XERCES_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${XERCES_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_udm}" ; then

       # include path
       if test -n "${UDM_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${UDM_INC}"
           # set extra #define if using udm in parallel
           if test "${with_udm}" = mpi ; then
               cat >>confdefs.h <<\_ACEOF
#define UDM_HAVE_PARALLEL 1
_ACEOF

           fi
       fi

       # library path
       if test -n "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -L${UDM_LIB} -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${UDM_LIB} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${UDM_LIB} -ludm"
   fi

       elif test -z "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -ludm"
   fi

       fi

       # add UDM directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${UDM_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${UDM_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_hdf5}" ; then

       # include path
       if test -n "${HDF5_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HDF5_INC}"
       fi

       # library path
       if test -n "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -L${HDF5_LIB} -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   fi

       elif test -z "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lhdf5 -lz"
   fi

       fi

       # add HDF5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HDF5_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HDF5_INC}"

   fi




   # only add stuff if mpi is not no and the vendor is defined
   if test "${with_mpi}" != no && test -n "${vendor_mpi}"; then

       # include path
       if test -n "${MPI_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${MPI_INC}"
       fi

       # libraries
       if test -n "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # -L${MPI_LIB} ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${MPI_LIB} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${MPI_LIB} ${mpi_libs}"
   fi

       elif test -z "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${mpi_libs}"
   fi

       fi

       # add MPI directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${MPI_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${MPI_INC}"

   fi


      # Libraries are platform-specific; done in ac_platforms.


   # print out vendor include paths
   echo "$as_me:$LINENO: checking \"vendor include paths\"" >&5
echo $ECHO_N "checking \"vendor include paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_INC_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_INC_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_INC_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor include dirs defined\"" >&5
echo "${ECHO_T}\"no vendor include dirs defined\"" >&6
   fi

   # print out vendor lib paths
   echo "$as_me:$LINENO: checking \"vendor lib paths\"" >&5
echo $ECHO_N "checking \"vendor lib paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_LIB_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_LIB_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_LIB_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor lib dirs defined\"" >&5
echo "${ECHO_T}\"no vendor lib dirs defined\"" >&6
   fi




       rptrigger='-Xlinker -rpath'
       dilem=space

       if test "${enable_shared}" = yes ; then

	   # turn off ranlib
	   RANLIB=':'

           if test "${dilem}" = "space"; then
	       RPATHA="${rptrigger} \${curdir}"
	       RPATHB="${rptrigger} \${curdir}/.."
	       RPATHC="${rptrigger} \${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "nospace"; then
	       RPATHA="${rptrigger}\${curdir}"
	       RPATHB="${rptrigger}\${curdir}/.."
	       RPATHC="${rptrigger}\${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "colon"; then
	       RPATH="${rptrigger} \${curdir}:\${curdir}/..:\${libdir} ${RPATH}"
           else
               { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
	   fi
       fi

       # add vendors to rpath
       for vendor_dir in ${VENDOR_LIB_DIRS}; do
                      so_libs=`ls ${vendor_dir}/*.so 2>/dev/null`
           if test ! "${so_libs:-none}" = "none"; then
              if test "${dilem}" = "space"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "nospace"; then
	          RPATH="${rptrigger}${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "colon"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              else
                  { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
   	      fi
           fi
       done




   ;;

   # *********
   # SGI SETUP
   # *********
   mips-sgi-irix6.*)

       # print out cpu message
       echo "$as_me:$LINENO: checking \"host platform cpu\"" >&5
echo $ECHO_N "checking \"host platform cpu\"... $ECHO_C" >&6
       echo "$as_me:$LINENO: result: \"${host_cpu}\"" >&5
echo "${ECHO_T}\"${host_cpu}\"" >&6


       if test "${with_posix:=no}" = yes ; then
	   with_posix='199309L'
       fi

       if test "${with_posix}" != no ; then
	   cat >>confdefs.h <<\_ACEOF
#define _POSIX_SOURCE 1
_ACEOF

	   cat >>confdefs.h <<_ACEOF
#define _POSIX_C_SOURCE $with_posix
_ACEOF

       fi



       # RANLIB TAG ON SGI
       RANLIB=':'

       # BIT COMPILER FLAGS ON SGI
       if test "${enable_32_bit:=no}" = yes ; then
	   if test "${with_cxx}" = gcc ; then
	       CXXFLAGS="-mabi=n32 ${CXXFLAGS}"
	       CFLAGS="-mabi=n32 ${CFLAGS}"
	       if test "${enable_shared}" = yes ; then
		   ARFLAGS="-mabi=n32 ${ARFLAGS}"
	       fi
	       LDFLAGS="-mabi=n32 ${LDFLAGS}"
	   else
	       CXXFLAGS="-n32 ${CXXFLAGS}"
	       CFLAGS="-n32 ${CFLAGS}"
	       ARFLAGS="-n32 ${ARFLAGS}"
	       LDFLAGS="-n32 ${LDFLAGS}"
	   fi
       else
	   if test "${with_cxx}" = gcc ; then
	       CXXFLAGS="-mabi=64 ${CXXFLAGS}"
	       CFLAGS="-mabi=64 ${CFLAGS}"
	       if test "${enable_shared}" = yes ; then
		   ARFLAGS="-mabi=64 ${ARFLAGS}"
	       fi
	       LDFLAGS="-mabi=64 ${LDFLAGS}"
	   else
	       CXXFLAGS="-64 ${CXXFLAGS}"
	       CFLAGS="-64 ${CFLAGS}"
	       ARFLAGS="-64 ${ARFLAGS}"
	       LDFLAGS="-64 ${LDFLAGS}"
	   fi
       fi

       # MIPS INSTRUCTIONS ON SGI
       # this is different depending upon the compiler
       if test "${with_cxx}" = kcc ; then
	   CXXFLAGS="-mips${with_mips:=4} --backend -r10000 ${CXXFLAGS}"
	   CFLAGS="-mips${with_mips:=4} -r10000 ${CFLAGS}"
	   ARFLAGS="-mips${with_mips:=4} ${ARFLAGS}"
	   LDFLAGS="-mips${with_mips:=4} ${LDFLAGS}"
       elif test "${with_cxx}" = sgi ; then
	   CXXFLAGS="-mips${with_mips:=4} -r10000 ${CXXFLAGS}"
	   CFLAGS="-mips${with_mips:=4} -r10000 ${CFLAGS}"
	   ARFLAGS="-mips${with_mips:=4} ${ARFLAGS}"
	   LDFLAGS="-mips${with_mips:=4} ${LDFLAGS}"
       elif test "${with_cxx}" = gcc ; then
	   CXXFLAGS="-mips${with_mips:=4} ${CXXFLAGS}"
	   CFLAGS="-mips${with_mips:=4} ${CFLAGS}"
	   if test "${enable_shared}" = yes ; then
	       ARFLAGS="-mips${with_mips:=4} ${ARFLAGS}"
	   fi
	   LDFLAGS="-mips${with_mips:=4} ${LDFLAGS}"
       fi

       #
       # setup communication packages
       #

       # setup for mpi support
       # we only support vendor mpi on sgis
       if test "${with_mpi}" = vendor ; then

	   # mpi library on sgi is mpi
	   mpi_libs='-lmpi'

	   # set up sgi mpi defaults
	   if test -z "${MPI_LIB}" ; then
	       if test "${enable_32_bit}" = no ; then
		   MPI_LIB="${MPI_SGI}/usr/lib64"
	       else
		   MPI_LIB="${MPI_SGI}/usr/lib32"
	       fi
	   fi

       elif test "${with_mpi}" = mpich ; then

	   # no mpich support on SGI
	   { { echo "$as_me:$LINENO: error: \"We do not support mpich on the SGI yet!\"" >&5
echo "$as_me: error: \"We do not support mpich on the SGI yet!\"" >&2;}
   { (exit 1); exit 1; }; }

       fi

       # MPT (Message Passing Toolkit) for SGI vendor
       # implementation of MPI
       if test -z "${MPI_INC}" &&  test "${with_mpi}" = vendor ; then
	   MPI_INC="${MPT_SGI}/usr/include/"
       fi

       # add SGI MPT Specfic options
       if test "${with_mpi}" = vendor ; then
	   # define no C++ bindings
	   cat >>confdefs.h <<\_ACEOF
#define MPI_NO_CPPBIND 1
_ACEOF

       fi

       #
       # end of communication package setup
       #

       #
       # setup lapack
       #

       if test "${with_lapack}" = vendor ; then
	   lapack_libs='-lcomplib.sgimath'
       fi

       #
       # end of lapack setup
       #

       #
       # gandolf, pcg and eospac requires -lfortran on the link line.
       #

       echo "$as_me:$LINENO: checking \"libfortran requirements\"" >&5
echo $ECHO_N "checking \"libfortran requirements\"... $ECHO_C" >&6
       if test -n "${vendor_gandolf}" || \
          test -n "${vendor_eospac}"  || \
          test -n "${vendor_pcg}" ; then
          LIBS="${LIBS} -lfortran"
          echo "$as_me:$LINENO: result: \"-lfortran added to LIBS\"" >&5
echo "${ECHO_T}\"-lfortran added to LIBS\"" >&6
       else
	   echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi

       #
       # end of libfortran setup (gandolf, eospac, pcg)
       #

       #
       # pcg requires -lperfex on the link line.
       #

       echo "$as_me:$LINENO: checking \"libperfex requirements\"" >&5
echo $ECHO_N "checking \"libperfex requirements\"... $ECHO_C" >&6
       if test -n "${vendor_pcg}" ; then
          LIBS="${LIBS} -lperfex"
          echo "$as_me:$LINENO: result: \"-lperfex added to LIBS\"" >&5
echo "${ECHO_T}\"-lperfex added to LIBS\"" >&6
       else
	   echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi

       #
       # end of libfortran setup (gandolf, eospac, pcg)
       #

       #
       # finalize vendors
       #

   # call finalize functions for each vendor, the order is important
   # each vendor setup is appended to the previous; thus, the calling
   # level goes from high to low


   # set up the libraries and include path
   if test -n "${vendor_trilinos}" ; then

       # include path
       if test -n "${TRILINOS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${TRILINOS_INC}"
       fi

       # library path
       if test -n "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       elif test -z "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       fi

       # add TRILINOS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${TRILINOS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${TRILINOS_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_gsl}"; then

       # include path
       if test -n "${GSL_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GSL_INC}"
       fi

       # library path
       if test -n "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # -L${GSL_LIB} ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GSL_LIB} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GSL_LIB} ${gsl_libs}"
   fi

       elif test -z "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${gsl_libs}"
   fi

       fi

       # add GSL directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GSL_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GSL_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_superludist}"; then

       # include path
       if test -n "${SUPERLUDIST_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SUPERLUDIST_INC}"
       fi

       # library path
       # if this is a scalar build, use SUPERLU instead.
       if test "${with_c4}" = "scalar" ; then
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperlu"
   fi

         fi
       else
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperludist"
   fi

         fi
       fi

       # add SUPERLUDIST directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SUPERLUDIST_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SUPERLUDIST_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_aztec}" ; then

       # include path
       if test -n "${AZTEC_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${AZTEC_INC}"
       fi

       # library path
       if test -n "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -L${AZTEC_LIB} -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   fi

       elif test -z "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_aztec}"
   fi

       fi

       # add AZTEC directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${AZTEC_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${AZTEC_INC}"

   fi



   # set up the libraries
   if test -n "${vendor_pcg}"; then

       # library path
       if test -z "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_pcg}"
   fi

       elif test -n "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -L${PCG_LIB} -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${PCG_LIB} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${PCG_LIB} -l${with_pcg}"
   fi

       fi

       # add PCG directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${PCG_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_hypre}" ; then

       # include path
       if test -n "${HYPRE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HYPRE_INC}"
       fi

       # library path
       if test -n "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       elif test -z "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       fi

       # add HYPRE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HYPRE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HYPRE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_scalapack}" ; then

       # no includes for scalapack

       # library path
       if test -n "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -L${SCALAPACK_LIB} -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   fi

       elif test -z "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lscalapack"
   fi

       fi

       # add SCALAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SCALAPACK_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_blacs}" ; then

       # no includes for blacs

       # library path
       if test -n "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       elif test -z "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       fi

       # add BLACS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${BLACS_LIB}"

   fi


   # set up lapack libraries
   if test -n "${vendor_lapack}"; then

       # set libraries
       if test -z "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${lapack_libs}"
   fi

       elif test -n "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # -L${LAPACK_LIB} ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   fi

       fi

       # add LAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${LAPACK_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_eospac}"; then

       # set up library paths
       if test -z "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_eospac}"
   fi

       elif test -n "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -L${EOSPAC5_LIB} -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   fi

       fi

       # add EOSPAC5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${EOSPAC5_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_gandolf}"; then

       # set up library paths
       if test -z "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_gandolf}"
   fi

       elif test -n "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -L${GANDOLF_LIB} -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   fi

       fi

       # add GANDOLF directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GANDOLF_LIB}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_sprng}"; then

       # include path
       if test -n "${SPRNG_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPRNG_INC}"
       fi

       # libraries
       if test -n "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -L${SPRNG_LIB} -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   fi

       elif test -z "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_sprng}"
   fi

       fi

       # add sprng directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPRNG_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPRNG_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_grace}" ; then

       # include path
       if test -n "${GRACE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GRACE_INC}"
       fi

       # library path
       if test -n "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -L${GRACE_LIB} -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GRACE_LIB} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GRACE_LIB} -l${with_grace}"
   fi

       elif test -z "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_grace}"
   fi

       fi

       # add GRACE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GRACE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GRACE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_metis}" ; then

       # include path
       if test -n "${METIS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${METIS_INC}"
       fi

       # library path
       if test -n "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -L${METIS_LIB} -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${METIS_LIB} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${METIS_LIB} -l${with_metis}"
   fi

       elif test -z "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_metis}"
   fi

       fi

       # add METIS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${METIS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${METIS_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_spica}"; then

       # include path
       if test -n "${SPICA_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPICA_INC}"
       fi

       # libraries
       if test -n "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -L${SPICA_LIB} -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   fi

       elif test -z "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lSpicaCSG"
   fi

       fi

       # add spica directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPICA_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPICA_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_xerces}"; then

       # include path
       if test -n "${XERCES_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${XERCES_INC}"
       fi

       # libraries
       if test -n "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -L${XERCES_LIB} -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   fi

       elif test -z "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_xerces}"
   fi

       fi

       # add xerces directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${XERCES_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${XERCES_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_udm}" ; then

       # include path
       if test -n "${UDM_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${UDM_INC}"
           # set extra #define if using udm in parallel
           if test "${with_udm}" = mpi ; then
               cat >>confdefs.h <<\_ACEOF
#define UDM_HAVE_PARALLEL 1
_ACEOF

           fi
       fi

       # library path
       if test -n "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -L${UDM_LIB} -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${UDM_LIB} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${UDM_LIB} -ludm"
   fi

       elif test -z "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -ludm"
   fi

       fi

       # add UDM directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${UDM_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${UDM_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_hdf5}" ; then

       # include path
       if test -n "${HDF5_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HDF5_INC}"
       fi

       # library path
       if test -n "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -L${HDF5_LIB} -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   fi

       elif test -z "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lhdf5 -lz"
   fi

       fi

       # add HDF5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HDF5_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HDF5_INC}"

   fi




   # only add stuff if mpi is not no and the vendor is defined
   if test "${with_mpi}" != no && test -n "${vendor_mpi}"; then

       # include path
       if test -n "${MPI_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${MPI_INC}"
       fi

       # libraries
       if test -n "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # -L${MPI_LIB} ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${MPI_LIB} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${MPI_LIB} ${mpi_libs}"
   fi

       elif test -z "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${mpi_libs}"
   fi

       fi

       # add MPI directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${MPI_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${MPI_INC}"

   fi


      # Libraries are platform-specific; done in ac_platforms.


   # print out vendor include paths
   echo "$as_me:$LINENO: checking \"vendor include paths\"" >&5
echo $ECHO_N "checking \"vendor include paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_INC_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_INC_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_INC_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor include dirs defined\"" >&5
echo "${ECHO_T}\"no vendor include dirs defined\"" >&6
   fi

   # print out vendor lib paths
   echo "$as_me:$LINENO: checking \"vendor lib paths\"" >&5
echo $ECHO_N "checking \"vendor lib paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_LIB_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_LIB_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_LIB_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor lib dirs defined\"" >&5
echo "${ECHO_T}\"no vendor lib dirs defined\"" >&6
   fi




       rptrigger=-rpath
       dilem=colon

       if test "${enable_shared}" = yes ; then

	   # turn off ranlib
	   RANLIB=':'

           if test "${dilem}" = "space"; then
	       RPATHA="${rptrigger} \${curdir}"
	       RPATHB="${rptrigger} \${curdir}/.."
	       RPATHC="${rptrigger} \${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "nospace"; then
	       RPATHA="${rptrigger}\${curdir}"
	       RPATHB="${rptrigger}\${curdir}/.."
	       RPATHC="${rptrigger}\${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "colon"; then
	       RPATH="${rptrigger} \${curdir}:\${curdir}/..:\${libdir} ${RPATH}"
           else
               { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
	   fi
       fi

       # add vendors to rpath
       for vendor_dir in ${VENDOR_LIB_DIRS}; do
                      so_libs=`ls ${vendor_dir}/*.so 2>/dev/null`
           if test ! "${so_libs:-none}" = "none"; then
              if test "${dilem}" = "space"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "nospace"; then
	          RPATH="${rptrigger}${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "colon"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              else
                  { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
   	      fi
           fi
       done




   ;;

   # ******************
   # TRU64 COMPAQ SETUP
   # ******************
   alpha*-dec-osf*)

       # print out cpu message
       echo "$as_me:$LINENO: checking \"host platform cpu\"" >&5
echo $ECHO_N "checking \"host platform cpu\"... $ECHO_C" >&6
       echo "$as_me:$LINENO: result: \"${host_cpu}\"" >&5
echo "${ECHO_T}\"${host_cpu}\"" >&6


       if test "${with_posix:=no}" = yes ; then
	   with_posix='199309L'
       fi

       if test "${with_posix}" != no ; then
	   cat >>confdefs.h <<\_ACEOF
#define _POSIX_SOURCE 1
_ACEOF

	   cat >>confdefs.h <<_ACEOF
#define _POSIX_C_SOURCE $with_posix
_ACEOF

       fi



       #
       # setup communication packages
       #

       # setup vendor mpi
       if test "${with_mpi}" = vendor ; then

	   # define mpi libraries
	   # note: mpi and mpio are separate libraries on compaqs
	   mpi_libs='-lmpi -lmpio'

       # setup mpich
       elif test "${with_mpi}" = mpich ; then

	   # define mpi libraries
	   mpi_libs='-lmpich'

       fi

       # add COMPAQ ALASKA Specfic options
       if test "${with_mpi}" = vendor ; then
	   # define version check
	   cat >>confdefs.h <<\_ACEOF
#define MPI_VERSION_CHECK 1
_ACEOF

       fi

       #
       # end of communication packages
       #

       #
       # setup lapack
       #

       echo "$as_me:$LINENO: checking \"for lapack libraries\"" >&5
echo $ECHO_N "checking \"for lapack libraries\"... $ECHO_C" >&6
       if test "${with_lapack}" = vendor ; then
	   lapack_libs='-lcxmlp -lcxml'
           echo "$as_me:$LINENO: result: \"${lapack_libs}\"" >&5
echo "${ECHO_T}\"${lapack_libs}\"" >&6
       else
           echo "$as_me:$LINENO: result: \"none.\"" >&5
echo "${ECHO_T}\"none.\"" >&6
       fi

       #
       # end of lapack setup
       #

       #
       # udm requires long long warnings to be disabled
       #

       if test -n "${vendor_udm}" ; then
	   STRICTFLAG="${STRICTFLAG} -msg_disable nostdlonglong"
	   STRICTFLAG="${STRICTFLAG} -msg_disable nostdlonglong"
       fi

       #
       # end of udm setup
       #

       #
       # FORTRAN configuration for Compaq f90
       # setup F90, libs, rpath, etc.
       #
       for ac_prog in f90
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F90+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F90"; then
  ac_cv_prog_F90="$F90" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F90="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
F90=$ac_cv_prog_F90
if test -n "$F90"; then
  echo "$as_me:$LINENO: result: $F90" >&5
echo "${ECHO_T}$F90" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$F90" && break
done

       case ${F90} in
       f90)

   f90_lib_loc=`which f90 | sed -e 's/bin\/f90/lib/'`
   cxx_lib_loc=`which cxx | sed -e 's/bin\/cxx/lib/'`

   echo "$as_me:$LINENO: checking \"for extra f90 library requirements.\"" >&5
echo $ECHO_N "checking \"for extra f90 library requirements.\"... $ECHO_C" >&6
   if test -n "${vendor_eospac}"    ||
      test -n "${vendor_gandolf}"   ||
      test -n "${vendor_pcg}"       ||
      test -n "${vendor_udm}"       ||
      test -n "${vendor_superludist}" ||
      test -n "${vendor_blacs}"; then

      extra_f90_libs="-L${f90_lib_loc} -lfor"
      extra_f90_rpaths="-rpath ${f90_lib_loc}"

      LIBS="${LIBS} ${extra_f90_libs}"
      RPATH="${RPATH} ${extra_f90_rpaths}"
      echo "$as_me:$LINENO: result: \"${extra_f90_libs}\"" >&5
echo "${ECHO_T}\"${extra_f90_libs}\"" >&6

   else
         echo "$as_me:$LINENO: result: \"none.\"" >&5
echo "${ECHO_T}\"none.\"" >&6
   fi

      echo "$as_me:$LINENO: checking \"for F90FLAGS\"" >&5
echo $ECHO_N "checking \"for F90FLAGS\"... $ECHO_C" >&6
   if test "${with_opt:=0}" != 0 ; then
      if test ${with_opt} -gt 2; then
         F90FLAGS="${F90FLAGS} -O2"
      else
         F90FLAGS="${F90FLAGS} -O${with_opt}"
      fi
   else
      F90FLAGS="${F90FLAGS} -g"
   fi

      F90FLAGS="${F90FLAGS} -cpp"
   echo "$as_me:$LINENO: result: ${F90FLAGS}" >&5
echo "${ECHO_T}${F90FLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90MPIFLAGS\"" >&5
echo $ECHO_N "checking \"for F90MPIFLAGS\"... $ECHO_C" >&6
   if test ${with_mpi:=no} = "no"; then
      F90FLAGS="${F90FLAGS} -DC4_SCALAR"
   else
      F90MPIFLAGS="${F90FLAGS} -lfmpi"
   fi
   echo "$as_me:$LINENO: result: ${F90MPIFLAGS}" >&5
echo "${ECHO_T}${F90MPIFLAGS}" >&6

   if test -n "${vendor_pcg}"  ||
      test "${with_udm}" = mpi ||
      test -n "${vendor_blacs}" ; then
      LIBS="${LIBS} ${F90MPIFLAGS}"
   fi

      echo "$as_me:$LINENO: checking \"for F90CXXFLAGS\"" >&5
echo $ECHO_N "checking \"for F90CXXFLAGS\"... $ECHO_C" >&6
   CXXLIBDIR=${cxx_lib_loc}
   F90CXXFLAGS="-L${CXXLIBDIR} -lcxxstdma -lcxxma"
   echo "$as_me:$LINENO: result: ${F90CXXFLAGS}" >&5
echo "${ECHO_T}${F90CXXFLAGS}" >&6

   echo "$as_me:$LINENO: checking \"for F90VENDOR_LIBS\"" >&5
echo $ECHO_N "checking \"for F90VENDOR_LIBS\"... $ECHO_C" >&6
   F90VENDOR_LIBS="$F90VENDOR_LIBS ${F90MPIFLAGS} ${F90CXXFLAGS}"
   echo "$as_me:$LINENO: result: \"${F90VENDOR_LIBS}\"" >&5
echo "${ECHO_T}\"${F90VENDOR_LIBS}\"" >&6

          ;;
       esac

       #
       # libudm/librmscall setup
       #

       echo "$as_me:$LINENO: checking \"librmscall requirements\"" >&5
echo $ECHO_N "checking \"librmscall requirements\"... $ECHO_C" >&6
       if test -n "${vendor_udm}"; then
          LIBS="${LIBS} -lrmscall"
          echo "$as_me:$LINENO: result: \"-lrmscall added to LIBS\"" >&5
echo "${ECHO_T}\"-lrmscall added to LIBS\"" >&6
       else
	   echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi

       #
       # end of libudm setup
       #

       #
       # Set up fpe_trap for this platform.
       #
       cat >>confdefs.h <<\_ACEOF
#define FPETRAP_OSF_ALPHA 1
_ACEOF


       #
       # finalize vendors
       #

   # call finalize functions for each vendor, the order is important
   # each vendor setup is appended to the previous; thus, the calling
   # level goes from high to low


   # set up the libraries and include path
   if test -n "${vendor_trilinos}" ; then

       # include path
       if test -n "${TRILINOS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${TRILINOS_INC}"
       fi

       # library path
       if test -n "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       elif test -z "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       fi

       # add TRILINOS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${TRILINOS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${TRILINOS_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_gsl}"; then

       # include path
       if test -n "${GSL_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GSL_INC}"
       fi

       # library path
       if test -n "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # -L${GSL_LIB} ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GSL_LIB} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GSL_LIB} ${gsl_libs}"
   fi

       elif test -z "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${gsl_libs}"
   fi

       fi

       # add GSL directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GSL_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GSL_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_superludist}"; then

       # include path
       if test -n "${SUPERLUDIST_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SUPERLUDIST_INC}"
       fi

       # library path
       # if this is a scalar build, use SUPERLU instead.
       if test "${with_c4}" = "scalar" ; then
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperlu"
   fi

         fi
       else
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperludist"
   fi

         fi
       fi

       # add SUPERLUDIST directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SUPERLUDIST_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SUPERLUDIST_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_aztec}" ; then

       # include path
       if test -n "${AZTEC_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${AZTEC_INC}"
       fi

       # library path
       if test -n "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -L${AZTEC_LIB} -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   fi

       elif test -z "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_aztec}"
   fi

       fi

       # add AZTEC directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${AZTEC_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${AZTEC_INC}"

   fi



   # set up the libraries
   if test -n "${vendor_pcg}"; then

       # library path
       if test -z "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_pcg}"
   fi

       elif test -n "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -L${PCG_LIB} -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${PCG_LIB} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${PCG_LIB} -l${with_pcg}"
   fi

       fi

       # add PCG directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${PCG_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_hypre}" ; then

       # include path
       if test -n "${HYPRE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HYPRE_INC}"
       fi

       # library path
       if test -n "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       elif test -z "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       fi

       # add HYPRE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HYPRE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HYPRE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_scalapack}" ; then

       # no includes for scalapack

       # library path
       if test -n "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -L${SCALAPACK_LIB} -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   fi

       elif test -z "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lscalapack"
   fi

       fi

       # add SCALAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SCALAPACK_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_blacs}" ; then

       # no includes for blacs

       # library path
       if test -n "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       elif test -z "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       fi

       # add BLACS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${BLACS_LIB}"

   fi


   # set up lapack libraries
   if test -n "${vendor_lapack}"; then

       # set libraries
       if test -z "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${lapack_libs}"
   fi

       elif test -n "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # -L${LAPACK_LIB} ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   fi

       fi

       # add LAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${LAPACK_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_eospac}"; then

       # set up library paths
       if test -z "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_eospac}"
   fi

       elif test -n "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -L${EOSPAC5_LIB} -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   fi

       fi

       # add EOSPAC5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${EOSPAC5_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_gandolf}"; then

       # set up library paths
       if test -z "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_gandolf}"
   fi

       elif test -n "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -L${GANDOLF_LIB} -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   fi

       fi

       # add GANDOLF directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GANDOLF_LIB}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_sprng}"; then

       # include path
       if test -n "${SPRNG_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPRNG_INC}"
       fi

       # libraries
       if test -n "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -L${SPRNG_LIB} -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   fi

       elif test -z "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_sprng}"
   fi

       fi

       # add sprng directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPRNG_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPRNG_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_grace}" ; then

       # include path
       if test -n "${GRACE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GRACE_INC}"
       fi

       # library path
       if test -n "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -L${GRACE_LIB} -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GRACE_LIB} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GRACE_LIB} -l${with_grace}"
   fi

       elif test -z "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_grace}"
   fi

       fi

       # add GRACE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GRACE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GRACE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_metis}" ; then

       # include path
       if test -n "${METIS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${METIS_INC}"
       fi

       # library path
       if test -n "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -L${METIS_LIB} -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${METIS_LIB} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${METIS_LIB} -l${with_metis}"
   fi

       elif test -z "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_metis}"
   fi

       fi

       # add METIS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${METIS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${METIS_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_spica}"; then

       # include path
       if test -n "${SPICA_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPICA_INC}"
       fi

       # libraries
       if test -n "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -L${SPICA_LIB} -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   fi

       elif test -z "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lSpicaCSG"
   fi

       fi

       # add spica directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPICA_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPICA_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_xerces}"; then

       # include path
       if test -n "${XERCES_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${XERCES_INC}"
       fi

       # libraries
       if test -n "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -L${XERCES_LIB} -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   fi

       elif test -z "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_xerces}"
   fi

       fi

       # add xerces directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${XERCES_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${XERCES_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_udm}" ; then

       # include path
       if test -n "${UDM_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${UDM_INC}"
           # set extra #define if using udm in parallel
           if test "${with_udm}" = mpi ; then
               cat >>confdefs.h <<\_ACEOF
#define UDM_HAVE_PARALLEL 1
_ACEOF

           fi
       fi

       # library path
       if test -n "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -L${UDM_LIB} -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${UDM_LIB} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${UDM_LIB} -ludm"
   fi

       elif test -z "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -ludm"
   fi

       fi

       # add UDM directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${UDM_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${UDM_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_hdf5}" ; then

       # include path
       if test -n "${HDF5_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HDF5_INC}"
       fi

       # library path
       if test -n "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -L${HDF5_LIB} -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   fi

       elif test -z "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lhdf5 -lz"
   fi

       fi

       # add HDF5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HDF5_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HDF5_INC}"

   fi




   # only add stuff if mpi is not no and the vendor is defined
   if test "${with_mpi}" != no && test -n "${vendor_mpi}"; then

       # include path
       if test -n "${MPI_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${MPI_INC}"
       fi

       # libraries
       if test -n "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # -L${MPI_LIB} ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${MPI_LIB} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${MPI_LIB} ${mpi_libs}"
   fi

       elif test -z "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${mpi_libs}"
   fi

       fi

       # add MPI directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${MPI_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${MPI_INC}"

   fi


      # Libraries are platform-specific; done in ac_platforms.


   # print out vendor include paths
   echo "$as_me:$LINENO: checking \"vendor include paths\"" >&5
echo $ECHO_N "checking \"vendor include paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_INC_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_INC_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_INC_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor include dirs defined\"" >&5
echo "${ECHO_T}\"no vendor include dirs defined\"" >&6
   fi

   # print out vendor lib paths
   echo "$as_me:$LINENO: checking \"vendor lib paths\"" >&5
echo $ECHO_N "checking \"vendor lib paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_LIB_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_LIB_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_LIB_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor lib dirs defined\"" >&5
echo "${ECHO_T}\"no vendor lib dirs defined\"" >&6
   fi




       rptrigger=-rpath
       dilem=colon

       if test "${enable_shared}" = yes ; then

	   # turn off ranlib
	   RANLIB=':'

           if test "${dilem}" = "space"; then
	       RPATHA="${rptrigger} \${curdir}"
	       RPATHB="${rptrigger} \${curdir}/.."
	       RPATHC="${rptrigger} \${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "nospace"; then
	       RPATHA="${rptrigger}\${curdir}"
	       RPATHB="${rptrigger}\${curdir}/.."
	       RPATHC="${rptrigger}\${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "colon"; then
	       RPATH="${rptrigger} \${curdir}:\${curdir}/..:\${libdir} ${RPATH}"
           else
               { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
	   fi
       fi

       # add vendors to rpath
       for vendor_dir in ${VENDOR_LIB_DIRS}; do
                      so_libs=`ls ${vendor_dir}/*.so 2>/dev/null`
           if test ! "${so_libs:-none}" = "none"; then
              if test "${dilem}" = "space"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "nospace"; then
	          RPATH="${rptrigger}${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "colon"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              else
                  { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
   	      fi
           fi
       done




   ;;

   # *************
   # IBM AIX SETUP
   # *************
   *ibm-aix*)

       # dependency rules for IBM visual age compiler are complex
       if test "${with_cxx}" = asciwhite || test "${with_cxx}" = ibm; then
	   DEPENDENCY_RULES='Makefile.dep.xlC'
       fi

       # print out cpu message
       echo "$as_me:$LINENO: checking \"host platform cpu\"" >&5
echo $ECHO_N "checking \"host platform cpu\"... $ECHO_C" >&6
       echo "$as_me:$LINENO: result: \"${host_cpu}\"" >&5
echo "${ECHO_T}\"${host_cpu}\"" >&6


       if test "${with_posix:=no}" = yes ; then
	   with_posix='199309L'
       fi

       if test "${with_posix}" != no ; then
	   cat >>confdefs.h <<\_ACEOF
#define _POSIX_SOURCE 1
_ACEOF

	   cat >>confdefs.h <<_ACEOF
#define _POSIX_C_SOURCE $with_posix
_ACEOF

       fi



       # set up 32 or 64 bit compiling on IBM
       if test "${enable_32_bit:=no}" = yes ; then

	   # switch on gcc or xlC compiler
	   if test "${with_cxx}" = gcc; then
	       CXXFLAGS="${CXXFLAGS} -maix32"
	       CFLAGS="${CFLAGS} -maix32"
	   elif test "${with_cxx}" = asciwhite ||
                test "${with_cxx}" = ibm; then
	       CXXFLAGS="${CXXFLAGS} -q32"
	       CFLAGS="${CFLAGS} -q32"
	   fi

       elif test "${enable_64_bit:=no}" = yes ; then

	   # switch on gcc or xlC compiler
	   if test "${with_cxx}" = gcc; then
	       CXXFLAGS="${CXXFLAGS} -maix64"
	       CFLAGS="${CFLAGS} -maix64"
	   elif test "${with_cxx}" = asciwhite ||
                test "${with_cxx}" = ibm; then
	       CXXFLAGS="${CXXFLAGS} -q64"
	       CFLAGS="${CFLAGS} -q64"
	   fi

       fi

       # set up the heap size
       if test "${with_cxx}" = asciwhite ; then
	   LDFLAGS="${LDFLAGS} -bmaxdata:0x80000000"
       fi

       #
       # GCC on AIX FLAGS
       #
       if test "${with_cxx}" = gcc; then

	   # add the appropriate runtime linking for shared compiling
	   if test "${enable_shared}" = yes; then
	       ARFLAGS="-Xlinker -brtl -Xlinker -bh:5 ${ARFLAGS}"
	       ARLIBS='${DRACO_LIBS} ${VENDOR_LIBS}'
	       ARTESTLIBS='${PKG_LIBS} ${DRACO_TEST_LIBS} ${DRACO_LIBS}'
	       ARTESTLIBS="${ARTESTLIBS} \${VENDOR_TEST_LIBS} \${VENDOR_LIBS}"
	   fi

	   # we always allow shared object linking
	   if test "${enable_static_ld}" != yes; then
	       LDFLAGS="${LDFLAGS} -Xlinker -brtl -Xlinker -bh:5"
	   fi

	   # turn off the rpath
	   RPATH=''
       fi

       #
       # setup communication packages
       #
       if test -n "${vendor_mpi}"; then

	   # setup vendor mpi
	   if test "${with_mpi}" = vendor ; then

	       # on asciwhite the newmpxlC compiler script takes care
	       # of loading the mpi libraries; since it will fail
	       # if libraries are loaded and newmpxlC is used; throw
	       # an error if it occurs
	       if test "${with_cxx}" = asciwhite; then

		   if test -n "${MPI_INC}" || test -n "${MPI_LIB}"; then
		       { { echo "$as_me:$LINENO: error: \"Cannot set mpi paths with newmpxlC.\"" >&5
echo "$as_me: error: \"Cannot set mpi paths with newmpxlC.\"" >&2;}
   { (exit 1); exit 1; }; }
		   fi

		   mpi_libs=''

	       fi

	       # set up libraries if we are on ibm
	       if test "${with_cxx}" = ibm; then

		   # set up mpi library
		   mpi_libs='-lmpi'

	       fi

	       # now turn on long long support if we are using the
	       # visual age compiler
	       if test "${with_cxx}" = ibm ||
	          test "${with_cxx}" = asciwhite ; then

		   if test "${enable_strict_ansi}"; then
		       { echo "$as_me:$LINENO: WARNING: \"xlC set to allow long long\"" >&5
echo "$as_me: WARNING: \"xlC set to allow long long\"" >&2;}
		       STRICTFLAG="-qlanglvl=extended"
		       CFLAGS="${CFLAGS} -qlonglong"
		       CXXFLAGS="${CXXFLAGS} -qlonglong"
		   fi

	       fi

	   # setup mpich
	   elif test "${with_mpi}" = mpich ; then

	       # set up mpi libs
	       mpi_libs='-lmpich'

	   fi

       fi
       #
       # end of communication packages
       #

       #
       # OTHER VENDORS
       #

       # we don't have the other vendors setup explicitly

       #
       # finalize vendors
       #

   # call finalize functions for each vendor, the order is important
   # each vendor setup is appended to the previous; thus, the calling
   # level goes from high to low


   # set up the libraries and include path
   if test -n "${vendor_trilinos}" ; then

       # include path
       if test -n "${TRILINOS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${TRILINOS_INC}"
       fi

       # library path
       if test -n "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       elif test -z "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       fi

       # add TRILINOS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${TRILINOS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${TRILINOS_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_gsl}"; then

       # include path
       if test -n "${GSL_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GSL_INC}"
       fi

       # library path
       if test -n "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # -L${GSL_LIB} ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GSL_LIB} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GSL_LIB} ${gsl_libs}"
   fi

       elif test -z "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${gsl_libs}"
   fi

       fi

       # add GSL directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GSL_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GSL_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_superludist}"; then

       # include path
       if test -n "${SUPERLUDIST_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SUPERLUDIST_INC}"
       fi

       # library path
       # if this is a scalar build, use SUPERLU instead.
       if test "${with_c4}" = "scalar" ; then
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperlu"
   fi

         fi
       else
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperludist"
   fi

         fi
       fi

       # add SUPERLUDIST directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SUPERLUDIST_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SUPERLUDIST_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_aztec}" ; then

       # include path
       if test -n "${AZTEC_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${AZTEC_INC}"
       fi

       # library path
       if test -n "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -L${AZTEC_LIB} -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   fi

       elif test -z "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_aztec}"
   fi

       fi

       # add AZTEC directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${AZTEC_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${AZTEC_INC}"

   fi



   # set up the libraries
   if test -n "${vendor_pcg}"; then

       # library path
       if test -z "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_pcg}"
   fi

       elif test -n "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -L${PCG_LIB} -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${PCG_LIB} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${PCG_LIB} -l${with_pcg}"
   fi

       fi

       # add PCG directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${PCG_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_hypre}" ; then

       # include path
       if test -n "${HYPRE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HYPRE_INC}"
       fi

       # library path
       if test -n "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       elif test -z "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       fi

       # add HYPRE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HYPRE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HYPRE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_scalapack}" ; then

       # no includes for scalapack

       # library path
       if test -n "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -L${SCALAPACK_LIB} -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   fi

       elif test -z "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lscalapack"
   fi

       fi

       # add SCALAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SCALAPACK_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_blacs}" ; then

       # no includes for blacs

       # library path
       if test -n "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       elif test -z "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       fi

       # add BLACS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${BLACS_LIB}"

   fi


   # set up lapack libraries
   if test -n "${vendor_lapack}"; then

       # set libraries
       if test -z "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${lapack_libs}"
   fi

       elif test -n "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # -L${LAPACK_LIB} ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   fi

       fi

       # add LAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${LAPACK_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_eospac}"; then

       # set up library paths
       if test -z "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_eospac}"
   fi

       elif test -n "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -L${EOSPAC5_LIB} -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   fi

       fi

       # add EOSPAC5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${EOSPAC5_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_gandolf}"; then

       # set up library paths
       if test -z "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_gandolf}"
   fi

       elif test -n "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -L${GANDOLF_LIB} -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   fi

       fi

       # add GANDOLF directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GANDOLF_LIB}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_sprng}"; then

       # include path
       if test -n "${SPRNG_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPRNG_INC}"
       fi

       # libraries
       if test -n "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -L${SPRNG_LIB} -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   fi

       elif test -z "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_sprng}"
   fi

       fi

       # add sprng directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPRNG_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPRNG_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_grace}" ; then

       # include path
       if test -n "${GRACE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GRACE_INC}"
       fi

       # library path
       if test -n "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -L${GRACE_LIB} -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GRACE_LIB} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GRACE_LIB} -l${with_grace}"
   fi

       elif test -z "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_grace}"
   fi

       fi

       # add GRACE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GRACE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GRACE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_metis}" ; then

       # include path
       if test -n "${METIS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${METIS_INC}"
       fi

       # library path
       if test -n "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -L${METIS_LIB} -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${METIS_LIB} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${METIS_LIB} -l${with_metis}"
   fi

       elif test -z "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_metis}"
   fi

       fi

       # add METIS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${METIS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${METIS_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_spica}"; then

       # include path
       if test -n "${SPICA_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPICA_INC}"
       fi

       # libraries
       if test -n "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -L${SPICA_LIB} -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   fi

       elif test -z "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lSpicaCSG"
   fi

       fi

       # add spica directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPICA_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPICA_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_xerces}"; then

       # include path
       if test -n "${XERCES_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${XERCES_INC}"
       fi

       # libraries
       if test -n "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -L${XERCES_LIB} -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   fi

       elif test -z "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_xerces}"
   fi

       fi

       # add xerces directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${XERCES_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${XERCES_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_udm}" ; then

       # include path
       if test -n "${UDM_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${UDM_INC}"
           # set extra #define if using udm in parallel
           if test "${with_udm}" = mpi ; then
               cat >>confdefs.h <<\_ACEOF
#define UDM_HAVE_PARALLEL 1
_ACEOF

           fi
       fi

       # library path
       if test -n "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -L${UDM_LIB} -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${UDM_LIB} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${UDM_LIB} -ludm"
   fi

       elif test -z "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -ludm"
   fi

       fi

       # add UDM directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${UDM_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${UDM_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_hdf5}" ; then

       # include path
       if test -n "${HDF5_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HDF5_INC}"
       fi

       # library path
       if test -n "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -L${HDF5_LIB} -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   fi

       elif test -z "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lhdf5 -lz"
   fi

       fi

       # add HDF5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HDF5_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HDF5_INC}"

   fi




   # only add stuff if mpi is not no and the vendor is defined
   if test "${with_mpi}" != no && test -n "${vendor_mpi}"; then

       # include path
       if test -n "${MPI_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${MPI_INC}"
       fi

       # libraries
       if test -n "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # -L${MPI_LIB} ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${MPI_LIB} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${MPI_LIB} ${mpi_libs}"
   fi

       elif test -z "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${mpi_libs}"
   fi

       fi

       # add MPI directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${MPI_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${MPI_INC}"

   fi


      # Libraries are platform-specific; done in ac_platforms.


   # print out vendor include paths
   echo "$as_me:$LINENO: checking \"vendor include paths\"" >&5
echo $ECHO_N "checking \"vendor include paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_INC_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_INC_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_INC_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor include dirs defined\"" >&5
echo "${ECHO_T}\"no vendor include dirs defined\"" >&6
   fi

   # print out vendor lib paths
   echo "$as_me:$LINENO: checking \"vendor lib paths\"" >&5
echo $ECHO_N "checking \"vendor lib paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_LIB_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_LIB_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_LIB_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor lib dirs defined\"" >&5
echo "${ECHO_T}\"no vendor lib dirs defined\"" >&6
   fi



       # RPATH is derived from -L, we don't need an explicit setup.

       # do shared specific stuff
       if test "${enable_shared}" = yes ; then
	   # turn off ranlib
	   RANLIB=':'
       fi


   ;;

   # *****************
   # SUN/SOLARIS SETUP
   # *****************
   sparc-sun-solaris2.*)

       # print out cpu message
       echo "$as_me:$LINENO: checking \"host platform cpu\"" >&5
echo $ECHO_N "checking \"host platform cpu\"... $ECHO_C" >&6
       echo "$as_me:$LINENO: result: \"${host_cpu}\"" >&5
echo "${ECHO_T}\"${host_cpu}\"" >&6


       if test "${with_posix:=no}" = yes ; then
	   with_posix='199309L'
       fi

       if test "${with_posix}" != no ; then
	   cat >>confdefs.h <<\_ACEOF
#define _POSIX_SOURCE 1
_ACEOF

	   cat >>confdefs.h <<_ACEOF
#define _POSIX_C_SOURCE $with_posix
_ACEOF

       fi



       #
       # setup communication packages
       #

       # setup for mpi support
       # we only support mpich on sgis
       if test "${with_mpi}" = vendor ; then

	   { { echo "$as_me:$LINENO: error: \"We do not support vendor mpi on the SUN yet!\"" >&5
echo "$as_me: error: \"We do not support vendor mpi on the SUN yet!\"" >&2;}
   { (exit 1); exit 1; }; }

       elif test "${with_mpi}" = mpich ; then

	   # define sun-required libraries for mpich, v 1.0 (this
	   # needs to be updated for version 1.2)
	   mpi_libs='-lpmpi -lmpi -lsocket -lnsl'

       fi

       #
       # end of communication package setup
       #

       #
       # setup lapack
       #

       if test "${with_lapack}" = vendor ; then
	   lapack_libs='-llapack -lblas -lF77 -lM77 -lsunmath'
       fi

       #
       # end of lapack setup
       #

       #
       # finalize vendors
       #

   # call finalize functions for each vendor, the order is important
   # each vendor setup is appended to the previous; thus, the calling
   # level goes from high to low


   # set up the libraries and include path
   if test -n "${vendor_trilinos}" ; then

       # include path
       if test -n "${TRILINOS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${TRILINOS_INC}"
       fi

       # library path
       if test -n "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       elif test -z "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       fi

       # add TRILINOS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${TRILINOS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${TRILINOS_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_gsl}"; then

       # include path
       if test -n "${GSL_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GSL_INC}"
       fi

       # library path
       if test -n "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # -L${GSL_LIB} ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GSL_LIB} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GSL_LIB} ${gsl_libs}"
   fi

       elif test -z "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${gsl_libs}"
   fi

       fi

       # add GSL directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GSL_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GSL_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_superludist}"; then

       # include path
       if test -n "${SUPERLUDIST_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SUPERLUDIST_INC}"
       fi

       # library path
       # if this is a scalar build, use SUPERLU instead.
       if test "${with_c4}" = "scalar" ; then
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperlu"
   fi

         fi
       else
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperludist"
   fi

         fi
       fi

       # add SUPERLUDIST directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SUPERLUDIST_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SUPERLUDIST_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_aztec}" ; then

       # include path
       if test -n "${AZTEC_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${AZTEC_INC}"
       fi

       # library path
       if test -n "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -L${AZTEC_LIB} -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   fi

       elif test -z "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_aztec}"
   fi

       fi

       # add AZTEC directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${AZTEC_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${AZTEC_INC}"

   fi



   # set up the libraries
   if test -n "${vendor_pcg}"; then

       # library path
       if test -z "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_pcg}"
   fi

       elif test -n "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -L${PCG_LIB} -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${PCG_LIB} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${PCG_LIB} -l${with_pcg}"
   fi

       fi

       # add PCG directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${PCG_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_hypre}" ; then

       # include path
       if test -n "${HYPRE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HYPRE_INC}"
       fi

       # library path
       if test -n "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       elif test -z "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       fi

       # add HYPRE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HYPRE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HYPRE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_scalapack}" ; then

       # no includes for scalapack

       # library path
       if test -n "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -L${SCALAPACK_LIB} -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   fi

       elif test -z "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lscalapack"
   fi

       fi

       # add SCALAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SCALAPACK_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_blacs}" ; then

       # no includes for blacs

       # library path
       if test -n "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       elif test -z "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       fi

       # add BLACS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${BLACS_LIB}"

   fi


   # set up lapack libraries
   if test -n "${vendor_lapack}"; then

       # set libraries
       if test -z "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${lapack_libs}"
   fi

       elif test -n "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # -L${LAPACK_LIB} ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   fi

       fi

       # add LAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${LAPACK_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_eospac}"; then

       # set up library paths
       if test -z "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_eospac}"
   fi

       elif test -n "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -L${EOSPAC5_LIB} -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   fi

       fi

       # add EOSPAC5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${EOSPAC5_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_gandolf}"; then

       # set up library paths
       if test -z "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_gandolf}"
   fi

       elif test -n "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -L${GANDOLF_LIB} -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   fi

       fi

       # add GANDOLF directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GANDOLF_LIB}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_sprng}"; then

       # include path
       if test -n "${SPRNG_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPRNG_INC}"
       fi

       # libraries
       if test -n "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -L${SPRNG_LIB} -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   fi

       elif test -z "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_sprng}"
   fi

       fi

       # add sprng directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPRNG_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPRNG_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_grace}" ; then

       # include path
       if test -n "${GRACE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GRACE_INC}"
       fi

       # library path
       if test -n "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -L${GRACE_LIB} -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GRACE_LIB} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GRACE_LIB} -l${with_grace}"
   fi

       elif test -z "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_grace}"
   fi

       fi

       # add GRACE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GRACE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GRACE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_metis}" ; then

       # include path
       if test -n "${METIS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${METIS_INC}"
       fi

       # library path
       if test -n "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -L${METIS_LIB} -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${METIS_LIB} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${METIS_LIB} -l${with_metis}"
   fi

       elif test -z "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_metis}"
   fi

       fi

       # add METIS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${METIS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${METIS_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_spica}"; then

       # include path
       if test -n "${SPICA_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPICA_INC}"
       fi

       # libraries
       if test -n "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -L${SPICA_LIB} -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   fi

       elif test -z "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lSpicaCSG"
   fi

       fi

       # add spica directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPICA_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPICA_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_xerces}"; then

       # include path
       if test -n "${XERCES_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${XERCES_INC}"
       fi

       # libraries
       if test -n "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -L${XERCES_LIB} -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   fi

       elif test -z "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_xerces}"
   fi

       fi

       # add xerces directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${XERCES_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${XERCES_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_udm}" ; then

       # include path
       if test -n "${UDM_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${UDM_INC}"
           # set extra #define if using udm in parallel
           if test "${with_udm}" = mpi ; then
               cat >>confdefs.h <<\_ACEOF
#define UDM_HAVE_PARALLEL 1
_ACEOF

           fi
       fi

       # library path
       if test -n "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -L${UDM_LIB} -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${UDM_LIB} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${UDM_LIB} -ludm"
   fi

       elif test -z "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -ludm"
   fi

       fi

       # add UDM directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${UDM_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${UDM_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_hdf5}" ; then

       # include path
       if test -n "${HDF5_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HDF5_INC}"
       fi

       # library path
       if test -n "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -L${HDF5_LIB} -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   fi

       elif test -z "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lhdf5 -lz"
   fi

       fi

       # add HDF5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HDF5_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HDF5_INC}"

   fi




   # only add stuff if mpi is not no and the vendor is defined
   if test "${with_mpi}" != no && test -n "${vendor_mpi}"; then

       # include path
       if test -n "${MPI_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${MPI_INC}"
       fi

       # libraries
       if test -n "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # -L${MPI_LIB} ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${MPI_LIB} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${MPI_LIB} ${mpi_libs}"
   fi

       elif test -z "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${mpi_libs}"
   fi

       fi

       # add MPI directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${MPI_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${MPI_INC}"

   fi


      # Libraries are platform-specific; done in ac_platforms.


   # print out vendor include paths
   echo "$as_me:$LINENO: checking \"vendor include paths\"" >&5
echo $ECHO_N "checking \"vendor include paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_INC_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_INC_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_INC_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor include dirs defined\"" >&5
echo "${ECHO_T}\"no vendor include dirs defined\"" >&6
   fi

   # print out vendor lib paths
   echo "$as_me:$LINENO: checking \"vendor lib paths\"" >&5
echo $ECHO_N "checking \"vendor lib paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_LIB_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_LIB_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_LIB_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor lib dirs defined\"" >&5
echo "${ECHO_T}\"no vendor lib dirs defined\"" >&6
   fi




       rptrigger=-R
       dilem=space

       if test "${enable_shared}" = yes ; then

	   # turn off ranlib
	   RANLIB=':'

           if test "${dilem}" = "space"; then
	       RPATHA="${rptrigger} \${curdir}"
	       RPATHB="${rptrigger} \${curdir}/.."
	       RPATHC="${rptrigger} \${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "nospace"; then
	       RPATHA="${rptrigger}\${curdir}"
	       RPATHB="${rptrigger}\${curdir}/.."
	       RPATHC="${rptrigger}\${libdir}"
	       RPATH="${RPATHA} ${RPATHB} ${RPATHC} ${RPATH}"
           elif test "${dilem}" = "colon"; then
	       RPATH="${rptrigger} \${curdir}:\${curdir}/..:\${libdir} ${RPATH}"
           else
               { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
	   fi
       fi

       # add vendors to rpath
       for vendor_dir in ${VENDOR_LIB_DIRS}; do
                      so_libs=`ls ${vendor_dir}/*.so 2>/dev/null`
           if test ! "${so_libs:-none}" = "none"; then
              if test "${dilem}" = "space"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "nospace"; then
	          RPATH="${rptrigger}${vendor_dir} ${RPATH}"
              elif test "${dilem}" = "colon"; then
	          RPATH="${rptrigger} ${vendor_dir} ${RPATH}"
              else
                  { { echo "$as_me:$LINENO: error: \"Cannot determine what rpath format to use!\"" >&5
echo "$as_me: error: \"Cannot determine what rpath format to use!\"" >&2;}
   { (exit 1); exit 1; }; }
   	      fi
           fi
       done



   ;;

   # *********************
   # MAC OS X/DARWIN SETUP
   # *********************
   powerpc-apple-darwin*)

       # dependency rules for IBM visual age compiler are complex
       if test "${with_cxx}" = ibm; then
	   DEPENDENCY_RULES='Makefile.dep.xlC.darwin'
       fi

       # print out cpu message
       echo "$as_me:$LINENO: checking \"host platform cpu\"" >&5
echo $ECHO_N "checking \"host platform cpu\"... $ECHO_C" >&6
       echo "$as_me:$LINENO: result: \"${host_cpu}\"" >&5
echo "${ECHO_T}\"${host_cpu}\"" >&6


       if test "${with_posix:=no}" = yes ; then
	   with_posix='199309L'
       fi

       if test "${with_posix}" != no ; then
	   cat >>confdefs.h <<\_ACEOF
#define _POSIX_SOURCE 1
_ACEOF

	   cat >>confdefs.h <<_ACEOF
#define _POSIX_C_SOURCE $with_posix
_ACEOF

       fi



       #
       # LONG LONG on Linux
       #

       # always allow long long in strict ansi mode (if possible)

       if test -n "${STRICTFLAG}"; then

           case $CXX in

           # GNU g++
           g++)
               { echo "$as_me:$LINENO: g++ -ansi option set to allow long long type!" >&5
echo "$as_me: g++ -ansi option set to allow long long type!" >&6;}
               STRICTFLAG="$STRICTFLAG -Wno-long-long"
               { echo "$as_me:$LINENO: g++ -ansi option set to allow long double type" >&5
echo "$as_me: g++ -ansi option set to allow long double type" >&6;}
               STRICTFLAG="$STRICTFLAG -Wno-long-double"
           ;;
  	   ibm)
	       { echo "$as_me:$LINENO: WARNING: \"xlC set to allow long long\"" >&5
echo "$as_me: WARNING: \"xlC set to allow long long\"" >&2;}
	       STRICTFLAG="-qlanglvl=extended"
	       CFLAGS="${CFLAGS} -qlonglong"
	       CXXFLAGS="${CXXFLAGS} -qlonglong"
	   ;;
           # catchall
           *)
               # do nothing
           ;;

           esac

       fi

       #
       # end of LONG LONG setup
       #

       #
       # Setup communications packages
       #

       # setup for mpi support, on linux vendor and mpich are one
       # and the same because there is no vendor for mpi on linux

       if test "${with_mpi}" = vendor ; then
	   with_mpi=mpich
       fi

       # For CCS-2/4 users, we can also specify LAMPI in place of
       # mpich.

       case ${with_mpi} in
       mpich)
	   # define mpi libs for mpich on linux
	   mpi_libs='-lmpich'
           ;;
       lampi | LAMPI | LA-MPI)
           with_mpi='LAMPI'
	   # define mpi libs for LAMPI on linux
	   mpi_libs='-lmpi'
           echo "$as_me:$LINENO: checking \"mpirun -version\"" >&5
echo $ECHO_N "checking \"mpirun -version\"... $ECHO_C" >&6
           mpi_version=`mpirun -version`
           if test -n "`echo ${mpi_version} | grep -i LA-MPI`"; then
              echo "$as_me:$LINENO: result: ${mpi_version}" >&5
echo "${ECHO_T}${mpi_version}" >&6
           else
              { { echo "$as_me:$LINENO: error: \"Did not find LA-MPI version of mpirun.\"" >&5
echo "$as_me: error: \"Did not find LA-MPI version of mpirun.\"" >&2;}
   { (exit 1); exit 1; }; }
           fi
           ;;
       esac

	mpi_libs="-lmpich -lpmpich -lz"

       #
       # setup lapack
       #

       # we assume that the vendor option on linux is the install of
       # redhat rpms in /usr/lib; we don't worry about atlas because
       # that has already been defined

       if test "${with_lapack}" = vendor ; then
	   lapack_libs='-llapack -lblas'
       fi

       #
       # end of lapack setup
       #

       # setup lf95 libs

   if test "${CXX}" != g++; then
       { { echo "$as_me:$LINENO: error: \"LAHEY must be configured with g++ on LINUX.\"" >&5
echo "$as_me: error: \"LAHEY must be configured with g++ on LINUX.\"" >&2;}
   { (exit 1); exit 1; }; }
   fi

   echo "$as_me:$LINENO: checking \"for extra lf95 library requirements.\"" >&5
echo $ECHO_N "checking \"for extra lf95 library requirements.\"... $ECHO_C" >&6
   if test -n "${vendor_eospac}"    ||
      test -n "${vendor_scalapack}" ||
      test -n "${vendor_trilinos}"; then
         f90_lib_loc=`which lf95 | sed -e 's/bin\/lf95/lib/'`
	 extra_f90_libs="-L${f90_lib_loc} -lfj9i6 -lfj9e6 -lfj9f6 -lfst -lfccx86_6a"
         LIBS="${LIBS} ${extra_f90_libs}"
         extra_f90_rpaths="-Xlinker -rpath ${f90_lib_loc}"
         RPATH="${RPATH} ${extra_f90_rpaths}"
         echo "$as_me:$LINENO: result: \"${extra_f90_libs}\"" >&5
echo "${ECHO_T}\"${extra_f90_libs}\"" >&6
   else
         echo "$as_me:$LINENO: result: \"none.\"" >&5
echo "${ECHO_T}\"none.\"" >&6
   fi

      echo "$as_me:$LINENO: checking \"for F90FLAGS\"" >&5
echo $ECHO_N "checking \"for F90FLAGS\"... $ECHO_C" >&6
   if test "${with_opt:=0}" != 0 ; then
      F90FLAGS="${F90FLAGS} -O${with_opt}"
   else
      F90FLAGS="${F90FLAGS} -g"
   fi

      F90FLAGS="${F90FLAGS} -Cpp"
   echo "$as_me:$LINENO: result: ${F90FLAGS}" >&5
echo "${ECHO_T}${F90FLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90MPIFLAGS\"" >&5
echo $ECHO_N "checking \"for F90MPIFLAGS\"... $ECHO_C" >&6
   if test ${with_mpi:=no} = "no"; then
      F90MPIFLAGS="${F90FLAGS} -DC4_SCALAR"
   else
      if test "${with_mpi}" = mpich; then
         F90MPIFLAGS="-lfmpich"
      else          F90MPIFLAGS="-lmpi"
      fi
   fi
   echo "$as_me:$LINENO: result: ${F90MPIFLAGS}" >&5
echo "${ECHO_T}${F90MPIFLAGS}" >&6

      echo "$as_me:$LINENO: checking \"for F90CXXFLAGS\"" >&5
echo $ECHO_N "checking \"for F90CXXFLAGS\"... $ECHO_C" >&6
   CXXLIBDIR=${GCC_LIB_DIR}
   F90CXXFLAGS="-L${CXXLIBDIR} -lstdc++"
   echo "$as_me:$LINENO: result: ${F90CXXFLAGS}" >&5
echo "${ECHO_T}${F90CXXFLAGS}" >&6

   echo "$as_me:$LINENO: checking \"for F90VENDOR_LIBS\"" >&5
echo $ECHO_N "checking \"for F90VENDOR_LIBS\"... $ECHO_C" >&6
   F90VENDOR_LIBS="$F90VENDOR_LIBS ${F90MPIFLAGS} ${F90CXXFLAGS}"
   echo "$as_me:$LINENO: result: \"${F90VENDOR_LIBS}\"" >&5
echo "${ECHO_T}\"${F90VENDOR_LIBS}\"" >&6


       #
       # add libg2c to LIBS if lapack, gandolf, or pcg is used
       #
       echo "$as_me:$LINENO: checking \"libg2c requirements\"" >&5
echo $ECHO_N "checking \"libg2c requirements\"... $ECHO_C" >&6
       if test -n "${vendor_lapack}" || test -n "${vendor_pcg}" ||
	  test -n "${vendor_gandolf}"; then

	   # Add g2c for various compilers
	   if test "${CXX}" = g++ ; then
	       LIBS="${LIBS} -lg2c"
	       echo "$as_me:$LINENO: result: \"-lg2c added to LIBS\"" >&5
echo "${ECHO_T}\"-lg2c added to LIBS\"" >&6
	   elif test "${CXX}" = icpc ; then
               # Extract the first word of "g++", so it can be a program name with args.
set dummy g++; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_GCC_BIN+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $GCC_BIN in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GCC_BIN="$GCC_BIN" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_GCC_BIN="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_GCC_BIN" && ac_cv_path_GCC_BIN="null"
  ;;
esac
fi
GCC_BIN=$ac_cv_path_GCC_BIN

if test -n "$GCC_BIN"; then
  echo "$as_me:$LINENO: result: $GCC_BIN" >&5
echo "${ECHO_T}$GCC_BIN" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

               GCC_BIN=`dirname ${GCC_BIN}`
               GCC_HOME=`dirname ${GCC_BIN}`
               GCC_LIB_DIR="${GCC_HOME}/lib"
	       LIBS="${LIBS} -L${GCC_LIB_DIR} -lg2c"
	       echo "$as_me:$LINENO: result: \"-lg2c added to LIBS\"" >&5
echo "${ECHO_T}\"-lg2c added to LIBS\"" >&6
           else
               echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
	   fi

       else
	   echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi


       #
       # If dlopen is specified, 1) add libdl to LIBS;
       # 2) add -fPIC to compile flags.
       #
       echo "$as_me:$LINENO: checking \"libdl requirements\"" >&5
echo $ECHO_N "checking \"libdl requirements\"... $ECHO_C" >&6
       if test -n "${vendor_dlopen}" ; then
           if test "${enable_dlopen}" = yes ; then
               LIBS="${LIBS} -ldl"

               # if we are using g++ add fPIC
               if test "${CXX}" = g++ ; then
                   CFLAGS="${CFLAGS} -fPIC"
                   CXXFLAGS="${CXXFLAGS} -fPIC"
                   echo "$as_me:$LINENO: result: \"-ldl added to LIBS -fPIC added to compile flags\"" >&5
echo "${ECHO_T}\"-ldl added to LIBS -fPIC added to compile flags\"" >&6
               else
                   echo "$as_me:$LINENO: result: \"-ldl added to LIBS\"" >&5
echo "${ECHO_T}\"-ldl added to LIBS\"" >&6
               fi

           else
               echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
           fi

       else
           echo "$as_me:$LINENO: result: \"not needed\"" >&5
echo "${ECHO_T}\"not needed\"" >&6
       fi

       #
       # Set up fpe_trap for this platform.
       #
       cat >>confdefs.h <<\_ACEOF
#define FPETRAP_DARWIN_PPC 1
_ACEOF


       #
       # finalize vendors
       #

   # call finalize functions for each vendor, the order is important
   # each vendor setup is appended to the previous; thus, the calling
   # level goes from high to low


   # set up the libraries and include path
   if test -n "${vendor_trilinos}" ; then

       # include path
       if test -n "${TRILINOS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${TRILINOS_INC}"
       fi

       # library path
       if test -n "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${TRILINOS_LIB} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       elif test -z "${TRILINOS_LIB}" ; then

   # vendor_trilinos is the vendor_<> tag (equals pkg or test)
   # -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils are the directories added

   if test "${vendor_trilinos}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   elif test "${vendor_trilinos}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_trilinos} -lamesos -lepetraext -lepetra -lteuchos -ltriutils"
   fi

       fi

       # add TRILINOS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${TRILINOS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${TRILINOS_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_gsl}"; then

       # include path
       if test -n "${GSL_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GSL_INC}"
       fi

       # library path
       if test -n "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # -L${GSL_LIB} ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GSL_LIB} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GSL_LIB} ${gsl_libs}"
   fi

       elif test -z "${GSL_LIB}" ; then

   # vendor_gsl is the vendor_<> tag (equals pkg or test)
   # ${gsl_libs} are the directories added

   if test "${vendor_gsl}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${gsl_libs}"
   elif test "${vendor_gsl}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${gsl_libs}"
   fi

       fi

       # add GSL directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GSL_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GSL_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_superludist}"; then

       # include path
       if test -n "${SUPERLUDIST_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SUPERLUDIST_INC}"
       fi

       # library path
       # if this is a scalar build, use SUPERLU instead.
       if test "${with_c4}" = "scalar" ; then
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperlu"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperlu are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperlu"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperlu"
   fi

         fi
       else
         if test -n "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -L${SUPERLUDIST_LIB} -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SUPERLUDIST_LIB} -lsuperludist"
   fi

         elif test -z "${SUPERLUDIST_LIB}" ; then

   # vendor_superludist is the vendor_<> tag (equals pkg or test)
   # -lsuperludist are the directories added

   if test "${vendor_superludist}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lsuperludist"
   elif test "${vendor_superludist}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lsuperludist"
   fi

         fi
       fi

       # add SUPERLUDIST directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SUPERLUDIST_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SUPERLUDIST_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_aztec}" ; then

       # include path
       if test -n "${AZTEC_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${AZTEC_INC}"
       fi

       # library path
       if test -n "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -L${AZTEC_LIB} -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${AZTEC_LIB} -l${with_aztec}"
   fi

       elif test -z "${AZTEC_LIB}" ; then

   # vendor_aztec is the vendor_<> tag (equals pkg or test)
   # -l${with_aztec} are the directories added

   if test "${vendor_aztec}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_aztec}"
   elif test "${vendor_aztec}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_aztec}"
   fi

       fi

       # add AZTEC directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${AZTEC_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${AZTEC_INC}"

   fi



   # set up the libraries
   if test -n "${vendor_pcg}"; then

       # library path
       if test -z "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_pcg}"
   fi

       elif test -n "${PCG_LIB}" ; then

   # vendor_pcg is the vendor_<> tag (equals pkg or test)
   # -L${PCG_LIB} -l${with_pcg} are the directories added

   if test "${vendor_pcg}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${PCG_LIB} -l${with_pcg}"
   elif test "${vendor_pcg}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${PCG_LIB} -l${with_pcg}"
   fi

       fi

       # add PCG directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${PCG_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_hypre}" ; then

       # include path
       if test -n "${HYPRE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HYPRE_INC}"
       fi

       # library path
       if test -n "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HYPRE_LIB} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       elif test -z "${HYPRE_LIB}" ; then


   # vendor_hypre is the vendor_<> tag (equals pkg or test)
   # -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities are the directories added

   if test "${vendor_hypre}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   elif test "${vendor_hypre}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lHYPRE_parcsr_ls -lHYPRE_DistributedMatrixPilutSolver -lHYPRE_ParaSails -lHYPRE_Euclid -lHYPRE_MatrixMatrix -lHYPRE_DistributedMatrix -lHYPRE_IJ_mv -lHYPRE_parcsr_mv -lHYPRE_seq_mv -lHYPRE_krylov -lHYPRE_utilities"
   fi


       fi

       # add HYPRE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HYPRE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HYPRE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_scalapack}" ; then

       # no includes for scalapack

       # library path
       if test -n "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -L${SCALAPACK_LIB} -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SCALAPACK_LIB} -lscalapack"
   fi

       elif test -z "${SCALAPACK_LIB}" ; then

   # vendor_scalapack is the vendor_<> tag (equals pkg or test)
   # -lscalapack are the directories added

   if test "${vendor_scalapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lscalapack"
   elif test "${vendor_scalapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lscalapack"
   fi

       fi

       # add SCALAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SCALAPACK_LIB}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_blacs}" ; then

       # no includes for blacs

       # library path
       if test -n "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${BLACS_LIB} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       elif test -z "${BLACS_LIB}" ; then

   # vendor_blacs is the vendor_<> tag (equals pkg or test)
   # -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs are the directories added

   if test "${vendor_blacs}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   elif test "${vendor_blacs}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lblacsF77init -lblacsCinit -lblacs -lblacsCinit -lblacs"
   fi

       fi

       # add BLACS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${BLACS_LIB}"

   fi


   # set up lapack libraries
   if test -n "${vendor_lapack}"; then

       # set libraries
       if test -z "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${lapack_libs}"
   fi

       elif test -n "${LAPACK_LIB}" ; then

   # vendor_lapack is the vendor_<> tag (equals pkg or test)
   # -L${LAPACK_LIB} ${lapack_libs} are the directories added

   if test "${vendor_lapack}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   elif test "${vendor_lapack}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${LAPACK_LIB} ${lapack_libs}"
   fi

       fi

       # add LAPACK directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${LAPACK_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_eospac}"; then

       # set up library paths
       if test -z "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_eospac}"
   fi

       elif test -n "${EOSPAC5_LIB}" ; then

   # vendor_eospac is the vendor_<> tag (equals pkg or test)
   # -L${EOSPAC5_LIB} -l${with_eospac} are the directories added

   if test "${vendor_eospac}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   elif test "${vendor_eospac}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${EOSPAC5_LIB} -l${with_eospac}"
   fi

       fi

       # add EOSPAC5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${EOSPAC5_LIB}"

   fi



   # set up the libraries
   if test -n "${vendor_gandolf}"; then

       # set up library paths
       if test -z "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_gandolf}"
   fi

       elif test -n "${GANDOLF_LIB}" ; then

   # vendor_gandolf is the vendor_<> tag (equals pkg or test)
   # -L${GANDOLF_LIB} -l${with_gandolf} are the directories added

   if test "${vendor_gandolf}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   elif test "${vendor_gandolf}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GANDOLF_LIB} -l${with_gandolf}"
   fi

       fi

       # add GANDOLF directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GANDOLF_LIB}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_sprng}"; then

       # include path
       if test -n "${SPRNG_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPRNG_INC}"
       fi

       # libraries
       if test -n "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -L${SPRNG_LIB} -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPRNG_LIB} -l${with_sprng}"
   fi

       elif test -z "${SPRNG_LIB}" ; then

   # vendor_sprng is the vendor_<> tag (equals pkg or test)
   # -l${with_sprng} are the directories added

   if test "${vendor_sprng}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_sprng}"
   elif test "${vendor_sprng}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_sprng}"
   fi

       fi

       # add sprng directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPRNG_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPRNG_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_grace}" ; then

       # include path
       if test -n "${GRACE_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${GRACE_INC}"
       fi

       # library path
       if test -n "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -L${GRACE_LIB} -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${GRACE_LIB} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${GRACE_LIB} -l${with_grace}"
   fi

       elif test -z "${GRACE_LIB}" ; then

   # vendor_grace is the vendor_<> tag (equals pkg or test)
   # -l${with_grace} are the directories added

   if test "${vendor_grace}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_grace}"
   elif test "${vendor_grace}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_grace}"
   fi

       fi

       # add GRACE directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${GRACE_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${GRACE_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_metis}" ; then

       # include path
       if test -n "${METIS_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${METIS_INC}"
       fi

       # library path
       if test -n "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -L${METIS_LIB} -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${METIS_LIB} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${METIS_LIB} -l${with_metis}"
   fi

       elif test -z "${METIS_LIB}" ; then

   # vendor_metis is the vendor_<> tag (equals pkg or test)
   # -l${with_metis} are the directories added

   if test "${vendor_metis}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_metis}"
   elif test "${vendor_metis}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_metis}"
   fi

       fi

       # add METIS directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${METIS_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${METIS_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_spica}"; then

       # include path
       if test -n "${SPICA_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${SPICA_INC}"
       fi

       # libraries
       if test -n "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -L${SPICA_LIB} -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${SPICA_LIB} -lSpicaCSG"
   fi

       elif test -z "${SPICA_LIB}" ; then

   # vendor_spica is the vendor_<> tag (equals pkg or test)
   # -lSpicaCSG are the directories added

   if test "${vendor_spica}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lSpicaCSG"
   elif test "${vendor_spica}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lSpicaCSG"
   fi

       fi

       # add spica directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${SPICA_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${SPICA_INC}"

   fi


   # set up the libraries and include path
   if test -n "${vendor_xerces}"; then

       # include path
       if test -n "${XERCES_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${XERCES_INC}"
       fi

       # libraries
       if test -n "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -L${XERCES_LIB} -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${XERCES_LIB} -l${with_xerces}"
   fi

       elif test -z "${XERCES_LIB}" ; then

   # vendor_xerces is the vendor_<> tag (equals pkg or test)
   # -l${with_xerces} are the directories added

   if test "${vendor_xerces}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -l${with_xerces}"
   elif test "${vendor_xerces}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -l${with_xerces}"
   fi

       fi

       # add xerces directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${XERCES_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${XERCES_INC}"

   fi




   # set up the libraries and include path
   if test -n "${vendor_udm}" ; then

       # include path
       if test -n "${UDM_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${UDM_INC}"
           # set extra #define if using udm in parallel
           if test "${with_udm}" = mpi ; then
               cat >>confdefs.h <<\_ACEOF
#define UDM_HAVE_PARALLEL 1
_ACEOF

           fi
       fi

       # library path
       if test -n "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -L${UDM_LIB} -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${UDM_LIB} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${UDM_LIB} -ludm"
   fi

       elif test -z "${UDM_LIB}" ; then

   # vendor_udm is the vendor_<> tag (equals pkg or test)
   # -ludm are the directories added

   if test "${vendor_udm}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -ludm"
   elif test "${vendor_udm}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -ludm"
   fi

       fi

       # add UDM directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${UDM_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${UDM_INC}"

   fi



   # set up the libraries and include path
   if test -n "${vendor_hdf5}" ; then

       # include path
       if test -n "${HDF5_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${HDF5_INC}"
       fi

       # library path
       if test -n "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -L${HDF5_LIB} -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${HDF5_LIB} -lhdf5 -lz"
   fi

       elif test -z "${HDF5_LIB}" ; then

   # vendor_hdf5 is the vendor_<> tag (equals pkg or test)
   # -lhdf5 -lz are the directories added

   if test "${vendor_hdf5}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -lhdf5 -lz"
   elif test "${vendor_hdf5}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -lhdf5 -lz"
   fi

       fi

       # add HDF5 directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${HDF5_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${HDF5_INC}"

   fi




   # only add stuff if mpi is not no and the vendor is defined
   if test "${with_mpi}" != no && test -n "${vendor_mpi}"; then

       # include path
       if test -n "${MPI_INC}"; then
	   # add to include path
	   VENDOR_INC="${VENDOR_INC} -I${MPI_INC}"
       fi

       # libraries
       if test -n "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # -L${MPI_LIB} ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} -L${MPI_LIB} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} -L${MPI_LIB} ${mpi_libs}"
   fi

       elif test -z "${MPI_LIB}" ; then

   # vendor_mpi is the vendor_<> tag (equals pkg or test)
   # ${mpi_libs} are the directories added

   if test "${vendor_mpi}" = pkg ; then
       VENDOR_LIBS="${VENDOR_LIBS} ${mpi_libs}"
   elif test "${vendor_mpi}" = test ; then
       VENDOR_TEST_LIBS="${VENDOR_TEST_LIBS} ${mpi_libs}"
   fi

       fi

       # add MPI directory to VENDOR_LIB_DIRS
       VENDOR_LIB_DIRS="${VENDOR_LIB_DIRS} ${MPI_LIB}"
       VENDOR_INC_DIRS="${VENDOR_INC_DIRS} ${MPI_INC}"

   fi


      # Libraries are platform-specific; done in ac_platforms.


   # print out vendor include paths
   echo "$as_me:$LINENO: checking \"vendor include paths\"" >&5
echo $ECHO_N "checking \"vendor include paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_INC_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_INC_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_INC_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor include dirs defined\"" >&5
echo "${ECHO_T}\"no vendor include dirs defined\"" >&6
   fi

   # print out vendor lib paths
   echo "$as_me:$LINENO: checking \"vendor lib paths\"" >&5
echo $ECHO_N "checking \"vendor lib paths\"... $ECHO_C" >&6
   if test -n "${VENDOR_LIB_DIRS}"; then
       echo "$as_me:$LINENO: result: \"${VENDOR_LIB_DIRS}\"" >&5
echo "${ECHO_T}\"${VENDOR_LIB_DIRS}\"" >&6
   else
       echo "$as_me:$LINENO: result: \"no vendor lib dirs defined\"" >&5
echo "${ECHO_T}\"no vendor lib dirs defined\"" >&6
   fi




   ;;

   # *******
   # NOTHING
   # *******
   *)
       { { echo "$as_me:$LINENO: error: \"Cannot figure out the platform or host!\"" >&5
echo "$as_me: error: \"Cannot figure out the platform or host!\"" >&2;}
   { (exit 1); exit 1; }; }
   ;;
   esac

   # add user-defined libraries
   LIBS="${LIBS} ${with_libs} -lm"


   # determine whether this is a scalar or parallel test suite,
   # the tests can be inherently scalar or they can be the result
   # of a parallel build

   test_scalar='no'

   # If we ran AC_RUNTESTS with "serial" then mark it so here.
   for np in $test_nprocs; do
       if test $np = serial || test $np = scalar ; then
          test_scalar="scalar"
       fi
   done

   # if this is a parallel build, mark the tests scalar
   if test "${with_c4}" = scalar ; then
       test_scalar="scalar"
   fi

   # define the TESTFLAGS, for parallel runs the processor will be
   # added later in the Makefile

   if test "${test_scalar}" = scalar ; then
       test_flags="--${test_exe:=binary}"
   elif test "${with_c4}" = mpi ; then
       test_flags="--${test_exe:=binary} --mpi"
   fi

   ## define the test_output_files for cleaning
   for file in $test_alltarget; do
       if test "${test_scalar}" = scalar ; then
	   test_output_files="${test_output_files} ${file}-scalar.log"
       else
	   for np in $test_nprocs; do
	       test_output_files="${test_output_files} ${file}-${np}.log"
	   done
       fi
   done

   # Define the package-level source directory (e.g. draco)

   # $srcdir is the component's source directory
   # package_top_srcdir is the variable to store the package's main source directory in.

   temp_dir=$srcdir
   echo "$as_me:$LINENO: checking package top source directory" >&5
echo $ECHO_N "checking package top source directory... $ECHO_C" >&6
   while test -d $temp_dir -a ! -d $temp_dir/config ; do
       temp_dir="${temp_dir}/.."
   done
   if test -d $temp_dir; then
       package_top_srcdir=`cd $temp_dir; pwd;`
       echo "$as_me:$LINENO: result: $package_top_srcdir" >&5
echo "${ECHO_T}$package_top_srcdir" >&6
   else
       { { echo "$as_me:$LINENO: error: 'Could not find package top source directory'" >&5
echo "$as_me: error: 'Could not find package top source directory'" >&2;}
   { (exit 1); exit 1; }; }
   fi




   # these variables are declared "precious", meaning that they are
   # automatically substituted, put in the configure --help, and
   # cached





   # dependency rules


   # other compiler substitutions

   # install program

   # files to install
   : ${installfiles:='${install_executable} ${install_lib} ${install_headers}'}

   # package libraries

   # package testing libraries

   # libraries

   # configure options

   # directories in source tree






   # Get the default output location
      if test ${doxygen_output_top} = DEFAULT; then
       doxygen_output_top="${prefix}/documentation"

   fi


   # Define some package-level directories
   header_dir=${package_top_srcdir}/autodoc/html
   config_dir=${package_top_srcdir}/config

   abs_srcdir=`cd ${srcdir}; pwd`
   autodoc_dir=${abs_srcdir}/autodoc

   # For a component, the doxygen input is the srcdir and the examples
   # are in the tests
   echo "$as_me:$LINENO: checking doxygen input directories" >&5
echo $ECHO_N "checking doxygen input directories... $ECHO_C" >&6
   if test -d ${abs_srcdir}; then
      doxygen_input="${doxygen_input} ${abs_srcdir}"
   fi
   if test -d ${autodoc_dir}; then
      doxygen_input="${doxygen_input} ${autodoc_dir}"
   fi
   echo "$as_me:$LINENO: result: ${doxygen_input}" >&5
echo "${ECHO_T}${doxygen_input}" >&6
   if test -d ${abs_srcdir}/test; then
      doxygen_examples=${abs_srcdir}/test
   fi

   # Set the package-level html output location
   package_html=${doxygen_output_top}/html

   # The local dir is different from the current dir.
   # localdir=`pwd`/autodoc

   # Set the component output locations.
   doxygen_html_output="${doxygen_output_top}/html/${package}"
   doxygen_latex_output="${doxygen_output_top}/latex/${package}"

   # Relative location of the package-level html output.
   for _lcl_i in doxygen_html_output:package_html:rel_package_html; do
  _lcl_from=\$`echo "$_lcl_i" | sed 's,:.*$,,'`
  _lcl_to=\$`echo "$_lcl_i" | sed 's,^[^:]*:,,' | sed 's,:[^:]*$,,'`
  _lcl_result_var=`echo "$_lcl_i" | sed 's,^.*:,,'`
  _lcl_receval="$_lcl_from"
_lcl_from=`(test "x$prefix" = xNONE && prefix="$ac_default_prefix"
     test "x$exec_prefix" = xNONE && exec_prefix="${prefix}"
     _lcl_receval_old=''
     while test "$_lcl_receval_old" != "$_lcl_receval"; do
       _lcl_receval_old="$_lcl_receval"
       eval _lcl_receval="\"$_lcl_receval\""
     done
     echo "$_lcl_receval")`
  _lcl_receval="$_lcl_to"
_lcl_to=`(test "x$prefix" = xNONE && prefix="$ac_default_prefix"
     test "x$exec_prefix" = xNONE && exec_prefix="${prefix}"
     _lcl_receval_old=''
     while test "$_lcl_receval_old" != "$_lcl_receval"; do
       _lcl_receval_old="$_lcl_receval"
       eval _lcl_receval="\"$_lcl_receval\""
     done
     echo "$_lcl_receval")`
  _lcl_notation="$_lcl_from$_lcl_to"
  case ":$_lcl_from:" in
# change empty paths to '.'
  ::) _lcl_from='.' ;;
# strip trailing slashes
  :*[\\/]:) _lcl_from=`echo "$_lcl_from" | sed 's,[\\/]*$,,'` ;;
  :*:) ;;
esac
# squeze repeated slashes
case '/' in
# if the path contains any backslashes, turn slashes into backslashes
 *\\*) _lcl_from=`echo "$_lcl_from" | sed 's,\(.\)[\\/][\\/]*,\1\\\\,g'` ;;
# if the path contains slashes, also turn backslashes into slashes
 *) _lcl_from=`echo "$_lcl_from" | sed 's,\(.\)[\\/][\\/]*,\1/,g'` ;;
esac
  case ":$_lcl_to:" in
# change empty paths to '.'
  ::) _lcl_to='.' ;;
# strip trailing slashes
  :*[\\/]:) _lcl_to=`echo "$_lcl_to" | sed 's,[\\/]*$,,'` ;;
  :*:) ;;
esac
# squeze repeated slashes
case '/' in
# if the path contains any backslashes, turn slashes into backslashes
 *\\*) _lcl_to=`echo "$_lcl_to" | sed 's,\(.\)[\\/][\\/]*,\1\\\\,g'` ;;
# if the path contains slashes, also turn backslashes into slashes
 *) _lcl_to=`echo "$_lcl_to" | sed 's,\(.\)[\\/][\\/]*,\1/,g'` ;;
esac
  _lcl_common_prefix=''
_lcl_second_prefix_match=''
while test "$_lcl_second_prefix_match" != 0; do
  _lcl_first_prefix=`expr "x$_lcl_from" : "x\($_lcl_common_prefix/*[^/]*\)"`
  _lcl_second_prefix_match=`expr "x$_lcl_to" : "x$_lcl_first_prefix"`
  if test "$_lcl_second_prefix_match" != 0; then
    if test "$_lcl_first_prefix" != "$_lcl_common_prefix"; then
      _lcl_common_prefix="$_lcl_first_prefix"
    else
      _lcl_second_prefix_match=0
    fi
  fi
done
_lcl_first_suffix=`expr "x$_lcl_from" : "x$_lcl_common_prefix/*\(.*\)"`
_lcl_first_rel=''
_lcl_tmp='xxx'
while test "$_lcl_tmp" != ''; do
  _lcl_tmp=`expr "x$_lcl_first_suffix" : "x[^/]*/*\(.*\)"`
  if test "$_lcl_first_suffix" != ''; then
     _lcl_first_suffix="$_lcl_tmp"
     _lcl_first_rel="../$_lcl_first_rel"
  fi
done
_lcl_second_suffix=`expr "x$_lcl_to" : "x$_lcl_common_prefix/*\(.*\)"`
_lcl_result_tmp="$_lcl_first_rel$_lcl_second_suffix"
  case ":$_lcl_result_tmp:" in
# change empty paths to '.'
  ::) _lcl_result_tmp='.' ;;
# strip trailing slashes
  :*[\\/]:) _lcl_result_tmp=`echo "$_lcl_result_tmp" | sed 's,[\\/]*$,,'` ;;
  :*:) ;;
esac
# squeze repeated slashes
case "$_lcl_notation" in
# if the path contains any backslashes, turn slashes into backslashes
 *\\*) _lcl_result_tmp=`echo "$_lcl_result_tmp" | sed 's,\(.\)[\\/][\\/]*,\1\\\\,g'` ;;
# if the path contains slashes, also turn backslashes into slashes
 *) _lcl_result_tmp=`echo "$_lcl_result_tmp" | sed 's,\(.\)[\\/][\\/]*,\1/,g'` ;;
esac
  eval $_lcl_result_var='$_lcl_result_tmp'
done

   # Get tags for other components in this package which this
   # component depends on

   components=''
   TAGFILES=''
   DOXYGEN_TAGFILES=''
   echo "$as_me:$LINENO: checking for Doxygen component dependencies" >&5
echo $ECHO_N "checking for Doxygen component dependencies... $ECHO_C" >&6
   for comp in ${DEPENDENT_COMPONENTS}; do
       components="${components} ${comp}"
       tagfile=${doxygen_output_top}/${comp}.tag
       DOXYGEN_TAGFILES="${DOXYGEN_TAGFILES} \"${tagfile} = ../${comp}\""
   done
   echo "$as_me:$LINENO: result: ${components}" >&5
echo "${ECHO_T}${components}" >&6



   # find the release number
   number=draco-5_11_0
   echo "$as_me:$LINENO: checking \"component release number\"" >&5
echo $ECHO_N "checking \"component release number\"... $ECHO_C" >&6
   echo "$as_me:$LINENO: result: $number" >&5
echo "${ECHO_T}$number" >&6



   # Doxygen Input



   # Doxygen Output




   # Other doxygen configuration


   # For inclusion in header files and other html


   # For makefiles for configuration:





                                           ac_config_files="$ac_config_files autodoc/Makefile:${config_dir}/Makefile.autodoc.in autodoc/doxygen_config:${config_dir}/doxygen_config.in autodoc/header.html:${header_dir}/header.html.in autodoc/footer.html:${header_dir}/footer.html.in"




                    ac_config_files="$ac_config_files Makefile:../../config/Makefile.package.in test/Makefile:../../config/Makefile.test.in"

cat >confcache <<\_ACEOF
# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs, see configure's option --config-cache.
# It is not useful on other systems.  If it contains results you don't
# want to keep, you may remove or edit it.
#
# config.status only pays attention to the cache file if you give it
# the --recheck option to rerun configure.
#
# `ac_cv_env_foo' variables (set or unset) will be overridden when
# loading this file, other *unset* `ac_cv_foo' will be assigned the
# following values.

_ACEOF

# The following way of writing the cache mishandles newlines in values,
# but we know of no workaround that is simple, portable, and efficient.
# So, don't put newlines in cache variables' values.
# Ultrix sh set writes to stderr and can't be redirected directly,
# and sets the high bit in the cache file unless we assign to the vars.
{
  (set) 2>&1 |
    case `(ac_space=' '; set | grep ac_space) 2>&1` in
    *ac_space=\ *)
      # `set' does not quote correctly, so add quotes (double-quote
      # substitution turns \\\\ into \\, and sed turns \\ into \).
      sed -n \
	"s/'/'\\\\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
      ;;
    *)
      # `set' quotes correctly as required by POSIX, so do not add quotes.
      sed -n \
	"s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1=\\2/p"
      ;;
    esac;
} |
  sed '
     t clear
     : clear
     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
     t end
     /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
     : end' >>confcache
if diff $cache_file confcache >/dev/null 2>&1; then :; else
  if test -w $cache_file; then
    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
    cat confcache >$cache_file
  else
    echo "not updating unwritable cache $cache_file"
  fi
fi
rm -f confcache

test "x$prefix" = xNONE && prefix=$ac_default_prefix
# Let make expand exec_prefix.
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

# VPATH may cause trouble with some makes, so we remove $(srcdir),
# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
# trailing colons and then remove the whole line if VPATH becomes empty
# (actually we leave an empty line to preserve line numbers).
if test "x$srcdir" = x.; then
  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
s/:*\$(srcdir):*/:/;
s/:*\${srcdir}:*/:/;
s/:*@srcdir@:*/:/;
s/^\([^=]*=[	 ]*\):*/\1/;
s/:*$//;
s/^[^=]*=[	 ]*$//;
}'
fi

DEFS=-DHAVE_CONFIG_H

ac_libobjs=
ac_ltlibobjs=
for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
  # 1. Remove the extension, and $U if already installed.
  ac_i=`echo "$ac_i" |
	 sed 's/\$U\././;s/\.o$//;s/\.obj$//'`
  # 2. Add them.
  ac_libobjs="$ac_libobjs $ac_i\$U.$ac_objext"
  ac_ltlibobjs="$ac_ltlibobjs $ac_i"'$U.lo'
done
LIBOBJS=$ac_libobjs

LTLIBOBJS=$ac_ltlibobjs



: ${CONFIG_STATUS=./config.status}
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files $CONFIG_STATUS"
{ echo "$as_me:$LINENO: creating $CONFIG_STATUS" >&5
echo "$as_me: creating $CONFIG_STATUS" >&6;}
cat >$CONFIG_STATUS <<_ACEOF
#! $SHELL
# Generated by $as_me.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false
SHELL=\${CONFIG_SHELL-$SHELL}
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi
DUALCASE=1; export DUALCASE # for MKS sh

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# Work around bugs in pre-3.0 UWIN ksh.
$as_unset ENV MAIL MAILPATH
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)$' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
  	  /^X\/\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`


# PATH needs CR, and LINENO needs CR and PATH.
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi


  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
  # Find who we are.  Look in the path if we contain no path at all
  # relative or not.
  case $0 in
    *[\\/]* ) as_myself=$0 ;;
    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done

       ;;
  esac
  # We did not find ourselves, most probably we were run as `sh COMMAND'
  # in which case we are not to be found in the path.
  if test "x$as_myself" = x; then
    as_myself=$0
  fi
  if test ! -f "$as_myself"; then
    { { echo "$as_me:$LINENO: error: cannot find myself; rerun with an absolute path" >&5
echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2;}
   { (exit 1); exit 1; }; }
  fi
  case $CONFIG_SHELL in
  '')
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for as_base in sh bash ksh sh5; do
	 case $as_dir in
	 /*)
	   if ("$as_dir/$as_base" -c '
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
	     CONFIG_SHELL=$as_dir/$as_base
	     export CONFIG_SHELL
	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
	   fi;;
	 esac
       done
done
;;
  esac

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line before each line; the second 'sed' does the real
  # work.  The second script uses 'N' to pair each line-number line
  # with the numbered line, and appends trailing '-' during
  # substitution so that $LINENO is not a special case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
  sed '=' <$as_myself |
    sed '
      N
      s,$,-,
      : loop
      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
      t loop
      s,-$,,
      s,^['$as_cr_digits']*\n,,
    ' >$as_me.lineno &&
  chmod +x $as_me.lineno ||
    { { echo "$as_me:$LINENO: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&5
echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2;}
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensible to this).
  . ./$as_me.lineno
  # Exit status is that of the last command.
  exit
}


case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='	' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac

if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  # We could just check for DJGPP; but this test a) works b) is more generic
  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
  if test -f conf$$.exe; then
    # Don't use ln at all; we don't have any links
    as_ln_s='cp -p'
  else
    as_ln_s='ln -s'
  fi
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.file

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_executable_p="test -f"

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


# IFS
# We need space, tab and new line, in precisely that order.
as_nl='
'
IFS=" 	$as_nl"

# CDPATH.
$as_unset CDPATH

exec 6>&1

# Open the log real soon, to keep \$[0] and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.  Logging --version etc. is OK.
exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
} >&5
cat >&5 <<_CSEOF

This file was extended by $as_me, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

_CSEOF
echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
echo >&5
_ACEOF

# Files that config.status was made for.
if test -n "$ac_config_files"; then
  echo "config_files=\"$ac_config_files\"" >>$CONFIG_STATUS
fi

if test -n "$ac_config_headers"; then
  echo "config_headers=\"$ac_config_headers\"" >>$CONFIG_STATUS
fi

if test -n "$ac_config_links"; then
  echo "config_links=\"$ac_config_links\"" >>$CONFIG_STATUS
fi

if test -n "$ac_config_commands"; then
  echo "config_commands=\"$ac_config_commands\"" >>$CONFIG_STATUS
fi

cat >>$CONFIG_STATUS <<\_ACEOF

ac_cs_usage="\
\`$as_me' instantiates files from templates according to the
current configuration.

Usage: $0 [OPTIONS] [FILE]...

  -h, --help       print this help, then exit
  -V, --version    print version number, then exit
  -q, --quiet      do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
  --file=FILE[:TEMPLATE]
		   instantiate the configuration file FILE
  --header=FILE[:TEMPLATE]
		   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Report bugs to <bug-autoconf@gnu.org>."
_ACEOF

cat >>$CONFIG_STATUS <<_ACEOF
ac_cs_version="\\
config.status
configured by $0, generated by GNU Autoconf 2.59,
  with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"

Copyright (C) 2003 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."
srcdir=$srcdir
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF
# If no file are specified by the user, then we need to provide default
# value.  By we need to know if files were specified by the user.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=*)
    ac_option=`expr "x$1" : 'x\([^=]*\)='`
    ac_optarg=`expr "x$1" : 'x[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  -*)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  *) # This is not an option, so the user has probably given explicit
     # arguments.
     ac_option=$1
     ac_need_defaults=false;;
  esac

  case $ac_option in
  # Handling of the options.
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --vers* | -V )
    echo "$ac_cs_version"; exit 0 ;;
  --he | --h)
    # Conflict between --help and --header
    { { echo "$as_me:$LINENO: error: ambiguous option: $1
Try \`$0 --help' for more information." >&5
echo "$as_me: error: ambiguous option: $1
Try \`$0 --help' for more information." >&2;}
   { (exit 1); exit 1; }; };;
  --help | --hel | -h )
    echo "$ac_cs_usage"; exit 0 ;;
  --debug | --d* | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    CONFIG_FILES="$CONFIG_FILES $ac_optarg"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    CONFIG_HEADERS="$CONFIG_HEADERS $ac_optarg"
    ac_need_defaults=false;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) { { echo "$as_me:$LINENO: error: unrecognized option: $1
Try \`$0 --help' for more information." >&5
echo "$as_me: error: unrecognized option: $1
Try \`$0 --help' for more information." >&2;}
   { (exit 1); exit 1; }; } ;;

  *) ac_config_targets="$ac_config_targets $1" ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF
if \$ac_cs_recheck; then
  echo "running $SHELL $0 " $ac_configure_args \$ac_configure_extra_args " --no-create --no-recursion" >&6
  exec $SHELL $0 $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
fi

_ACEOF





cat >>$CONFIG_STATUS <<\_ACEOF
for ac_config_target in $ac_config_targets
do
  case "$ac_config_target" in
  # Handling of arguments.
  "autodoc/Makefile" ) CONFIG_FILES="$CONFIG_FILES autodoc/Makefile:${config_dir}/Makefile.autodoc.in" ;;
  "autodoc/doxygen_config" ) CONFIG_FILES="$CONFIG_FILES autodoc/doxygen_config:${config_dir}/doxygen_config.in" ;;
  "autodoc/header.html" ) CONFIG_FILES="$CONFIG_FILES autodoc/header.html:${header_dir}/header.html.in" ;;
  "autodoc/footer.html" ) CONFIG_FILES="$CONFIG_FILES autodoc/footer.html:${header_dir}/footer.html.in" ;;
  "Makefile" ) CONFIG_FILES="$CONFIG_FILES Makefile:../../config/Makefile.package.in" ;;
  "test/Makefile" ) CONFIG_FILES="$CONFIG_FILES test/Makefile:../../config/Makefile.test.in" ;;
  "cdi_analytic/config.h" ) CONFIG_HEADERS="$CONFIG_HEADERS cdi_analytic/config.h:config.h.in" ;;
  *) { { echo "$as_me:$LINENO: error: invalid argument: $ac_config_target" >&5
echo "$as_me: error: invalid argument: $ac_config_target" >&2;}
   { (exit 1); exit 1; }; };;
  esac
done

# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason to put it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Create a temporary directory, and hook for its removal unless debugging.
$debug ||
{
  trap 'exit_status=$?; rm -rf $tmp && exit $exit_status' 0
  trap '{ (exit 1); exit 1; }' 1 2 13 15
}

# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
  test -n "$tmp" && test -d "$tmp"
}  ||
{
  tmp=./confstat$$-$RANDOM
  (umask 077 && mkdir $tmp)
} ||
{
   echo "$me: cannot create a temporary directory in ." >&2
   { (exit 1); exit 1; }
}

_ACEOF

cat >>$CONFIG_STATUS <<_ACEOF

#
# CONFIG_FILES section.
#

# No need to generate the scripts if there are no CONFIG_FILES.
# This happens for instance when ./config.status config.h
if test -n "\$CONFIG_FILES"; then
  # Protect against being on the right side of a sed subst in config.status.
  sed 's/,@/@@/; s/@,/@@/; s/,;t t\$/@;t t/; /@;t t\$/s/[\\\\&,]/\\\\&/g;
   s/@@/,@/; s/@@/@,/; s/@;t t\$/,;t t/' >\$tmp/subs.sed <<\\CEOF
s,@SHELL@,$SHELL,;t t
s,@PATH_SEPARATOR@,$PATH_SEPARATOR,;t t
s,@PACKAGE_NAME@,$PACKAGE_NAME,;t t
s,@PACKAGE_TARNAME@,$PACKAGE_TARNAME,;t t
s,@PACKAGE_VERSION@,$PACKAGE_VERSION,;t t
s,@PACKAGE_STRING@,$PACKAGE_STRING,;t t
s,@PACKAGE_BUGREPORT@,$PACKAGE_BUGREPORT,;t t
s,@exec_prefix@,$exec_prefix,;t t
s,@prefix@,$prefix,;t t
s,@program_transform_name@,$program_transform_name,;t t
s,@bindir@,$bindir,;t t
s,@sbindir@,$sbindir,;t t
s,@libexecdir@,$libexecdir,;t t
s,@datadir@,$datadir,;t t
s,@sysconfdir@,$sysconfdir,;t t
s,@sharedstatedir@,$sharedstatedir,;t t
s,@localstatedir@,$localstatedir,;t t
s,@libdir@,$libdir,;t t
s,@includedir@,$includedir,;t t
s,@oldincludedir@,$oldincludedir,;t t
s,@infodir@,$infodir,;t t
s,@mandir@,$mandir,;t t
s,@build_alias@,$build_alias,;t t
s,@host_alias@,$host_alias,;t t
s,@target_alias@,$target_alias,;t t
s,@DEFS@,$DEFS,;t t
s,@ECHO_C@,$ECHO_C,;t t
s,@ECHO_N@,$ECHO_N,;t t
s,@ECHO_T@,$ECHO_T,;t t
s,@LIBS@,$LIBS,;t t
s,@latex_yes_no@,$latex_yes_no,;t t
s,@doxygen_output_top@,$doxygen_output_top,;t t
s,@build@,$build,;t t
s,@build_cpu@,$build_cpu,;t t
s,@build_vendor@,$build_vendor,;t t
s,@build_os@,$build_os,;t t
s,@host@,$host,;t t
s,@host_cpu@,$host_cpu,;t t
s,@host_vendor@,$host_vendor,;t t
s,@host_os@,$host_os,;t t
s,@PYTHON_PATH@,$PYTHON_PATH,;t t
s,@PERL_PATH@,$PERL_PATH,;t t
s,@CVS_PATH@,$CVS_PATH,;t t
s,@GHOSTVIEW@,$GHOSTVIEW,;t t
s,@LATEX@,$LATEX,;t t
s,@LATEXFLAGS@,$LATEXFLAGS,;t t
s,@BIBTEX@,$BIBTEX,;t t
s,@BIBTEXFLAGS@,$BIBTEXFLAGS,;t t
s,@XDVI@,$XDVI,;t t
s,@XDVIFLAGS@,$XDVIFLAGS,;t t
s,@PS2PDF@,$PS2PDF,;t t
s,@DOTCMD@,$DOTCMD,;t t
s,@DVIPS@,$DVIPS,;t t
s,@DVIPSFLAGS@,$DVIPSFLAGS,;t t
s,@LP@,$LP,;t t
s,@LPFLAGS@,$LPFLAGS,;t t
s,@DOXYGEN_PATH@,$DOXYGEN_PATH,;t t
s,@F90@,$F90,;t t
s,@F90FREE@,$F90FREE,;t t
s,@F90FIXED@,$F90FIXED,;t t
s,@F90FLAGS@,$F90FLAGS,;t t
s,@MODFLAG@,$MODFLAG,;t t
s,@CXX@,$CXX,;t t
s,@CC@,$CC,;t t
s,@GCC_BIN@,$GCC_BIN,;t t
s,@RANLIB@,$RANLIB,;t t
s,@ac_ct_RANLIB@,$ac_ct_RANLIB,;t t
s,@CFLAGS@,$CFLAGS,;t t
s,@CXXFLAGS@,$CXXFLAGS,;t t
s,@LD@,$LD,;t t
s,@LDFLAGS@,$LDFLAGS,;t t
s,@AR@,$AR,;t t
s,@ARFLAGS@,$ARFLAGS,;t t
s,@CPPFLAGS@,$CPPFLAGS,;t t
s,@DEPENDENCY_RULES@,$DEPENDENCY_RULES,;t t
s,@STRICTFLAG@,$STRICTFLAG,;t t
s,@PARALLEL_FLAG@,$PARALLEL_FLAG,;t t
s,@RPATH@,$RPATH,;t t
s,@LIB_PREFIX@,$LIB_PREFIX,;t t
s,@INSTALL@,$INSTALL,;t t
s,@INSTALL_DATA@,$INSTALL_DATA,;t t
s,@installfiles@,$installfiles,;t t
s,@install_executable@,$install_executable,;t t
s,@install_lib@,$install_lib,;t t
s,@install_headers@,$install_headers,;t t
s,@installdirs@,$installdirs,;t t
s,@alltarget@,$alltarget,;t t
s,@libsuffix@,$libsuffix,;t t
s,@dirstoclean@,$dirstoclean,;t t
s,@package@,$package,;t t
s,@DRACO_DEPENDS@,$DRACO_DEPENDS,;t t
s,@DRACO_LIBS@,$DRACO_LIBS,;t t
s,@VENDOR_DEPENDS@,$VENDOR_DEPENDS,;t t
s,@VENDOR_INC@,$VENDOR_INC,;t t
s,@VENDOR_LIBS@,$VENDOR_LIBS,;t t
s,@ARLIBS@,$ARLIBS,;t t
s,@PKG_DEPENDS@,$PKG_DEPENDS,;t t
s,@PKG_LIBS@,$PKG_LIBS,;t t
s,@DRACO_TEST_DEPENDS@,$DRACO_TEST_DEPENDS,;t t
s,@DRACO_TEST_LIBS@,$DRACO_TEST_LIBS,;t t
s,@VENDOR_TEST_DEPENDS@,$VENDOR_TEST_DEPENDS,;t t
s,@VENDOR_TEST_LIBS@,$VENDOR_TEST_LIBS,;t t
s,@ARTESTLIBS@,$ARTESTLIBS,;t t
s,@test_alltarget@,$test_alltarget,;t t
s,@test_flags@,$test_flags,;t t
s,@test_scalar@,$test_scalar,;t t
s,@test_nprocs@,$test_nprocs,;t t
s,@test_output_files@,$test_output_files,;t t
s,@configure_command@,$configure_command,;t t
s,@package_top_srcdir@,$package_top_srcdir,;t t
s,@number@,$number,;t t
s,@doxygen_input@,$doxygen_input,;t t
s,@doxygen_examples@,$doxygen_examples,;t t
s,@doxygen_html_output@,$doxygen_html_output,;t t
s,@doxygen_latex_output@,$doxygen_latex_output,;t t
s,@DOXYGEN_TAGFILES@,$DOXYGEN_TAGFILES,;t t
s,@rel_package_html@,$rel_package_html,;t t
s,@header_dir@,$header_dir,;t t
s,@autodoc_dir@,$autodoc_dir,;t t
s,@LIBOBJS@,$LIBOBJS,;t t
s,@LTLIBOBJS@,$LTLIBOBJS,;t t
CEOF

_ACEOF

  cat >>$CONFIG_STATUS <<\_ACEOF
  # Split the substitutions into bite-sized pieces for seds with
  # small command number limits, like on Digital OSF/1 and HP-UX.
  ac_max_sed_lines=48
  ac_sed_frag=1 # Number of current file.
  ac_beg=1 # First line for current file.
  ac_end=$ac_max_sed_lines # Line after last line for current file.
  ac_more_lines=:
  ac_sed_cmds=
  while $ac_more_lines; do
    if test $ac_beg -gt 1; then
      sed "1,${ac_beg}d; ${ac_end}q" $tmp/subs.sed >$tmp/subs.frag
    else
      sed "${ac_end}q" $tmp/subs.sed >$tmp/subs.frag
    fi
    if test ! -s $tmp/subs.frag; then
      ac_more_lines=false
    else
      # The purpose of the label and of the branching condition is to
      # speed up the sed processing (if there are no `@' at all, there
      # is no need to browse any of the substitutions).
      # These are the two extra sed commands mentioned above.
      (echo ':t
  /@[a-zA-Z_][a-zA-Z_0-9]*@/!b' && cat $tmp/subs.frag) >$tmp/subs-$ac_sed_frag.sed
      if test -z "$ac_sed_cmds"; then
	ac_sed_cmds="sed -f $tmp/subs-$ac_sed_frag.sed"
      else
	ac_sed_cmds="$ac_sed_cmds | sed -f $tmp/subs-$ac_sed_frag.sed"
      fi
      ac_sed_frag=`expr $ac_sed_frag + 1`
      ac_beg=$ac_end
      ac_end=`expr $ac_end + $ac_max_sed_lines`
    fi
  done
  if test -z "$ac_sed_cmds"; then
    ac_sed_cmds=cat
  fi
fi # test -n "$CONFIG_FILES"

_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF
for ac_file in : $CONFIG_FILES; do test "x$ac_file" = x: && continue
  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
  case $ac_file in
  - | *:- | *:-:* ) # input from stdin
	cat >$tmp/stdin
	ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
  *:* ) ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
  * )   ac_file_in=$ac_file.in ;;
  esac

  # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
  { if $as_mkdir_p; then
    mkdir -p "$ac_dir"
  else
    as_dir="$ac_dir"
    as_dirs=
    while test ! -d "$as_dir"; do
      as_dirs="$as_dir $as_dirs"
      as_dir=`(dirname "$as_dir") 2>/dev/null ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
    done
    test ! -n "$as_dirs" || mkdir $as_dirs
  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
   { (exit 1); exit 1; }; }; }

  ac_builddir=.

if test "$ac_dir" != .; then
  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
  # A "../" for each directory in $ac_dir_suffix.
  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
else
  ac_dir_suffix= ac_top_builddir=
fi

case $srcdir in
  .)  # No --srcdir option.  We are building in place.
    ac_srcdir=.
    if test -z "$ac_top_builddir"; then
       ac_top_srcdir=.
    else
       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
    fi ;;
  [\\/]* | ?:[\\/]* )  # Absolute path.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir ;;
  *) # Relative path.
    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_builddir$srcdir ;;
esac

# Do not use `cd foo && pwd` to compute absolute paths, because
# the directories may not exist.
case `pwd` in
.) ac_abs_builddir="$ac_dir";;
*)
  case "$ac_dir" in
  .) ac_abs_builddir=`pwd`;;
  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
  *) ac_abs_builddir=`pwd`/"$ac_dir";;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_builddir=${ac_top_builddir}.;;
*)
  case ${ac_top_builddir}. in
  .) ac_abs_top_builddir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_srcdir=$ac_srcdir;;
*)
  case $ac_srcdir in
  .) ac_abs_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_srcdir=$ac_top_srcdir;;
*)
  case $ac_top_srcdir in
  .) ac_abs_top_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
  esac;;
esac



  if test x"$ac_file" != x-; then
    { echo "$as_me:$LINENO: creating $ac_file" >&5
echo "$as_me: creating $ac_file" >&6;}
    rm -f "$ac_file"
  fi
  # Let's still pretend it is `configure' which instantiates (i.e., don't
  # use $as_me), people would be surprised to read:
  #    /* config.h.  Generated by config.status.  */
  if test x"$ac_file" = x-; then
    configure_input=
  else
    configure_input="$ac_file.  "
  fi
  configure_input=$configure_input"Generated from `echo $ac_file_in |
				     sed 's,.*/,,'` by configure."

  # First look for the input files in the build tree, otherwise in the
  # src tree.
  ac_file_inputs=`IFS=:
    for f in $ac_file_in; do
      case $f in
      -) echo $tmp/stdin ;;
      [\\/$]*)
	 # Absolute (can't be DOS-style, as IFS=:)
	 test -f "$f" || { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
echo "$as_me: error: cannot find input file: $f" >&2;}
   { (exit 1); exit 1; }; }
	 echo "$f";;
      *) # Relative
	 if test -f "$f"; then
	   # Build tree
	   echo "$f"
	 elif test -f "$srcdir/$f"; then
	   # Source tree
	   echo "$srcdir/$f"
	 else
	   # /dev/null tree
	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
echo "$as_me: error: cannot find input file: $f" >&2;}
   { (exit 1); exit 1; }; }
	 fi;;
      esac
    done` || { (exit 1); exit 1; }
_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF
  sed "$ac_vpsub
$extrasub
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF
:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s,@configure_input@,$configure_input,;t t
s,@srcdir@,$ac_srcdir,;t t
s,@abs_srcdir@,$ac_abs_srcdir,;t t
s,@top_srcdir@,$ac_top_srcdir,;t t
s,@abs_top_srcdir@,$ac_abs_top_srcdir,;t t
s,@builddir@,$ac_builddir,;t t
s,@abs_builddir@,$ac_abs_builddir,;t t
s,@top_builddir@,$ac_top_builddir,;t t
s,@abs_top_builddir@,$ac_abs_top_builddir,;t t
" $ac_file_inputs | (eval "$ac_sed_cmds") >$tmp/out
  rm -f $tmp/stdin
  if test x"$ac_file" != x-; then
    mv $tmp/out $ac_file
  else
    cat $tmp/out
    rm -f $tmp/out
  fi

done
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF

#
# CONFIG_HEADER section.
#

# These sed commands are passed to sed as "A NAME B NAME C VALUE D", where
# NAME is the cpp macro being defined and VALUE is the value it is being given.
#
# ac_d sets the value in "#define NAME VALUE" lines.
ac_dA='s,^\([	 ]*\)#\([	 ]*define[	 ][	 ]*\)'
ac_dB='[	 ].*$,\1#\2'
ac_dC=' '
ac_dD=',;t'
# ac_u turns "#undef NAME" without trailing blanks into "#define NAME VALUE".
ac_uA='s,^\([	 ]*\)#\([	 ]*\)undef\([	 ][	 ]*\)'
ac_uB='$,\1#\2define\3'
ac_uC=' '
ac_uD=',;t'

for ac_file in : $CONFIG_HEADERS; do test "x$ac_file" = x: && continue
  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
  case $ac_file in
  - | *:- | *:-:* ) # input from stdin
	cat >$tmp/stdin
	ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
  *:* ) ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
  * )   ac_file_in=$ac_file.in ;;
  esac

  test x"$ac_file" != x- && { echo "$as_me:$LINENO: creating $ac_file" >&5
echo "$as_me: creating $ac_file" >&6;}

  # First look for the input files in the build tree, otherwise in the
  # src tree.
  ac_file_inputs=`IFS=:
    for f in $ac_file_in; do
      case $f in
      -) echo $tmp/stdin ;;
      [\\/$]*)
	 # Absolute (can't be DOS-style, as IFS=:)
	 test -f "$f" || { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
echo "$as_me: error: cannot find input file: $f" >&2;}
   { (exit 1); exit 1; }; }
	 # Do quote $f, to prevent DOS paths from being IFS'd.
	 echo "$f";;
      *) # Relative
	 if test -f "$f"; then
	   # Build tree
	   echo "$f"
	 elif test -f "$srcdir/$f"; then
	   # Source tree
	   echo "$srcdir/$f"
	 else
	   # /dev/null tree
	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
echo "$as_me: error: cannot find input file: $f" >&2;}
   { (exit 1); exit 1; }; }
	 fi;;
      esac
    done` || { (exit 1); exit 1; }
  # Remove the trailing spaces.
  sed 's/[	 ]*$//' $ac_file_inputs >$tmp/in

_ACEOF

# Transform confdefs.h into two sed scripts, `conftest.defines' and
# `conftest.undefs', that substitutes the proper values into
# config.h.in to produce config.h.  The first handles `#define'
# templates, and the second `#undef' templates.
# And first: Protect against being on the right side of a sed subst in
# config.status.  Protect against being in an unquoted here document
# in config.status.
rm -f conftest.defines conftest.undefs
# Using a here document instead of a string reduces the quoting nightmare.
# Putting comments in sed scripts is not portable.
#
# `end' is used to avoid that the second main sed command (meant for
# 0-ary CPP macros) applies to n-ary macro definitions.
# See the Autoconf documentation for `clear'.
cat >confdef2sed.sed <<\_ACEOF
s/[\\&,]/\\&/g
s,[\\$`],\\&,g
t clear
: clear
s,^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 (][^	 (]*\)\(([^)]*)\)[	 ]*\(.*\)$,${ac_dA}\1${ac_dB}\1\2${ac_dC}\3${ac_dD},gp
t end
s,^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 ][^	 ]*\)[	 ]*\(.*\)$,${ac_dA}\1${ac_dB}\1${ac_dC}\2${ac_dD},gp
: end
_ACEOF
# If some macros were called several times there might be several times
# the same #defines, which is useless.  Nevertheless, we may not want to
# sort them, since we want the *last* AC-DEFINE to be honored.
uniq confdefs.h | sed -n -f confdef2sed.sed >conftest.defines
sed 's/ac_d/ac_u/g' conftest.defines >conftest.undefs
rm -f confdef2sed.sed

# This sed command replaces #undef with comments.  This is necessary, for
# example, in the case of _POSIX_SOURCE, which is predefined and required
# on some systems where configure will not decide to define it.
cat >>conftest.undefs <<\_ACEOF
s,^[	 ]*#[	 ]*undef[	 ][	 ]*[a-zA-Z_][a-zA-Z_0-9]*,/* & */,
_ACEOF

# Break up conftest.defines because some shells have a limit on the size
# of here documents, and old seds have small limits too (100 cmds).
echo '  # Handle all the #define templates only if necessary.' >>$CONFIG_STATUS
echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/dev/null; then' >>$CONFIG_STATUS
echo '  # If there are no defines, we may have an empty if/fi' >>$CONFIG_STATUS
echo '  :' >>$CONFIG_STATUS
rm -f conftest.tail
while grep . conftest.defines >/dev/null
do
  # Write a limited-size here document to $tmp/defines.sed.
  echo '  cat >$tmp/defines.sed <<CEOF' >>$CONFIG_STATUS
  # Speed up: don't consider the non `#define' lines.
  echo '/^[	 ]*#[	 ]*define/!b' >>$CONFIG_STATUS
  # Work around the forget-to-reset-the-flag bug.
  echo 't clr' >>$CONFIG_STATUS
  echo ': clr' >>$CONFIG_STATUS
  sed ${ac_max_here_lines}q conftest.defines >>$CONFIG_STATUS
  echo 'CEOF
  sed -f $tmp/defines.sed $tmp/in >$tmp/out
  rm -f $tmp/in
  mv $tmp/out $tmp/in
' >>$CONFIG_STATUS
  sed 1,${ac_max_here_lines}d conftest.defines >conftest.tail
  rm -f conftest.defines
  mv conftest.tail conftest.defines
done
rm -f conftest.defines
echo '  fi # grep' >>$CONFIG_STATUS
echo >>$CONFIG_STATUS

# Break up conftest.undefs because some shells have a limit on the size
# of here documents, and old seds have small limits too (100 cmds).
echo '  # Handle all the #undef templates' >>$CONFIG_STATUS
rm -f conftest.tail
while grep . conftest.undefs >/dev/null
do
  # Write a limited-size here document to $tmp/undefs.sed.
  echo '  cat >$tmp/undefs.sed <<CEOF' >>$CONFIG_STATUS
  # Speed up: don't consider the non `#undef'
  echo '/^[	 ]*#[	 ]*undef/!b' >>$CONFIG_STATUS
  # Work around the forget-to-reset-the-flag bug.
  echo 't clr' >>$CONFIG_STATUS
  echo ': clr' >>$CONFIG_STATUS
  sed ${ac_max_here_lines}q conftest.undefs >>$CONFIG_STATUS
  echo 'CEOF
  sed -f $tmp/undefs.sed $tmp/in >$tmp/out
  rm -f $tmp/in
  mv $tmp/out $tmp/in
' >>$CONFIG_STATUS
  sed 1,${ac_max_here_lines}d conftest.undefs >conftest.tail
  rm -f conftest.undefs
  mv conftest.tail conftest.undefs
done
rm -f conftest.undefs

cat >>$CONFIG_STATUS <<\_ACEOF
  # Let's still pretend it is `configure' which instantiates (i.e., don't
  # use $as_me), people would be surprised to read:
  #    /* config.h.  Generated by config.status.  */
  if test x"$ac_file" = x-; then
    echo "/* Generated by configure.  */" >$tmp/config.h
  else
    echo "/* $ac_file.  Generated by configure.  */" >$tmp/config.h
  fi
  cat $tmp/in >>$tmp/config.h
  rm -f $tmp/in
  if test x"$ac_file" != x-; then
    if diff $ac_file $tmp/config.h >/dev/null 2>&1; then
      { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
echo "$as_me: $ac_file is unchanged" >&6;}
    else
      ac_dir=`(dirname "$ac_file") 2>/dev/null ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
      { if $as_mkdir_p; then
    mkdir -p "$ac_dir"
  else
    as_dir="$ac_dir"
    as_dirs=
    while test ! -d "$as_dir"; do
      as_dirs="$as_dir $as_dirs"
      as_dir=`(dirname "$as_dir") 2>/dev/null ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
    done
    test ! -n "$as_dirs" || mkdir $as_dirs
  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
   { (exit 1); exit 1; }; }; }

      rm -f $ac_file
      mv $tmp/config.h $ac_file
    fi
  else
    cat $tmp/config.h
    rm -f $tmp/config.h
  fi
done
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF

{ (exit 0); exit 0; }
_ACEOF
chmod +x $CONFIG_STATUS
ac_clean_files=$ac_clean_files_save


# configure is writing to config.log, and then calls config.status.
# config.status does its own redirection, appending to config.log.
# Unfortunately, on DOS this fails, as config.log is still kept open
# by configure, so config.status won't be able to write to it; its
# output is simply discarded.  So we exec the FD to /dev/null,
# effectively closing config.log, so it can be properly (re)opened and
# appended to by config.status.  When coming back to configure, we
# need to make the FD available again.
if test "$no_create" != yes; then
  ac_cs_success=:
  ac_config_status_args=
  test "$silent" = yes &&
    ac_config_status_args="$ac_config_status_args --quiet"
  exec 5>/dev/null
  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
  exec 5>>config.log
  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
  # would make configure fail if this is the last instruction.
  $ac_cs_success || { (exit 1); exit 1; }
fi


