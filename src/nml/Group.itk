# Group.tcl
# Geoffrey Furnish
# 18 April 1994

#itcl_class NML_Group 

class nml::Group {
    inherit itk::Toplevel

    constructor {args} {
	set hull $itk_component(hull)

	itk_component add msgbox {
	    message $hull.msg \
		-font -Adobe-helvetica-medium-r-normal--*-180* -aspect 200 \
		-width 500 -borderwidth 1 \
		-text \
		"This interface allows you to interactively \
edit the variables in a namelist group.  Select \
one of the command buttons below to edit the \
variables corresponding to that block name.  Select \
OK to run with the new values, or CANCEL to leave them \
unchanged."
	} {}
	pack $hull.msg -side top -fill x

	frame $hull.blocks

	eval itk_initialize $args

	pack $hull.blocks -fill x

	frame $hull.commands
	button $hull.commands.ok -text DONE \
	    -command "destroy $hull"
	pack $hull.commands.ok -fill x
	pack $hull.commands -fill x

#	pack append $this.commands \
	    [button $this.commands.ok -text DONE \
		 -command "$this kill" ] \
	    {left expand fill}

#	pack append $this $this.msg { top expand fillx } \
	    $this.blocks { expand fillx } \
	    $this.commands { expand fillx }

    }

#    method configure {config} {}

    method popup_block block {
#	puts "in popup_ block, "
#	puts "name=$name"
#	puts "block=$block"
#	puts "new widget name = .blk_$block"
#	puts "exist=[winfo exist .blk_$block]"
	if {![winfo exist .blk_$block]} {
#	    puts "safe to create widget .blk_$block"
	    ::nml::Block .blk_$block -name $block -group $name
#	    Block .blk_$block -name $block -group $name
	}
    }

#    method kill {} {
	#puts "killing $this"
#	::rename $this-win- {}
#	destroy [winfo parent $this]
#    }

    public variable name

    itk_option define -name name Name fooey {
	puts "name has been set to $itk_option(-name)"

	set hull $itk_component(hull)
	set name $itk_option(-name)

    # Should do something to delete any existing block buttons.

	set blocks [::nml_get_blocks $name]
	foreach block $blocks {
	    button $hull.blocks.$block -text "Block $block" \
		-command "$this popup_block $block"
	    pack $hull.blocks.$block -side top -fill x
	}

    }
}
