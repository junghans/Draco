# Block.itk
# Geoffrey Furnish
# 19 April 1994

class nml::Block {
    inherit itk::Toplevel

    private variable hull
    private variable oldthis

    private variable name
    private variable group

#    private variable itmdata

    private variable maxcols
    private variable pages
    private variable curpage

    constructor {args} {
	set hull $itk_component(hull)
	set oldthis [info namespace tail $this]

        set This "[string range $oldthis 1 end]_items"
        global ::$This

	eval itk_initialize $args

	message $hull.msg \
	    -font -Adobe-helvetica-medium-r-normal--*-180* -aspect 200 \
	    -width 500 -borderwidth 1 \
	    -text "Namelist block $name"
	pack $hull.msg

	get_items

#	puts "get_items set the following: [array names $This]"

# Typically want 4 or so.

	set max_cols 2

	set pages 1

	foreach var [set ${This}(items)] {
#	    puts "var = $var"
	    if { $var == "PageBreak" } {
		incr pages
	    }
	}

#	puts "We need $pages pages for this block."

# Setup the page selection buttons.

	set curpage 1
	global ${oldthis}curpage
	set ${oldthis}curpage 1

	frame $hull.pageframe
	label $hull.pageframe.l1 -text "Available pages: "
	pack $hull.pageframe.l1 -in $hull.pageframe -side left \
	    -padx 2m -pady 2m -fill x
	for {set i 1} {$i <= $pages} {incr i} {
	    button $hull.pageframe.page$i -text "$i" \
		-command "$this showpage $i"
	    pack $hull.pageframe.page$i -in $hull.pageframe \
		-side left -ipadx 2m -ipady 1m -pady 2m
	}
	label $hull.pageframe.l2 -textvariable ${oldthis}curpage
	pack $hull.pageframe.l2 -in $hull.pageframe -side right \
	    -padx 2m -pady 2m
	label $hull.pageframe.l3 -text "Current page:"
	pack $hull.pageframe.l3 -in $hull.pageframe -side right \
	    -padx 2m -pady 2m

# Now create frame widgets for each page.
#puts "ready to create frames."

	for {set i 1} {$i <= $pages} {incr i} {
#	    puts "making fram $i"
	    frame $hull.page$i -borderwidth 5 -relief groove
	    frame $hull.page$i.tab
	    blt_table $hull.page$i.tab
#	    pack $this.page$i.tab -in $this.page$i
	    pack $hull.page$i.tab

	    set pagedescrip [set ${This}(pagedescrip$i)]
#	    set pagedescrip $itmdata(pagedescrip$i)
	    if {$pagedescrip != ""} {
		label $hull.page$i.descrip -text "$pagedescrip"
#		pack $this.page$i.descrip -in $this.page$i -side top \
		    -before $this.page$i.tab
		pack $hull.page$i.descrip -side top -before $hull.page$i.tab
	    }
	}
#	puts "Done making frames."

	set pg 1
	set row 1
	set col 1

	foreach var [set ${This}(items)] {
#	foreach var $itmdata(items)

#	    puts "working on var=$var"
	    set vname [string tolower $var]

	    if {$vname == "pagebreak"} {   # Time to advance to a new page?

		if {$col > 1} {	# If last row not finished, finish it.
		    set col 1
		    set row 1
		}
		incr pg
#		puts "Now working on page $pg"
		continue
	    }

	# Don't really know what to do with these just now.  Need to
	# think about it a lot more.  But for now, we'll just perform
	# grouping by having these cause the next item seen to start a
	# new line in the table.  See about making genuine boxes
	# sometime later.

	    if { $vname == "boxstart" || $vname == "boxend" } {

		if {$col > 1} {
		    set col 1
		    incr row
		}
		continue
	    }

	    set value [set ${This}(${vname}_value)]
#	    set value $itmdata(${vname}_value)
#	    puts "value=$value"
	    set widget [set ${This}(${vname}_widget)]
#	    set widget $itmdata(${vname}_widget)
#	    puts "widget=$widget"

	    set binding none
	    if {[info exists ${This}(${vname}_bind)]} {
		puts "need to set a callback binding for $var"
		set binding [set ${This}(${vname}_bind)]
#		puts "binding is $binding"
	    }

#	    $widget $hull.page$pg.tab.$vname -name $var \
		-variable itmdata(${vname}_value) \
		-choices "$itmdata(${vname}_choices)" \
		-binding $binding \
		-bindvar itmdata(${vname}_bindx)
#	    puts " tieing widget to itmdata(${name}_${vname}_value)"
	    ::nml::$widget $hull.page$pg.tab.$vname \
		-name $var \
		-textvar ${This}(${vname}_value) \
		-choices "[set ${This}(${vname}_choices)]" \
		-binding $binding \
		-bindvar ${This}(${vname}_bindx)

#	    puts "item created, value should be: [set ${This}(${vname}_value)]"

	    blt_table $hull.page$pg.tab $hull.page$pg.tab.$vname \
		"$row-1,$col-1" -anchor c -ipadx 3m -fill x

# Lots of intervening code which needs to be filled in.

	# Advance column pointer and perform bounds adjustment.

	    incr col
	    if {$col > $max_cols} {
		set col 1
		incr row
	    }
#	    puts "(r,c) = ($row,$col)"
	}

######################
# Okay, done setting up the pages, now finish up the widget.

	frame $hull.commands
	button $hull.commands.ok -text DONE -command "destroy $hull"
	pack $hull.commands.ok -side left -expand 1 -fill x

	pack $hull.msg -side top -fill x
	pack $hull.page$curpage -side top -padx 2m -pady 2m
	pack $hull.commands -side bottom -expand 1 -fill x

	if {$pages > 1} {
	    pack $hull.pageframe -side top -after $hull.msg
	}
    }

    method test {} @nml_test

    method get_items {} @nml:Block:get_items

    itk_option define -name name Name fooey {
#	puts "name is $itk_option(-name)"
	set name $itk_option(-name)
    }

    itk_option define -group group Group booey {
#	puts "group is $itk_option(-group)"
	set group $itk_option(-group)
    }

    method showpage {n} {
    # Switch the currently displayed page frame.
	pack forget $hull.page$curpage

	set curpage $n

	pack $hull.page$curpage -in $hull -after $hull.pageframe \
	    -padx 2m -pady 2m -ipadx 2m -ipady 2m

    # Now update the indicator.
	global ${oldthis}curpage
	set ${oldthis}curpage $n
    }
}

