//----------------------------------*-C++-*----------------------------------//
/*! 
 * \file   meshReaders/Release.hh
 * \author B.T. Adams
 * \date   Fri Aug 27 10:33:26 1999
 * \brief  Header file for meshReaders library release function.
 */
//---------------------------------------------------------------------------//
// $Id$
//---------------------------------------------------------------------------//

#ifndef __meshReaders_Release_hh__
#define __meshReaders_Release_hh__

//===========================================================================//
/*!
 * \page rtt_meshreaders_overview Overview of the Draco Mesh Reader Package
 *
 * \version 1_2_0
 *
 * \author John McGhee, Todd Adams
 *
 * <h3> Introduction </h3>
 *
 * The classes contained in the rtt_meshReaders name space are designed
 * to provide a capability to read a variety for mesh file formats.
 * Access to the various mesh formats is provided via a 
 * rtt_meshReaders::Mesh_Reader base class
 * from which all the specific format readers inherit. Addition of 
 * readers for new formats is thereby simplified. The base class 
 * provides a variety of methods which can be used to discover
 * details of the computational mesh such as node coordinates,
 * element connectivity, mesh regions, etc. 
 * The rtt_meshReaders::Element_Definition class provides descriptive
 * information on the mesh elements which are used to consruct a mesh.
 *
 *<h3> Supported Mesh Formats </h3>
 * The following formats are supported in the initial release:
 * <dl>
 *   <dt> RTT Format
 *   <dd> A format locally developed by the RTT. Supported by the
 *        rtt_meshReaders::RTT_Format derived class. Originally
 *        designed specifically to support radiation transport problem
 *        definitions, this is a full featured format capable of describing
 *        almost any mesh structured or unstructured. An ASCII text file.
 *        Currently RTT files can be produced by both the 
 *        <a href="http://www.icemcfd.com/"> ICEM </a> and 
 *        <a href="http://ees.lanl.gov/EES5/x3d/" > X3D </a> 
 *        mesh generation packages.
 *   <dt> CIC-19 Hex Format
 *   <dd> A format locally developed by the RTT. Supported by
 *        the rtt_meshReaders::Hex_Mesh_Reader derived class. Originally designed
 *        as a simple test file format for initial debug and development
 *        efforts. ASCII text file. Generated by a small locally developed
 *        driver. Only
 *        generates hex, quad, and line logically rectangular meshes.
 * </dl>
 *
 * <h3> Future Plans  </h3>
 * The following formats are under consideration for possible
 * support in the future:
 *
 * <dl>
 *    <dt> CGNS Format
 *    <dd> <a href="http://www.cgns.org/" > CGNS </a> is an emerging
 *         industry standard for the exchange of computational physics data.
 *         It is supported by an industry consortium which includes
 *         Boeing, NASA, and Rolls-Royce, and is being submitted for
 *         certification as an ISO standard.
 *    <dt> GMV Format
 *    <dd>  <a href="http://www-xdiv.lanl.gov/XCM/gmv/" > GMV </a> is
 *         a free mesh visualization tool developed at Los Alamos
 *         National Laboratory. Many LANL codes provide output links
 *         in the GMV file format
 *    <dt> Ensight Format
 *    <dd> <a href="http://www.ceintl.com/" > Ensight </a> is a 
 *         popular commercial visualization tool marketed by 
 *         Computational Engineering International. Many RTT and other LANL
 *         codes provide output links to this file format.
 *
 * </dl>
 * 
 */
//===========================================================================//
/*!

 * \namespace rtt_meshReaders

 * \brief Namespace to contain the RTT mesh Reader utilities.
 *
 * Provides namespace protection for the Draco (RTT) mesh reader
 * utilities.

 * The Element_Definition class describes the mesh elements supported. The
 * RTT_Format class provides a capability to read RTT format mesh files. The
 * Hex_Mesh_Reader class provides a capability to read CIC-19 Hex Mesh format
 * mesh files.
 
 * \sa The \ref rtt_meshreaders_overview page presents a summary of the
 * capabilities provided within the namespace.

 */
//===========================================================================//

#include <string>

namespace rtt_meshReaders 
{

/*!
 * \brief  Gets the release number for the meshReaders package. 
 * \return release number as a string in the form meshReaders-\#_\#_\#
 */
const std::string release();

}  // end of rtt_meshReaders namespace

#endif                          // __meshReaders_Release_hh__
//---------------------------------------------------------------------------//
//                              end of Release.hh
//---------------------------------------------------------------------------//
