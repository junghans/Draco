# draco.exp
# Geoffrey Furnish
# February 12, 1998
#
# @> General DejaGNU support machinery for testing Draco components.

puts "loading draco.exp from lib"

# Analyze the Design By Contract settings.

global DBC

global Require
global Check
global Ensure

if {$DBC & 1} { set Require 1 } else { set Require 0 }
if {$DBC & 2} { set Check   1 } else { set Check   0 }
if {$DBC & 4} { set Ensure  1 } else { set Ensure  0 }

if {$Require} { puts "Require() enabled." } else { puts "Require() disabled." }
if {$Check}   { puts "Check() enabled." }   else { puts "Check() disabled." }
if {$Ensure}  { puts "Ensure() enabled." }  else { puts "Ensure() disabled." }

# Analyze the C4 environment.

global C4
global Serial

set Serial 1

if {$C4 == "mpi"} { set Serial 0 }
if {$C4 == "s2"}  { set Serial 0 }

proc c4run {np args} {
    global C4
    global Serial
    global PWD

    # puts "PWD: $PWD"

    if {$Serial} {
	puts "Running serial code."
        if [catch {exec $PWD/$args} output] {
	   error "serial code faild: $output"
        } else {
           return "$output"
        }
    }

    if {$C4 == "mpi"} {
	puts "Running MPI code on $np nodes."
	if [catch {exec mpirun -np $np $PWD/$args} output] {
	   error "mpirun failed: $output"
        } else {
           return "$output"
        }
    }

    if {$C4 == "s2"} {
	puts "Running an SGI SHMEM program."
	if [catch {exec $PWD/$args -npes $np} output] {
	   if [regexp "child killed: kill signal" $output] {
	      return "SHMEM program may have failed: $output"
           } else {
	      error "SHMEM program failed: $output"
           }
        } else {
           return "$output"
        }
    }

    puts "Unrecognized C4 option."
    return [exec $args]
}
