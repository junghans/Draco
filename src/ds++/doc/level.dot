digraph dsxx_package_level {
    /* graph attributes */
    center=1;
    size="8,14";
    ranksep=1.25;

    /* nodes */
    node0 [shape=box, label="DynArray"];
    node1 [shape=box, label="Packing_Utils"];
    node2 [shape=box, label="Mat"];
    node3 [shape=box, label="Check_Strings"];
    node4 [shape=box, label="SP"];
    node5 [shape=box, label="Bounds"];
    node6 [shape=box, label="SortPermutation"];
    node7 [shape=box, label="Assert"];
    node8 [shape=box, label="Release"];
    node9 [shape=box, label="destroy"];
    node10 [shape=box, label="isSorted"];
    node11 [shape=box, label="Allocators"];
    node12 [shape=box, label="Soft_Equivalence"];
    node13 [shape=box, style="dashed" color="orange" label="ds_test"];
    node14 [shape=box, style="dashed" color="orange" label="tstAllocators"];
    node15 [shape=box, style="dashed" color="orange" label="tstAssert"];
    node16 [shape=box, style="dashed" color="orange" label="tstCheck_Strings"];
    node17 [shape=box, style="dashed" color="orange" label="tstMat"];
    node18 [shape=box, style="dashed" color="orange" label="tstPacking_Utils"];
    node19 [shape=box, style="dashed" color="orange" label="tstSoft_Equiv"];
    node20 [shape=box, style="dashed" color="orange" label="tstSortPermutation"];
    node21 [shape=box, style="dashed" color="orange" label="tstSP"];

    /* level dependencies */
    node3 -> {};
    node5 -> {};
    node7 -> {};
    node8 -> {};
    node9 -> {};
    node10 -> {};
    node13 -> {};
    node0 -> { node7 };
    node1 -> { node7 };
    node4 -> { node7 };
    node11 -> { node7 };
    node12 -> { node7 };
    node6 -> { node7  node10 };
    node2 -> { node7  node11  node5  node9 };
    node16 -> { node3 node7 node8 } [ style="dashed" color="orange" ];
    node14 -> { node11 } [ style="dashed" color="orange" ];
    node15 -> { node13 node7 node8 } [ style="dashed" color="orange" ];
    node17 -> { node2 } [ style="dashed" color="orange" ];
    node18 -> { node13 node8 node1 node7 node12 } [ style="dashed" color="orange" ];
    node19 -> { node13 node8 node12 node7 } [ style="dashed" color="orange" ];
    node20 -> { node8 node10 node6 } [ style="dashed" color="orange" ];
    node21 -> { node13 node8 node4 node7} [ style="dashed" color="orange" ];

    /* Levels */
    l4 [shape=plaintext, label="Level 4", fontsize=18];
    l3 [shape=plaintext, label="Level 3", fontsize=18];
    l2 [shape=plaintext, label="Level 2", fontsize=18];
    l1 [shape=plaintext, label="Level 1", fontsize=18];

    l4 -> l3 -> l2 -> l1
	
    {rank=same; l1 node3 node5 node7 node8 node9 node10 node13 };
    {rank=same; l2 node0 node1 node4 node6 node11 node12 node15 node16 };
    {rank=same; l3 node2 node14 node18 node19 node20 node21};
    {rank=same; l4 node17 };
}
