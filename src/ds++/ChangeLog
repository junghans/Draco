2005-08-02  Kelly Thompson  <kgt@lanl.gov>

	* tstBounds.cc: Added new unit test to for the Bounds class.

	* tstMat.cc: Added many new tests to improve function point
	  coverage of Mat classes.

	* Mat.hh: Commented out member functions of Mat3, Mat4 and Mat5
	  that did not have unit tests associated with them.

2004-11-22  Rob Lowrie  <lowrie@lanl.gov>

	* Added constructor RCF(int n, value_type v = value_type()).  This
	automatically allocates the new field.  So, RCF<vector<double> >
	v(new vector<double>(10, 6.3)) may be replaced with
	RCF<vector<double> > v(10, 6.3);

	* Added File_Streams, which contains the classes File_Input and 
	File_Output.  These streams handle output/input to/from ascii 
	and binary files. Moreover, File_Output is interchangeable with 
	rtt_dsxx::Packer() and File_Input is interchangeable with 
	rtt_dsxx::Unpacker().  By templating an I/O class on stream type,
	the same code can be used to both pack data and save data to files.

2003-03-13  Thomas M. Evans  <tme@lanl.gov>

	* ds++: release 1_9_0.  Lots of changes.  Got rid of some
	deprecated stuff [still have to get rid of DynArray and Allocator
	and replace them with std::allocator].  Refactored SP and tstSP
	with lots more comments and testing.  Made assertion class a
	derived class of std::runtime_error.  Updated lots of tests to new
 	testing templates.

2003-03-10  Kelly Thompson  <kgt@lanl.gov>

	* Assert.*, test/tstAssert.cc: Let rtt_dsxx::assertion derive from
	std::runtime_error.  G. Furnish intended for the design to follow
	this model but the C++ compilers at time did not have full support
	for <stdexcept>.  API is unchanged but the guts of the class are
	significantly different (i.e.: use copy and assignment operators
	from base class, use string instead of const char *, etc.).

2003-02-05  Thomas M. Evans  <tme@lanl.gov>

	* Algorithms.hh, Nestmap.*, Sort.*, SortPermutation.*, String.*,
	isSorted.hh, opaquePointers.*: These classes/files have been
	removed.  With the STL they are not needed.  Coming soon,
	refactoring of Mat that will allow us to remove Allocator, etc.

2002-12-11  Thomas M. Evans  <tme@lanl.gov>

	* ds++: release 1_8_0.  Fixed some problems with standard
	conformity in tstSort.cc.  Fixed test of tstPacking_Utils.cc.
	There was a vague implicit conversion there in which space for
	ints was allocated, but the loaded type was not guaranteed to be
	an int.

2002-11-14  Thomas M. Evans  <tme@lanl.gov>

	* ds++: Updated to 1_7_0.  Small std compliant changes to
	SortPermutation. 

2002-05-08  Thomas M. Evans  <tme@lanl.gov>

	* ds++: updated to release ds++-1_6_0.  This release primarily
	consists of fixes for compilers.

2001-12-17  Thomas M. Evans  <tme@lanl.gov>

	* ds++: updated to release ds++-1_5_0.  This release contained a
	new header, Soft_Equivalence.hh, which is used for floating point
	comparisons.  It also contains some fixes to Packing_Utils and
	improved testing infrastructure using the new draco testing
	templates (although not all tests were updated this way).

	Also, configure is no longer part of the ds++ package.  It is
	built by src/configure.

2001-07-25  Thomas M. Evans  <tme@lanl.gov>

	* ds++: updated to release ds++-1_4_0.  This release contains the
	Packing_Utils components. It also cleans up some other
	classes--adds namespace declarations, etc--to that gnu g++ can
	compile ds++.

2000-02-09  Thomas M. Evans  <tme@lanl.gov>

	* ., test: updated to release ds++-1_1_0.  This release primarily
 	takes into account the namespace change from dsxx:: to rtt_dsxx::
 	Namespaces are now consistent in ds++. Also, some new functions
 	(Check_Strings) have been added.

2000-04-19  Shawn Pautz  <pautz@lanl.gov>

	updated to release ds++-1_3_0 (not sure when ds++-1_2_0 happened.
	We have removed the last_stable tag and the dejagnu scripts.
	
