.TH "<CLASS>" 1 "<DATE>" "libc4.a"

.SH NAME
<SHORT_SNIP>

.SH DESCRIPTION
<CLASS_DESCRIPTION>

.SH DECLARATION
<CLASS_DECL>

.SH METHODS
<CLASS_METHODS>

.SH USAGE
.in .5i
All C++ classes in the GTS programming environment are made available
by including the header file which defines them.  The most
straightforward way to arrange this is to put a "-I" directive on the
compile line, pointing to the GTS top level source directory, of which
"base", "gf++", etc, are all subdirectories.  Then in your code, issue
a directory qualified inclusion directive.  For this class, the
correct directive is:

.in 2i
#include "c4/<FILE>"
.in .5i

Note that for Cfront based C++ compilers, it is necessary to give the
same "-I" directives at link time, as were used during compilation.

Finally, in order to link, you have to specify appropriate -L and -l
options to specify the location and name of the desired libraries.
For this class it would look something like this:

.nf
.in 1i
CC -I.. -c foo.cc
CC -I.. -o foo foo.o -L../c4 -lc4
.in .5i
.fi

This assumes you are currently in a subdirectory of the GTS toplevel
source directory (a sibling directory of base, gf++, etc.).  You will
need to change the ".." in the above to be some more fully specified
path if you are compiling from some other area of the filesystem.

.SH REVISION HISTORY
The revision history for the file declaring <CLASS> is:
.in 1i
<DECL_REVISION>
.in .5i

The revision history for the file implementing <CLASS> is:
.in 1i
<IMPL_REVISION>
.in .5i
