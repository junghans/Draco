2012-11-29  Kent G. Budge <kgbudge@lanl.gov>

	Major refactor of the entire package. 

	* QuadServices is eliminated.

	* Angle_Operator is renamed to Ordinate_Space (since it is a
	collection of operations on the ordinate space rather than just
	the angle term in the advection operator) and it is specialized as
	Sn_Ordinate_Space and Galerkin_Ordinate_Space.

	* Quadrature becomes a factory class for Ordinate_Set and
	Ordinate_Space. 

	* The client can now override the default axis assignments for a
	quadrature. That is, he can assign mu, eta, and xi to x, y, and z
	at his pleasure -- though this will bork if he is in curvilinear
	geometry and fails to assign a direction cosine with levels to the
	axis of symmetry.
	

2006-07-07  Kelly Thompson  <kgt@lanl.gov>

	* test/tQuadServices.cc (test_quad_services_with_3D_S4_quad):
	  Provided more extensive testing of quadrature sets.  Updated
	  unit test to use ds++/ScalarUnitTest framework.

	* Quadrature.cc (rtt_quadrature): Modified iOmegaDomega() and
	  iOmegaOmegaDomega() so that these tests makes sense for 2D
	  quadratures used in 1D problems.

	* QuadServices.hh (class QuadServices ): Provide the ability to
	  compute extra moments when needed to fill M operator before
	  computing the D operator.  This may occur when the mesh
	  dimension is 1 but a 2D quadrature set is used (i.e. 1D
	  cylindrical problems). Also provide new service routines
	  compute_azimuthalAngle and diagonal_not_zero.  The later
	  function is used to check the validity of the D = Inv(M)
	  computation.

2005-09-27  Kelly Thompson  <kgt@lanl.gov>

	* Q1DDoubleGauss: Replaced header file include directive for
	  QuadServices with an implementation file include directive for
	  Q1DGaussLeg.hh.  In the implementation file, replaced use of
	  factory class QuadCreator to create temporary GaussLeg
	  quadrature objects with direct construction.  This modification
	  removes a within package cyclic dependency.

2004-11-17  Kelly Thompson  <kgt@lanl.gov>

	* test/tQuadServices.cc: Added tests for factorial and
	kronecker_delta now that they are public accessible; Add
	independent verification tests for computing some of the values of
	M and D; Now test 1D, 2D and 3D quadrature sets.

	* autodoc/QuadServices.dcc: Added more Associated Legendre
	polynomial's to the existing list.

	* QuadServices_pt.cc (class QuadServices): Moved 
	kronecker_delta() and factorial() to namespace scope and out of
	the class definition. 

	* QuadServices.i.hh (class QuadServices): Moved kronecker_delta() 
	and factorial() to namespace scope and out of the class
	definition. 

	* QuadServices.hh (class QuadServices): Moved kronecker_delta()
	and factorial() to namespace scope and out of the class
	definition. 

	* QuadServices.hh (class QuadServices): Added an accessor function
	to retrieve the n2lk values (the mapping between moment n and the
	spherical harmonic index tuple (l,k)).

	* QuadServices.cc (spherical_harmonic): Fixed two bugs.
	1) For 2D quadratures, initialize xi = sqrt(1-mu^2-eta^2).
	2) When computing the spherical harmonic value, the argument to
  	   cos() should read k*azimuthalAngle.

2002-12-11  Thomas M. Evans  <tme@lanl.gov>

	* quadrature: release 1_2_0.  Std conforming updates to
	Quadrature.cc.

2002-05-09  Thomas M. Evans  <tme@lanl.gov>

	* quadrature: released version 1_1_0.  This is the second
	"official" release of this package.  From the first release it
	includes the new draco testing framework.

