
	* mc: Updated to mc-4_0_0.  This is a tagged release that
	precludes the mc package move to clubimc.

2004-01-13  Thomas M. Evans  <tme@lanl.gov>

	* mc: tagged as part of draco-4_2_0.  This version has surface
	tally infrastructure and the sphyramid mesh.

2003-09-05  Thomas M. Evans  <tme@lanl.gov>

	* mc: tagged as part of draco-4_0_0.  Full support for Random Walk
	in RZWedge_Mesh and OS_Mesh. Surfaces have been added for surface
	tracking. 

2003-06-04  Thomas M. Evans  <tme@lanl.gov>

	* mc: tagged as part of draco-3_0_0.  It has support for random
	walk, needed by imc, in OS_Mesh.  RZWedge_Mesh and TET_Mesh do not
	have it yet.

2003-03-14  Thomas M. Evans  <tme@lanl.gov>

	* mc: Updated to mc-3_3_0.  This update has lots of little stuff:
		
		1) removed scoping defs for Compaq [see below]; scoping is
		   now part of the code
		2) added some interpolators to Math.hh
		3) Refactored OS_Mesh, Coord_sys, Layout, for readability
		   and doxygenization
		4) added some functionality for random walk to coord_sys

2003-02-13  Thomas M. Evans  <tme@lanl.gov>

	* Particle_Buffer_Defs/Unset_Particle_Buffer_Defs.h: Removed these
	files and added explicit scoping in the derived Particle_Buffer
	classes.  This is part of the standard (14.6.2).

2002-11-14  Thomas M. Evans  <tme@lanl.gov>

	* mc: Updated to mc-3_2_0.  Standard-compliancy changes dictated
	by gcc 3.2.

2002-08-14  Thomas M. Evans  <tme@lanl.gov>

	* mc: Updated to mc-3_1_0.  Main changes were for the Compaq-6_5_0
	compiler.

2002-08-12  Thomas M. Evans  <tme@lanl.gov>

	* Particle_Buffer_Defs.h, Unset_Particle_Buffer_Defs.h,
	Particle_Buffer.t.hh: Added #defines and #undef that are included
	at the beginning and end of Particle_Buffer.t.hh
	(Send_Particle_Buffer, Recv_Particle_Buffer) to add
	Particle_Buffer<PT>:: scoping to the derived classes.  The COMPAQ
	CXX-6_5_0 compiler seems to have problems scoping template base
	classes.  This is a, relatively, non-itrusive work-around until
	the bug is fixed.

2002-05-09  Thomas M. Evans  <tme@lanl.gov>

	* mc: released version mc-3_0_0. Lots of changes.  Upgraded to new
	draco testing.  Moved particle communication services into mc.
	Upgraded for new compilers.

2002-01-04  Thomas M. Evans  <tme@lanl.gov>

	* Comm_Builder, Communicator: moved these two classes from imc to
	mc.  Updated them to work with the new Particle_Buffer classes.

2002-01-03  Thomas M. Evans  <tme@lanl.gov>

	* Particle_Buffer, Particle_IO, Particle_Stack: moved
	Particle_Buffer class to mc from imc package.  Redesigned the
	class substantially.  Broke off the Particle_Stack and IO
	functions into their own classes.  Redesigned Particle_Buffer into
	a base class with 2 derived classes: Recv_Particle_Buffer and
	Send_Particle_Buffer.

2001-12-19  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Sampler.hh: added functions sample_bin_from_discrete_cdf and
	is_this_cdf_valid, where cdf is a discrete (histogram) cumulative
	distribution function.

2001-12-17  Thomas M. Evans  <tme@lanl.gov>

	* mc: Released mc-2_3_0.  The changes include the omega
	dot-product upgrades described below and a total mesh volume
	calculation that has been added to RZWedge_Mesh (but not
	OS_Mesh).  Additionally, added Planckian frequency sampling into
	Sampler.  Updated to new testing infrastructure.

2001-09-05  Todd J. Urbatsch  <tmonster@lanl.gov>

	* mc: In Coord_sys, made checks consistent on magnitude of
	direction cosines.  We use soft_equiv(Omega-dot-Omega,1.0,1.0e-5)
	and soft_equiv(sqrt(Omega-dot-Omega),1.0,1.0e-10), since
	magnitude^2 is farther away from unity than magnitude.  Checks
	fail if magnitude is more than 1.0e-5 from unity.  Omega is
	renormalized if its magnitude is more than 1.0e-10 from unity.

2001-07-30  Thomas M. Evans  <tme@lanl.gov>

	* mc: Release mc-2_2_0.  This release includes the use of
	Packing_Utils (rtt_dsxx) in OS_Mesh::pack and RZWedge_Mesh::pack
	along with some cleanup for the gnu g++ compiler.

2001-05-10  Thomas M. Evans  <tme@lanl.gov>

	* mc: Release of mc-2_1_0.  This update includes the addition of
	mesh packing technology for OS_Mesh and RZWedge_Mesh.  Some other
	code cleanup is included.

2001-02-15  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Mesh.cc, TET_Mesh.hh, test/tstTET_Mesh.cc: Completed and
	tested pack/unpack facilities for tet meshes.

2000-12-14  Thomas M. Evans  <tme@lanl.gov>

	* mc: Release of mc-2_0_0. This update includes all of our major
	parallel redesign modes for Monte Carlo.  It also includes all of
	the AMR and RZ mesh enhancements.  It does not include FULL TET
	mesh functionality.

2000-12-11  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.cc, TET_Builder.hh, test/tstTET_Mesh.cc:
	Replaced previous connectivity builders with an N*log(N)
	version.

2000-12-03  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.cc: Another, slightly faster version of the
	connectivity builder.

2000-12-01  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.cc, test/TET_MODEL_1.in, test/TET_RTT_5.in,
	test/tstTET_Mesh.cc: New, faster connectivity builder, new
	RTT-format test file, and fstream/stringstream techniques
	for regression tests.

2000-11-30  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Mesh.hh, test/tstTET_Mesh.cc, test/TET_MODEL_1.in:
	Added get_cell_pair(), the third graphic service for TET_Mesh
	class, to support Ensight_Translator.  Added include-file and
	using-declaration for rtt_viz::Ensight_Translator.  Replaced
	locally generated output (cerr) test file with technique using
	ifstream/ostringstream for in-memory comparison with predicted
	outputs, thus increasing coverage for regression tests.  Added
	tests for get_cell_pair() member of TET_Mesh class.

2000-09-22  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.cc, TET_Builder.hh, TET_Mesh.cc, TET_Mesh.hh,
	test/TET_test_1.hh, test/tstTET_Mesh.cc: Added TET_Mesh
	diagnostic services print_title(), print_layout(),
	print_node_coord_units(), print_sides_vertices(),
	print_cells_vertices(), and print_submesh().

2000-07-23  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Mesh.cc, TET_Mesh.hh, test/tstTET_Mesh.cc: Initial
	implementation of sample_pos() for linearly interpolated
	temperature**4 given the temperatures**4 on the vertices of the
	cells.  Its interface will probably need to be changed; and it is
	less efficient than it might be, because of recalculation of
	certain quantities that we will probably decide to store.

2000-07-20  Thomas M. Evans  <tme@lanl.gov>

	* AMR_Layout.hh, AMR_Layout.cc: added AMR_Layout classes for
	1-to-N cell face boundaries

2000-06-19  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Mesh.cc, test/tstTET_Mesh.cc: Corrected a major bug in the
	get_db() and get_min_db() services of TET_Mesh, and added a new
	regression test for the two services.

2000-06-16  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.hh, configure.in, test/Makefile.misc,
	test/tstTET_Mesh.cc, and added test/TET_RTT_4.in: TET_Builder now
	eliminates from node_sets those flags with no associated nodes.
	A fourth RTT-format test file has been added to test the feature.

2000-06-15  H. Grady Hughes  <hgh@lanl.gov>

	* ../configure.in, configure.in, test/tstTET_Mesh.cc: Relevelized
	and changed #include and namespace lines in the test code to take
	advantage of the revised RTT_Format_Reader class.

2000-06-08  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.cc, TET_Builder.hh, TET_Mesh.cc, TET_Mesh.hh,
	test/TET_test_1.hh, test/tstTET_Mesh.cc: The information from the
	interface service get_element_sets() is converted to two separate
	maps, side_sets and cell_sets, and used to initialize data members
	of the TET_Mesh class.  The TET_Mesh class no longer has knowledge
	of element_sets.  Also, new diagnostic functions print_node_sets,
	print_side_sets, and print_cell_sets are added to TET_Mesh.

2000-05-03  H. Grady Hughes  <hgh@lanl.gov>

	* Tet_Builder.cc, TET_Builder.hh, TET_Mesh.cc, TET_Mesh.hh,
	test/TET_test_1.hh, test/tstTET_Mesh.cc: TET_Builder, TET_Mesh,
	and their test files now use the get_node_coord_units(),
	get_node_sets(), get_element_sets(), and get_title() services of
	the Mesh_Reader base class.  At the top level (TET_Mesh), the
	get_element_sets() service will later be replaced by side- and
	cell-specific data structures.
	
2000-05-02  Thomas M. Evans  <tme@lanl.gov>

	* Comm_Patterns.*: Added Comm_Patterns class that calculates
	boundary cell communication patterns for gather/scatter type
	operations.
	
2000-04-26  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.cc, TET_Builder.hh, TET_Mesh.cc, TET_Mesh.hh,
	test/TET_test_1.hh, test/tstTET_Mesh.cc: Added private data VF_INT
	sides_vertices for future needs, and made proper use of
	get_element_nodes() and get_element_types() from the Mesh_Reader
	base class.
	
2000-04-25  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Mesh.cc, TET_Mesh.hh: Renamed in_cell() to in_open_cell()
	and added the related function in_closed_cell().

2000-04-18  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Mesh.cc, ThreeVector.hh, test/tstTET_Mesh.cc,
	test/TET_RTT_2.in: Changed direction of vector in lin_comb() in
	ThreeVector.hh, correcting a bug in sample_pos() in TET_Mesh;
	added another regression test to test/tstTET_Mesh.cc; installed a
	new RTT-format test file for later regression testing.

2000-04-18  Thomas M. Evans  <tme@lanl.gov>

	* mc: Released version mc-1_2_0.

2000-04-13  Todd J. Urbatsch <tmonster@lanl.gov>
	
	* RZWedge_Mesh.hh, RZWedge_Mesh.cc, test/tstRZWedge_Mesh.cc: Added
	the RZWedge_Mesh class and a thorough test of a simple, one-cell
	RZWedge_Mesh.  It has a full, structured-mesh capability.  Still
	needs a builder, updated face references, and AMR capability.

2000-04-06  H. Grady Hughes  <hgh@lanl.gov>
	
	* test/TET_RET_1.in: Added an RTT-format test file for testing
	interfaces for the TET_Builder class.

2000-04-04  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.hh, TET_Builder.cc, TET_test_1.hh, tstTET_Mesh.cc:
	Rewrote the builder class and the tests to be consistent with the
	new meshReader classes

2000-02-12  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Mesh.hh, TET_Mesh.cc, TET_Builder.hh, TET_Builder.cc: Added
	TET_Mesh member functions get_cell_types() and get_point_coord()
	for Ensight support.  Also eliminated all using declarations from
	TET_Mesh and TET_Builder.

2000-02-10  Thomas M. Evans  <tme@lanl.gov>

	* OS_Builder.hh, OS_Builder.cc: the builder now reads its own
	simple OS_Mesh format file.  This format file can be in a separate
	file or in the traditional input file.  This move precedes the
	general move to have mesh builders read their own mesh format
	files.
	
2000-02-09  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.hh, TET_Builder.cc, test/TET_test_1.hh,
	test/tstTET_Mesh.cc: Initial commit of TET_test_1.hh, an example
	of a TET_Mesh Interface Type class, and extension of
	tstTET_Mesh.cc to include instantiation from that <IT> class.
	Also corrected some out-of-range index errors in TET_Builder.

2000-02-08  H. Grady Hughes  <hgh@lanl.gov>

	* TET_Builder.hh, TET_Builder.cc: Initial commit of components for
	the TET_Mesh builder class.

2000-02-07  H. Grady Hughes  <hgh@lanl.gov>

	* test/tstTET_Mesh.cc: Added many tests of TET_Mesh functions, for
	a "hand-coded" test mesh.
	
2000-02-02  Thomas M. Evans  <tme@lanl.gov>

	* Layout*, *Coord_sys*, OS_Mesh*, OS_Builder*: removed using
	declarations from file scope.  Also, removed any references to
	MT::CCSF_a, MT::CCSF_i, MT::CCVF_d, and MT::CCVF_i.  This has some
	downfield repurcussions (Parallel_Builder).

2000-01-30  H. Grady Hughes <hgh@lanl.gov>

	* TET_Mesh.hh: Added subscripting, iterators, size, and empty
	functions to class TET_Mesh::CCVF.

2000-01-28  H. Grady Hughes <hgh@lanl.gov>

	* TET_Mesh.hh, TET_Mesh.cc, test/tstTET_Mesh.cc:
	Added in_cell(), get_cell(), and get_min_db() functions to TET_Mesh.
	Also, initial commit of tstTET_Mesh.

2000-01-27  H. Grady Hughes <hgh@lanl.gov>

	* TET_Mesh.hh, TET_Mesh.cc, ThreeVector.hh: Initial commit of
	components for the TET_Mesh.
	
1999-12-14  Thomas M. Evans  <tme@lanl.gov>

	* Parallel_Data_Operator.*, /test/tstParallel_Data_Operator.*:
	added a parallel data operations class for performing parallel
	field operations based on a particular topology.

	* test/tstTopology.cc: full testing for General_Topology and
	Rep_Topology classes.

1999-11-19  Thomas M. Evans  <tme@lanl.gov>

	* Topology.*, test/tstTopology.cc: added a Topology class that
	describes mesh decomposition.  Additionally, added a component
	test for it.  At this juncture the test only works for full
	replication cases.  We had to add c4 to the mc dependency list to
	accomodate node information in Topology.

1999-10-18  Thomas M. Evans  <tme@lanl.gov>

	* OS_Mesh.hh, OS_Mesh.cc: added expanded surface source
	capability.  Updated to mc-1_1_0.

