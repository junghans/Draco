2002-01-11  Thomas M. Evans  <tme@lanl.gov>

	* Particle_Buffer, Communicator, Comm_Builder: moved these classes
	to mc.  Also, updated Particle to work with the new versions of
	these classes.  The Particle_Buffer, etc classes are now totally
	distinct from Particle.  All a PT must have to use these classes
	are the following functions:
		
		PT(const vector<char> &);
		vector<char> pack();
		int get_cell();
		void set_cell();

	Additionally, the Particle must indicate that it is in a boundary
	cell by returning a negative index with get_cell() (to use the
	Communicator class, this is the same condition as before).

2001-12-18  Thomas M. Evans  <tme@lanl.gov>

	* imc: Released imc version 2_3_0.  This version includes the
	following changes since 2_2_0:

		- added Mat_State_Builder (see updates below)
		- updated with hybrid Particle (M. Buksas)
		- new testing infrastructure
		- removed configure script
		- moved Source_Init and Topology_Builder to milagro

2001-11-20  Thomas M. Evans  <tme@lanl.gov>

	* CDI_Mat_State_Builder, CDI_Data_Interface: added CDI version of
	Mat_State_Builder and CDI interface.

2001-11-15  Thomas M. Evans  <tme@lanl.gov>

	* Mat_State_Builder: Made new class hierarchy, Mat_State_Builder
	that replaces Opacity_Builder.  Also, split up Interface into
	three classes:

		Interface-common mat builder, source builder, etc)
		Flat_Data_Interface-flat data interface to
			Flat_Mat_State_Builder
		CDI_Data_Interface-uses CDI to get data

2001-07-30  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-2_2_0.  This includes M. Buksas' mods to
	Particle and Particle_Buffer that adds a Particle::Pack
	capability.  It also separates the implementation of Particle from
	Particle_Buffer.  T. Evans cleaned up the Particle class and
	Particle_Buffer class.  These included cosmetic as well as
	compiler (using typedef typename PT::Pack PT_Pack) constructs for
	gnu g++.  Made the particle descriptor always use an enumeration
	outside of the particle classes.

2001-05-10  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-2_1_0. This includes lots of small code
	cleanup.  Especially to Mat_State, Opacity, Opacity_Builder.

2000-12-14  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-2_0_0.  This update includes all of our
	major parallel redesign modifications.  It does not yet include
	threads. 

2000-08-24  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Source_Builder.t.hh, Source.t.hh: Added work-around capability
 	for the random number stream ID's to wrap seamlessly around 2e9.
  	In effect, we can run more than 2e9 particles while retaining
 	reproducibility, all at the cost of repeating rn_streams after 2e9
 	particles.  At the beginning of each cycle, the rn_stream is
 	modulo'd with 2e9.  When each source particle begins, its
 	rn_stream is modulo'd with 2e9.  Thus, rn_stream=2e9 becomes
 	rn_stream=0. When SPRNG is updated to allow for rn_stream>2e9, we
	can dump this work-around.  

2000-06-28  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Source_Builder.*, DD_Source_Builder.*, Rep_Source_Builder.*:
	Added capability to resurrect dead census particles, so energy is
	conserved (globally and spatially locally -- a first!) at the
	expense of some increase in variance.  Capability (function calls
	in build_Source) is commented out until full DD is working and
	passes all the (old) regression tests.

2000-06-19  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Source_Builder.*, DD_Source_Builder.*, Rep_Source_Builder.*:
	Added topology-dependent functions to recalculate the post-comb
	census energy-weights and a topology-independent function to reset 
	the ew's in the census.

2000-06-13  Thomas M. Evans  <tme@lanl.gov>

	* Comm_Builder.*:  Updated the Comm_Builder class to use
	rtt_mc::Topology to build instances of the Communicator class.
	This class is now ready for release for a full DD supported
	version of imc.

	* test/tstCommunicator.*: Added full testing for the Communicator
	and Comm_Builder classes.

2000-06-07  Todd J. Urbatsch  <tmonster@lanl.gov>

	* DD_Source_Builder.*: Added derived class for building the imc
 	source on a full domain decomposition topology.

2000-04-19  Thomas M. Evans  <tme@lanl.gov>

	* DD_Transporter.*: Full and General DD class to handle a single
	timestep of IMC F&C transport on domain decomposed parallel mesh
	topologies.

2000-04-18  Thomas M. Evans  <tme@lanl.gov>

	* Transporter.*, Rep_Transporter.*: Transporter class to handle a
	single timestep of IMC F&C transport.

	* imc: Updated to version imc-1_3_0.  This still does not have
	complete DD functionality.  Version 2_0_0 will include complete
	DD.  Version 1_3_0 has complete functionality for full
	replication.

2000-02-14  Thomas M. Evans  <tme@lanl.gov>

	* Source_Init.*, Interface.hh: updated these classes to reflect
	the new mesh builder model.  In this model the mesh builder reads
	its own mesh format file.  Thus, Source_Init is not required to
	calculate surface source cells; this is now taken care of by the
	mesh builder class.

	* test, IMC_Test.hh, OS_Input.in: updated tests to reflect the new
 	builder model.  Added a mesh format file for testing
	(OS_Input.in).  Also, updated IMC_Test.hh so that is now contains
	a parser (gives the interface the name of the mesh file) and an
	interface, which uses the mesh builder to get certain data (like
	the list of surface cells).

2000-01-19  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Rep_Source_Builder.t.hh: Corrected a long-time error: after
 	sampling the initial census, ecen(cell) should (and now does)
 	represent the energy of the actual particles.  (ecentot still
 	represents the deterministically calculated total census energy,
 	though.)  Thus, ecentot - global_ecen_loss = true ecentot.  This
 	change will need to be carried into DD_Source_Builder, etc.  The
 	old error was in the old Source_Init and old Parallel_Source_Init
 	(pre v2_0_0).

2000-01-11  Thomas M. Evans  <tme@lanl.gov>

	* Source_Init.*: removed the old Source_Init.  The new Source_Init 
	does pre-initialization source initialization.  This includes
	evaluating surface source cells and estimating source numbers as a 
	precursor to parallel partitioning.  The new Source_Init requires
	a full mesh.  At present it only calculates the surface source
	cells.  Source number calculations will not be necessary until we
	go to a general/DD topology.

1999-12-20  Thomas M. Evans  <tme@lanl.gov>

	* Mesh_Operations.*: added Mesh_Operations class.  This class is
	template on MT and provides specializations to different MTs for
	operations that perform highly mesh-centric operations on data.
	For example, we use this class to perform T4 slope sampling
	because each MT may do this sampling differently but it requires
	communication and temperature data, which are outside the pervue
	of the mesh, to do the sampling itself.  Essentially, this is a
	mesh association class for IMC operations that do highly mesh-like 
	things.

1999-11-15  Thomas M. Evans  <tme@lanl.gov>

	* Opacity_Builder.hh, Opacity_Builder.t.hh, Particle_Buffer.hh:
	first of many modifications that will result in full parallel
	sourcing and opacity reading.  These changes are heading towards
	release imc-2_0_0.  All of the imc tests should still pass at this 
	point.

1999-11-12  Todd J. Urbatsch  <tmonster@lanl.gov>

	* : Updated to imc-1_2_0. 

1999-11-10  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Global_Tally.t.hh, Global_Tally.hh, Source_Init.t.hh,
	Source_Init.hh: 1) Corrected Initial Material Energy Edit 2) Added 
	material volume source -- time-explicit portion. 

1999-10-15  Thomas M. Evans  <tme@lanl.gov>

	* Parallel_Source_Init.hh, Parallel_Source_Init.t.hh,
	Source_Init.hh, Source_Init.t.hh:  Added expanded surface source
	capability.  Updated to imc-1_1_0.  

