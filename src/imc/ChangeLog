2004-04-07  Thomas M. Evans  <tme@lanl.gov>

	* imc: updated to imc-4_0_0.  This tag release precludes the move
	of imc to clubimc.

2004-03-11  Thomas M. Evans  <tme@lanl.gov>

	* imc: release as part of draco-4_3_0.  This version fully
	integrates mg surface tallies.

2004-01-13  Thomas M. Evans  <tme@lanl.gov>

	* imc: release as part of draco-4_2_0.  This version has surface
	tallies [in both gray and multigroup].  Also, (Mesh_Operations)
	has a specialization for the Sphyramid_Mesh.

2003-09-22  Thomas M. Evans  <tme@lanl.gov>

	* imc: released as part of draco-4_1_0.

	* Gray_Particle.t.hh, Multigroup_Particle.t.hh, Particle.hh: as
	part of the draco-4_1_0 release, the random walk algorithm was
	updated to kill random walk particles that goto census with a
	weight below cutoff.  

2003-09-05  Thomas M. Evans  <tme@lanl.gov>

	* imc: released as part of draco-4_0_0.  This version of imc has
	full support for Random Walk and Surface Tracking for all particle
	types.  However, the Surface Tracker builder only works for
	RZWedge meshes.  We will add OS_Mesh support at a later date. 

	This version of imc has a lot of added unit tests, particularly in
	tstTransporter and tstRandom_Walk.  We made a tstParticle_trans
	unit test; however, this is currently empty.  We need to put some
	more detailed single-cell particle tests in this unit test.

2003-08-11  Thomas M. Evans  <tme@lanl.gov>

	* Mat_State_Builder, Flat_Mat_State_Builder,
	CDI_Mat_State_Builder, Opacity_Builder_Helper: Made the
	Flat_Mat_State_Builder and CDI_Mat_State_Builder have the same
	general structure.  This will help with maintanence.  Also, added
	Opacity_Builder_Helper class to implement common functionality for
	both classes.  We use this class so we don't have to specialize on
	the base class.

2003-07-30  Thomas M. Evans  <tme@lanl.gov>

	* imc: released imc-3_4_0.  This is a sub-release tag that
	represents the full inclusion of random walk for gray and
	multigroup transport.  However, the CDI_Mat_State_Builder cannot
	build diffusion opacities in multigroup problems.

2003-07-25  Thomas M. Evans  <tme@lanl.gov>

	* imc: tagged as part of draco-3_2_0.  This version of imc has
	implementation for tally spheres in both Gray_Particle and
	Multigroup_Particle.  Random_Walk is implemented in
	Gray_Particle.  No implementation is done for multigroup yet.
	Also, we need to greatly expand particle testing in
	tstParticle_trans.cc.  

	The tally surface is not fully implemented in Transporter yet.
	There is only a placeholder for it in the calls to PT::transport.
	The Extrinsic_Tally_Surface needs to be added to the Transporter
	[and tested in tstTransporter and tstParticle_trans] before it can
	be fully integrated with imc clients.

	Multigroup random walk needs to be finished as well in
	Mat_State_Builder and Multigroup_Particle.

2003-06-04  Thomas M. Evans  <tme@lanl.gov>

	* imc: tagged as part of draco-3_0_0.  This version of imc should
	have complete, but unverified, random walk capability for gray
	problems. 

2003-03-14  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-3_3_0.  This update changes lots of stuff
	[although not complete until Random_Walk is finshed].  The list of
	changes are:
		
		1) got rid of scoping [see below]
		2) added Diffusion_Opacity
		3) changed interface of Mat_State_Builder
		4) Mat_State_Builder [Flat and CDI] can both build
                   Diffusion_Opacity objects in gray problems
		5) added some new tests [tstOpacity]; broke
		   tstMat_State_Builder into tstFlat_Mat_State_Builder
		   and tstCDI_Mat_State_Builder
		6) added Random_Walk class that does sampling, but not
		   much else yet

2003-02-13  Thomas M. Evans  <tme@lanl.gov>

	* DD_Source_Builder, Rep_Source_Builder, Gray_Particle,
	Multigroup_Particle: Removed Particle_Defs.h/Unset_Particle_Defs.h
	and Source_Builder_Defs.h/Unset_Source_Builder_Defs.h.  I have
	found that the standard does specify scoping of templated base
	class members in the derived class (C++ Standard 14.6.2-2,3,4).
	However, simply scoping causes a problem because gcc has trouble
	resolving operator().  No worries, the easy work-around is too use
	using decarations in the derived class definitions to introduce
	the base class names into the scope of the derived class (C++
	Standard 7.3.3-12,13,14).

2002-11-15  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-3_2_0.  Most changes were std compliancy
	issues like typename's and stuff.  However, we did add one thing
	to Source_Builder: it now checks when building the multigroup
	frequency sampling table for evol(cell) = 0.0.  This can happen if
	the opacity is zero in a cell.

2002-08-14  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-3_1_0.  Main changes were for the
	Compaq-6_5_0 compiler.

2002-08-12  Thomas M. Evans  <tme@lanl.gov>

	* Source_Builder_Defs.h, Unset_Source_Builder_Defs.h,
	Particle_Defs.h, Unset_Particle_Defs.h, DD_Source_Builder.hh,
	DD_Source_Builder.t.hh, Rep_Source_Builder.hh,
	Rep_Source_Builder.t.hh, Gray_Particle.hh, Gray_Particle.t.hh,
	Multigroup_Particle.hh, Multigroup_Particle.t.hh:  Added #define
	and #undef header files that are included at the beginning and end
	of each file to correct a Compaq CXX 6_5_0 bug.  These defs
	redefine the protected and public data in a templated base class
	to include the base class scoping in the derived class.  This
	works around CXX's name mangling problem.

	The #define's need to be #undef'd, especially at the end of
	headers, to avoid name collision.  Remember, #define's do not obey
	scoping rules; they will munge anything with the appropriate
	name. 

2002-05-09  Thomas M. Evans  <tme@lanl.gov>

	* imc: released imc-3_0_0.  Lots of changes:
		
		- Multigroup added.
		- new particle communication services added and moved to
		  mc 
		- compiler updates

2002-03-18  Todd J. Urbatsch  <tmonster@lanl.gov>

	* imc: surface source (ss) energy calculations now correctly
	evaluate the Planck integral at the ss temp instead of cell's
	material temp.  Source_Builder now passes ss_temp to Source's
	Freq_Sampling_Data struct so an ss particle's frequency can be
	sampled from a Planckian in Source.  We now allow zero
	temperatures and zero Planckian integrals.  Fixed off-by-one error
	in group index after sampling emission cdf.

2002-02-14  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to multigroup.  Added FT (Frequency Type) as a
	template parameter.  Specialized on Gray_Frequency or
	Mulitgroup_Frequency where needed using a partial template
	function specialization trick (Alexandrescu, 2001).  Broke
	Particle class into an inheritance hierarchy of
	Multigroup_Particle and Gray_Particle.

2002-01-16  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Frequency.hh: Replaced Frequency with Gray_Frequency and
	Multigroup_Frequency, types on which we will template.

2002-01-14  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Frequency.hh:  Added the Frequency class, which holds a
	gray/multigroup indicator and group structure.

2002-01-11  Thomas M. Evans  <tme@lanl.gov>

	* Particle_Buffer, Communicator, Comm_Builder: moved these classes
	to mc.  Also, updated Particle to work with the new versions of
	these classes.  The Particle_Buffer, etc classes are now totally
	distinct from Particle.  All a PT must have to use these classes
	are the following functions:
		
		PT(const vector<char> &);
		vector<char> pack();
		int get_cell();
		void set_cell();

	Additionally, the Particle must indicate that it is in a boundary
	cell by returning a negative index with get_cell() (to use the
	Communicator class, this is the same condition as before).

2001-12-18  Thomas M. Evans  <tme@lanl.gov>

	* imc: Released imc version 2_3_0.  This version includes the
	following changes since 2_2_0:

		- added Mat_State_Builder (see updates below)
		- updated with hybrid Particle (M. Buksas)
		- new testing infrastructure
		- removed configure script
		- moved Source_Init and Topology_Builder to milagro

2001-11-20  Thomas M. Evans  <tme@lanl.gov>

	* CDI_Mat_State_Builder, CDI_Data_Interface: added CDI version of
	Mat_State_Builder and CDI interface.

2001-11-15  Thomas M. Evans  <tme@lanl.gov>

	* Mat_State_Builder: Made new class hierarchy, Mat_State_Builder
	that replaces Opacity_Builder.  Also, split up Interface into
	three classes:

		Interface-common mat builder, source builder, etc)
		Flat_Data_Interface-flat data interface to
			Flat_Mat_State_Builder
		CDI_Data_Interface-uses CDI to get data

2001-07-30  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-2_2_0.  This includes M. Buksas' mods to
	Particle and Particle_Buffer that adds a Particle::Pack
	capability.  It also separates the implementation of Particle from
	Particle_Buffer.  T. Evans cleaned up the Particle class and
	Particle_Buffer class.  These included cosmetic as well as
	compiler (using typedef typename PT::Pack PT_Pack) constructs for
	gnu g++.  Made the particle descriptor always use an enumeration
	outside of the particle classes.

2001-05-10  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-2_1_0. This includes lots of small code
	cleanup.  Especially to Mat_State, Opacity, Opacity_Builder.

2000-12-14  Thomas M. Evans  <tme@lanl.gov>

	* imc: Updated to imc-2_0_0.  This update includes all of our
	major parallel redesign modifications.  It does not yet include
	threads. 

2000-08-24  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Source_Builder.t.hh, Source.t.hh: Added work-around capability
 	for the random number stream ID's to wrap seamlessly around 2e9.
  	In effect, we can run more than 2e9 particles while retaining
 	reproducibility, all at the cost of repeating rn_streams after 2e9
 	particles.  At the beginning of each cycle, the rn_stream is
 	modulo'd with 2e9.  When each source particle begins, its
 	rn_stream is modulo'd with 2e9.  Thus, rn_stream=2e9 becomes
 	rn_stream=0. When SPRNG is updated to allow for rn_stream>2e9, we
	can dump this work-around.  

2000-06-28  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Source_Builder.*, DD_Source_Builder.*, Rep_Source_Builder.*:
	Added capability to resurrect dead census particles, so energy is
	conserved (globally and spatially locally -- a first!) at the
	expense of some increase in variance.  Capability (function calls
	in build_Source) is commented out until full DD is working and
	passes all the (old) regression tests.

2000-06-19  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Source_Builder.*, DD_Source_Builder.*, Rep_Source_Builder.*:
	Added topology-dependent functions to recalculate the post-comb
	census energy-weights and a topology-independent function to reset 
	the ew's in the census.

2000-06-13  Thomas M. Evans  <tme@lanl.gov>

	* Comm_Builder.*:  Updated the Comm_Builder class to use
	rtt_mc::Topology to build instances of the Communicator class.
	This class is now ready for release for a full DD supported
	version of imc.

	* test/tstCommunicator.*: Added full testing for the Communicator
	and Comm_Builder classes.

2000-06-07  Todd J. Urbatsch  <tmonster@lanl.gov>

	* DD_Source_Builder.*: Added derived class for building the imc
 	source on a full domain decomposition topology.

2000-04-19  Thomas M. Evans  <tme@lanl.gov>

	* DD_Transporter.*: Full and General DD class to handle a single
	timestep of IMC F&C transport on domain decomposed parallel mesh
	topologies.

2000-04-18  Thomas M. Evans  <tme@lanl.gov>

	* Transporter.*, Rep_Transporter.*: Transporter class to handle a
	single timestep of IMC F&C transport.

	* imc: Updated to version imc-1_3_0.  This still does not have
	complete DD functionality.  Version 2_0_0 will include complete
	DD.  Version 1_3_0 has complete functionality for full
	replication.

2000-02-14  Thomas M. Evans  <tme@lanl.gov>

	* Source_Init.*, Interface.hh: updated these classes to reflect
	the new mesh builder model.  In this model the mesh builder reads
	its own mesh format file.  Thus, Source_Init is not required to
	calculate surface source cells; this is now taken care of by the
	mesh builder class.

	* test, IMC_Test.hh, OS_Input.in: updated tests to reflect the new
 	builder model.  Added a mesh format file for testing
	(OS_Input.in).  Also, updated IMC_Test.hh so that is now contains
	a parser (gives the interface the name of the mesh file) and an
	interface, which uses the mesh builder to get certain data (like
	the list of surface cells).

2000-01-19  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Rep_Source_Builder.t.hh: Corrected a long-time error: after
 	sampling the initial census, ecen(cell) should (and now does)
 	represent the energy of the actual particles.  (ecentot still
 	represents the deterministically calculated total census energy,
 	though.)  Thus, ecentot - global_ecen_loss = true ecentot.  This
 	change will need to be carried into DD_Source_Builder, etc.  The
 	old error was in the old Source_Init and old Parallel_Source_Init
 	(pre v2_0_0).

2000-01-11  Thomas M. Evans  <tme@lanl.gov>

	* Source_Init.*: removed the old Source_Init.  The new Source_Init 
	does pre-initialization source initialization.  This includes
	evaluating surface source cells and estimating source numbers as a 
	precursor to parallel partitioning.  The new Source_Init requires
	a full mesh.  At present it only calculates the surface source
	cells.  Source number calculations will not be necessary until we
	go to a general/DD topology.

1999-12-20  Thomas M. Evans  <tme@lanl.gov>

	* Mesh_Operations.*: added Mesh_Operations class.  This class is
	template on MT and provides specializations to different MTs for
	operations that perform highly mesh-centric operations on data.
	For example, we use this class to perform T4 slope sampling
	because each MT may do this sampling differently but it requires
	communication and temperature data, which are outside the pervue
	of the mesh, to do the sampling itself.  Essentially, this is a
	mesh association class for IMC operations that do highly mesh-like 
	things.

1999-11-15  Thomas M. Evans  <tme@lanl.gov>

	* Opacity_Builder.hh, Opacity_Builder.t.hh, Particle_Buffer.hh:
	first of many modifications that will result in full parallel
	sourcing and opacity reading.  These changes are heading towards
	release imc-2_0_0.  All of the imc tests should still pass at this 
	point.

1999-11-12  Todd J. Urbatsch  <tmonster@lanl.gov>

	* : Updated to imc-1_2_0. 

1999-11-10  Todd J. Urbatsch  <tmonster@lanl.gov>

	* Global_Tally.t.hh, Global_Tally.hh, Source_Init.t.hh,
	Source_Init.hh: 1) Corrected Initial Material Energy Edit 2) Added 
	material volume source -- time-explicit portion. 

1999-10-15  Thomas M. Evans  <tme@lanl.gov>

	* Parallel_Source_Init.hh, Parallel_Source_Init.t.hh,
	Source_Init.hh, Source_Init.t.hh:  Added expanded surface source
	capability.  Updated to imc-1_1_0.  

