#!/bin/sh

### Use the default queue for regressions (okay to include the head node):
#PBS -q default
### Job is not resumable:
#PBS -r n

### Request resources for the job:
###  - For regressions, requesting all of one node (4 processors per node).
###  - Using node group that only includes Infinitron nodes (where dev tools installed).
###  - Using node group that includes the head node (okay for regressions).
#PBS -l nodes=1:ppn=4:ibgroup1
#PBS -l walltime=1:00:00
#PBS -l mem=1000mb

### Export environment to the batch job
#PBS -V

### Email options 
###PBS -m e 
###PBS -M kgt@lanl.gov

### Put Errors and Output into a single file.
#PBS -j oe

### Job Name
#PBS -N draco_regress.qsub

###----------------------------------------------------------------------###
### Environment
###----------------------------------------------------------------------###

### Extra Variables by Torque
### PBS_O_HOST, PBS_O_QUEUE, PBS_O_WORKDIR, PBS_ENVIRONMENT, PBS_JOBID
### PBS_JOBNAME, PBS_NODEFILE, PBS_QUEUE


### export CXX=/usr/local/gcc440/bin/g++
### export CC=/usr/local/gcc440/bin/gcc
### export LD_LIBRARY_PATH=${MPI_DIR}/lib:${QT_DIR}/lib:${GCC_DIR}/lib64:${BOOST_ROOT}/lib:${XERCESC_DIR}/lib:${PATHF90_DIR}/lib/3.2
### export PATH=${MPI_DIR}/bin:${QT_DIR}/bin:${GCC_DIR}/bin:/usr/local/bin:/opt/bin:/bin:/usr/bin

# working directory
WDIR=/scratch/${USERNAME}/draco-regress/logs

# Allow RW access for user and group:
umask 0002


###----------------------------------------------------------------------###
### Commands start here
###----------------------------------------------------------------------###

# Release build

echo cd $WDIR
cd $WDIR
export work_dir=/scratch/${USERNAME}/draco-regress/draco/Release_gcc440
cmd="/usr/local/bin/ctest -VV -S /usr/projects/draco/regress/draco/regression/Draco_gcc440.cmake,Nightly"
echo $cmd
eval $cmd
cd ${work_dir}/build
make install
make autodoc

# Debug build with dynamic analysis

echo cd $WDIR
cd $WDIR
export work_dir=/scratch/${USERNAME}/draco-regress/draco/Debug_gcc440
cmd="/usr/local/bin/ctest -VV -S /global_scratch/regress/draco/regress/Draco_gcc440.cmake,Nightly,Debug"
echo $cmd
eval $cmd
cd ${work_dir}/build
make install

# Debug build with coverage

echo cd $WDIR
cd $WDIR
export work_dir=/scratch/${USERNAME}/draco-regress/draco/Coverage_gcc440
cmd="/usr/local/bin/ctest -VV -S /global_scratch/regress/draco/regress/Draco_gcc440.cmake,Nightly,Debug,Coverage"
echo $cmd
eval $cmd

# Done

