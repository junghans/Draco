## -*- Mode: sh -*-
#!/bin/bash2 
##---------------------------------------------------------------------------##
## Script to run regression tests for rtt
##
## Usage:
##    launch <regression test> <options for regression test>
## examples:
##    Run the Draco regression tests:
##    % launch draco
##
##    Run the Capsaicin regression tests.  Compile with STLPort.
##    % /home/regression/bin/launch capsaicin -s
##---------------------------------------------------------------------------##
## Time-stamp: <01/08/31 15:18:07 tme>
##---------------------------------------------------------------------------##

# Make the functions s_time() and s_interval() available to this script.
source /home/regress/draco/regression/timer_functions

##---------------------------------------------------------------------------##
## Check regression directories and make log files

# determine if this script is being run interactively or not.
interactive_job='no'
case ${-} in
*i*) interactive_job=yes ;;
esac

# One more chance
if test ${interactive_job} = 'no' && test -t 0; then
   interactive_job=yes
fi

# provide a start time for the script:
start_time=`s_time`

# determine hostname and system
hostname=`hostname`
uname=`uname -a`
user=`whoami`

# set top level build directory, if on hostname ios
if [ ${hostname} = "ios.lanl.gov" ]; then
    topblddir='/regress/'
else
    topblddir=' '
fi
 
# obtain name of package
PACKAGE=$1
shift

# Setup of the REGHOME variable
if test ${user} = regress; then
   # Are we on CCS-2 Linux or the ICN?
   if test -d /ccs/codes/radtran; then
      REGHOME="/home/regress"
   elif test -d /usr/projects/draco; then
      REGHOME="/usr/projects/draco/regress"
   else
      echo ">>> I don't know what system we are on.  I can't find /css/codes/radtran"
      echo ">>> or /usr/projects/draco.  This is a fatal error."
      exit 1
   fi
else
   # A user is running the script, not the regress account.
    REGHOME=`pwd`
    non_regress_run='yes'
fi

REGDIR="${REGHOME}/${PACKAGE}"

# change directory slashes to underscores
PACKAGE=`echo $PACKAGE | sed 's/\//\_/'`

# check the regression directory

if [ ! -d ${REGDIR} ]; then
    echo ">>> Regression directory ${REGDIR} does not exist! EXITING"
    exit 1 
fi

# check for the regression script

regression_script="${REGHOME}/bin/${PACKAGE}_regression"
if [ ! -f $regression_script ]; then
    echo ">>> Regression script ${PACKAGE}_regression does not exist at ${REGHOME}/bin/."
    echo ">>> EXITING"
    exit 1
fi

# make log file

# get date
date=`date +%m%d%y`

# check log directory
if [ ! -d ${REGDIR}/logs ]; then
    echo ">>> Logs directory ${REGDIR}/logs does not exist! EXITING"
    exit 1
fi

# make draco log file
LOG="${REGDIR}/logs/${PACKAGE}_${date}"

# test log file for write access.  Default to $cwd for log file if
# specified location cannot be written to.
if [ ! -w $REGDIR/logs ]; then
   echo " "
   echo ">>> Cannot create the logfile $LOG."
   LOG="`pwd`/${PACKAGE}_${date}"
   if [ ! -w `pwd` ]; then
      echo ">>> Cannot write to alternate logfile $LOG."
      echo ">>> Aborting script"
      exit 1
   fi
   echo ">>> Output will be written to $LOG"
fi

# if file LOG exists, add a suffix to the logfile name
suffixvals='a b c d e f g h i j k l m n o p q r s t u v w x y z'
if test -f $LOG; then
    if test ${interactive_job} = yes; then
       echo ">>> The logfile $LOG already exists.  "
    fi
    for suffix in ${suffixvals}; do
       if ! test -f ${LOG}-${suffix}; then
 	  LOG=${LOG}-${suffix}
          break
       fi
    done
    if test ${interactive_job} = yes; then
       echo ">>> Added suffix ${suffix} to filename."
       echo ">>> Output will be written to $LOG"
    fi
fi

# direct output to log file
exec 1>$LOG
exec 2>&1

##---------------------------------------------------------------------------##
## launch regression script

echo ">>>" 
echo ">>> Running $regression_script script"
echo ">>>"
echo ">>> PACKAGE           : ${PACKAGE}"
echo ">>> HOSTNAME          : $hostname"
echo ">>> REGRESSION SCRIPT : $regression_script"
echo ">>> OPTIONAL ARGS     : $*"
echo ">>> REGRESSION LOG    : $LOG"
echo ">>> DATE              : $date"
echo ">>>"
echo ">>> Start Time        : ${start_time}"
echo ""
case ${PACKAGE} in
capsaicin)
   /bin/nice -n 0 $regression_script $* ;;
*)
   $regression_script $* ;;
esac
stop_time=`s_time`
elapsed_time=`s_interval ${start_time} ${stop_time}`
echo ">>> Stop Time         : ${stop_time}"
echo ">>> Elapsed Time      : ${elapsed_time}"
echo ">>>"
echo ""
echo ">>>"
echo ">>> Done running $regression_script script"
echo ">>>"

##---------------------------------------------------------------------------##
## Who do we send the report to?

mailto="mailx -s ${LOG} "
case ${PACKAGE} in
draco) 
   mailto="${mailto} draco@lanl.gov" ;;
jayenne_clubimc | jayenne_wedgehog | jayenne_milagro | jayenne_unclemcflux)
   mailto="${mailto} jayenne@lanl.gov" ;;
capsaicin)
   mailto="${mailto} capsaicin@lanl.gov" ;;
pika)
   mailto="${mailto} marmot-regression@sf4.lanl.gov" ;;
*)
   mailto="${mailto} jhchang@lanl.gov tmonster@lanl.gov" ;;
esac

echo " "
echo ">>>"
echo ">>> Preparing/Emailing final report"
echo ">>>"
echo " "

regression_cmd="python /home/regress/draco/tools/regression_filter.py"
if test ${interactive_job} = yes; then
   echo ">>> Running the command: ${regression_cmd}<${LOG}"
   ${regression_cmd}<${LOG}
else
   echo ">>> Running the command: ${regression_cmd}<${LOG} | ${mailto}"
   ${regression_cmd}<${LOG} | ${mailto}
fi

echo " "
echo ">>>"
echo ">>> End of launch script."
echo ">>>"

##---------------------------------------------------------------------------##
## end launch
##---------------------------------------------------------------------------##

