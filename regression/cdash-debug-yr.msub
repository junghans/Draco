#!/bin/bash

#MSUB -V
#MSUB -l walltime=03:00:00
#MSUB -l nodes=1:ppn=8
#MSUB -j oe
#MSUB -o /scratch3/kellyt/cdash-debug/debug-yr.log

#----------------------------------------------------------------------#
# The script starts here
#----------------------------------------------------------------------#

if test -f /scratch3/kellyt/cdash-debug/debug-yr.log; then
  rm /scratch3/kellyt/cdash-debug/debug-yr.log
fi

if test -f /etc/bashrc; then
  source /etc/bashrc
fi

export VENDOR_DIR=/usr/projects/draco/vendors

# Modules
# Picks up environment from .cshrc

# Use this module command when running bash.
function module() 
{
   eval `/usr/bin/modulecmd bash $*`; 
}
# Use modules found in the draco directory
# module use $DRACO_MODULE_DIR/yr-fe
# Clear any tcsh loaded modules as these are invalid when staring a new shell. 
module purge &> /dev/null

# Load a default set of modules.
# export IGNOREMODULECONFLICTS=1

module load modules friendly-testing hpc-tools python graphics
module load pgi/9.0-3 openmpi-pgi/1.4.3 grace totalview
module load gandolf gsl/1.14 grace-draco lapack BLACS SCALAPACK 
module load trilinos SuperLU_DIST hypre ParMetis ndi emacs cmake
module list

# Run the ctest (regression) script.  This script will take the following build steps: 
# 1. cvs update
# 2. run cmake to build Makefiles
# 3. run make to build libraries and tests
# 4. Run the unit tests
# 5. Post the results to coder.lanl.gov/cdash
#
# Options are:
# Regression type: Experimental (default), Nightly, Continuous
# Build type     : Release, Debug

dashboard_type=Nightly
base_dir=/scratch3/kellyt/cdash-debug/yr
build_type=Debug
comp=`basename $CXX`

#----------------------------------------------------------------------#
# Draco
#----------------------------------------------------------------------#

script_dir=${HOME}/draco/regression
subproj=draco

export work_dir=${base_dir}/${subproj}/${dashboard_type}_${comp}/${build_type}
echo "work_dir = ${work_dir}"
if ! test -d ${work_dir}; then
   /usr/bin/install -d ${work_dir}/source
   /usr/bin/install -d ${work_dir}/build
   /usr/bin/install -d ${work_dir}/target
else
   # keep the purger from removing the source files.
   find ${work_dir}/source/ -exec touch {} \;
fi

ctest -VV -S ${script_dir}/Draco_gcc.cmake,${dashboard_type},${build_type}

#----------------------------------------------------------------------#
# ClubIMC
#----------------------------------------------------------------------#

script_dir=${HOME}/jayenne/regression
subproj=clubimc
export work_dir=${base_dir}/${subproj}/${dashboard_type}_${comp}/${build_type}
echo "work_dir = ${work_dir}"
if ! test -d ${work_dir}; then
   /usr/bin/install -d ${work_dir}/source
   /usr/bin/install -d ${work_dir}/build
   /usr/bin/install -d ${work_dir}/target
else
   # keep the purger from removing the source files.
   find ${work_dir}/source/ -exec touch {} \;
fi

ctest -VV -S ${script_dir}/ClubIMC_gcc.cmake,${dashboard_type},${build_type}

#----------------------------------------------------------------------#
# Wedgehog
#----------------------------------------------------------------------#

script_dir=${HOME}/jayenne/regression
subproj=wedgehog
export work_dir=${base_dir}/${subproj}/${dashboard_type}_${comp}/${build_type}
echo "work_dir = ${work_dir}"
if ! test -d ${work_dir}; then
   /usr/bin/install -d ${work_dir}/source
   /usr/bin/install -d ${work_dir}/build
   /usr/bin/install -d ${work_dir}/target
else
   # keep the purger from removing the source files.
   find ${work_dir}/source/ -exec touch {} \;
fi

ctest -VV -S ${script_dir}/Wedgehog_Linux64.cmake,${dashboard_type},${build_type}

#----------------------------------------------------------------------#
# Milagro
#----------------------------------------------------------------------#

script_dir=${HOME}/jayenne/regression
subproj=milagro
export work_dir=${base_dir}/${subproj}/${dashboard_type}_${comp}/${build_type}
echo "work_dir = ${work_dir}"
if ! test -d ${work_dir}; then
   /usr/bin/install -d ${work_dir}/source
   /usr/bin/install -d ${work_dir}/build
   /usr/bin/install -d ${work_dir}/target
else
   # keep the purger from removing the source files.
   find ${work_dir}/source/ -exec touch {} \;
fi

ctest -VV -S ${script_dir}/Milagro_Linux64.cmake,${dashboard_type},${build_type}

