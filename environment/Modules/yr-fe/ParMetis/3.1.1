#%Module1.0#####################################################################
##
## modules modulefile
##
## modulefiles/modules.  Generated from modules.in by configure.
##

# global control file
if { [file exists $env(MODULESHOME)/etc/control] } {
   source $env(MODULESHOME)/etc/control;
}

# local variables
set version     3.1.1
set prefix      /usr/projects/draco/vendors/ParMetis-$version/RR-openmpi133-pgi903-gcc433
set libdir      $prefix/lib
set incdir      $prefix/include
set incdir2     $prefix/source/METISLib

# module whatis
module-whatis   "Parmetis";

# module help
proc ModulesHelp { } {
   global version prefix bindir;

   puts stderr "\tParmetis\n";
   puts stderr "\tPARMETIS_LIB_DIR\t= $libdir";
   puts stderr "\tPARMETIS_INC_DIR\t= $incdir";
   puts stderr "\tMETIS_LIB_DIR\t= $libdir";
   puts stderr "\tMETIS_INC_DIR\t= $incdir2";
}

if { ![file exists $prefix] } {
   puts stderr "\n[module-info name]: $prefix: No such file or directory.\n";
   break;
   exit 1;
}

if { [module-info mode load] } {
   catch {set ignorant $env(IGNOREMODULECONFLICTS)};
   if { ![info exists ignorant] } {
      catch {set metis_lib_dir $env(_MODULES_METIS_LIB_DIR)};
      if { [info exists metis_lib_dir] && ($metis_lib_dir != "[module-info name]") } {
         puts stderr "ERROR: Module '[module-info name]' conflicts with a currently loaded module '$metis_lib_dir'";
         break;
         exit 1;
      }

      catch {set metis_inc_dir $env(_MODULES_METIS_INC_DIR)};
      if { [info exists metis_inc_dir] && ($metis_inc_dir != "[module-info name]") } {
         puts stderr "ERROR: Module '[module-info name]' conflicts with a currently loaded module '$metis_inc_dir'";
         break;
         exit 1;
      }
   }
}

setenv          _MODULES_METIS_LIB_DIR     [module-info name];
setenv          _MODULES_METIS_INC_DIR     [module-info name];

setenv PARMETIS_LIB_DIR $libdir
setenv PARMETIS_INC_DIR $incdir
setenv METIS_LIB_DIR $libdir
setenv METIS_INC_DIR $incdir2
