#%Module1.0#####################################################################
##
## modules modulefile
##
## modulefiles/modules.  Generated from modules.in by configure.
##

# global control file
if { [file exists $env(MODULESHOME)/etc/control] } {
   source $env(MODULESHOME)/etc/control;
}

# local variables
set version     9.0-3;
set arch        linux86-64;
set prefix      /ccs/opt/x86_64/pgi_${version}/$arch/$version;
set bindir      $prefix/bin;
set libdir      $prefix/lib;
set mandir      $prefix/man;
set licfile     /ccs/opt/x86_64/pgi_${version}/license.dat
set desc        "PGI C/C++/Fortran $version"

# module whatis
module-whatis   ${desc};

# module help
proc ModulesHelp { } {
   global version prefix bindir;

   puts stderr "\t${desc}\n";
   puts stderr "\tMakefile variables:";
   puts stderr "\t\tPGI\t= $prefix";
   puts stderr "\t\tCC\t= $bindir/pgcc";
   puts stderr "\t\tCXX\t= $bindir/pgCC";
   puts stderr "\t\tFC\t= $bindir/pgf95";
   puts stderr "\t\tF77\t= $bindir/pgf77";
   puts stderr "\t\tF90\t= $bindir/pgf90";
   puts stderr "\t\tF95\t= $bindir/pgf95";
}

if { ![file exists $prefix] } {
   puts stderr "\n[module-info name]: $prefix: No such file or directory.\n";
   break;
   exit 1;
}

if { [module-info mode load] } {
   catch {set ignorant $env(IGNOREMODULECONFLICTS)};
   if { ![info exists ignorant] } {
      catch {set cc $env(_MODULES_CC)};
      if { [info exists cc] && ($cc != "[module-info name]") } {
         puts stderr "ERROR: Module '[module-info name]' conflicts with a currently loaded module '$cc'";
         break;
         exit 1;
      }

      catch {set fc $env(_MODULES_FC)};
      if { [info exists fc] && ($fc != "[module-info name]") } {
         puts stderr "ERROR: Module '[module-info name]' conflicts with a currently loaded module '$fc'";
         break;
         exit 1;
      }
   }
}

setenv          PGI             $prefix;
setenv          LM_LICENSE_FILE $licfile
setenv          _MODULES_CC     [module-info name];
setenv          _MODULES_FC     [module-info name];

setenv          CC              $bindir/pgcc;
setenv          CXX             $bindir/pgCC;
setenv          F77             $bindir/pgf77;
setenv          F90             $bindir/pgf90;
setenv          FC              $bindir/pgf95;
setenv          F95             $bindir/pgf95;

# Converting clients to embedded info in module files, rather
# than supporting client license files in the installation directory(s). 
# prepend-path    LM_LICENSE_FILE 51012@yell-lice.lanl.gov;
prepend-path    LD_LIBRARY_PATH $libdir;
prepend-path    PATH            $bindir;

catch {set cur_manpath $env(MANPATH)};
if { ![info exists cur_manpath] || ($cur_manpath == "") } {
   setenv MANPATH :;
}

prepend-path    MANPATH         $mandir;
