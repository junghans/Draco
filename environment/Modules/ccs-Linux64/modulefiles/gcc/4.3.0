#%Module1.0#####################################################################
##
## modules modulefile
##
## modulefiles/modules.  Generated from modules.in by configure.
##

# global control file
if { [file exists $env(MODULESHOME)/etc/control] } {
   source $env(MODULESHOME)/etc/control;
}

# local variables
set version     4.3.0;
set arch        x86_64;
set prefix      /ccs/opt/$arch/gcc-$version;
set bindir      $prefix/bin;
set libdir      $prefix/lib64;
set mandir      $prefix/man;

# module whatis
module-whatis   "GNU C/C++/Fortran $version";

# module help
proc ModulesHelp { } {
   global version prefix bindir;

   puts stderr "\tGNU C/C++/Fortran $version\n";
   puts stderr "\tMakefile variables:";
   puts stderr "\t\tCC\t= $bindir/gcc";
   puts stderr "\t\tCXX\t= $bindir/g++";
   puts stderr "\t\tFC\t= $bindir/gfortran";
   puts stderr "\t\tF77\t= $bindir/gfortran";
   puts stderr "\t\tF90\t= $bindir/gfortran";
   puts stderr "\t\tF95\t= $bindir/gfortran";
}

if { ![file exists $prefix] } {
   puts stderr "\n[module-info name]: $prefix: No such file or directory.\n";
   break;
   exit 1;
}

if { [module-info mode load] } {
   catch {set ignorant $env(IGNOREMODULECONFLICTS)};
   if { ![info exists ignorant] } {
      catch {set cc $env(_MODULES_CC)};
      if { [info exists cc] && ($cc != "[module-info name]") } {
         puts stderr "ERROR: Module '[module-info name]' conflicts with a currently loaded module '$cc'";
         break;
         exit 1;
      }

      catch {set fc $env(_MODULES_FC)};
      if { [info exists fc] && ($fc != "[module-info name]") } {
         puts stderr "ERROR: Module '[module-info name]' conflicts with a currently loaded module '$fc'";
         break;
         exit 1;
      }
   }
}

setenv          _MODULES_CC     [module-info name];
setenv          _MODULES_FC     [module-info name];

setenv          CC              $bindir/gcc;
setenv          CXX             $bindir/g++;
setenv          F77             $bindir/gfortran;
setenv          F90             $bindir/gfortran;
setenv          FC              $bindir/gfortran;
setenv          F95             $bindir/gfortran;

# Converting clients to embedded info in module files, rather
# than supporting client license files in the installation directory(s). 
prepend-path    LD_LIBRARY_PATH $libdir;
prepend-path    PATH            $bindir;

catch {set cur_manpath $env(MANPATH)};
if { ![info exists cur_manpath] || ($cur_manpath == "") } {
   setenv MANPATH :;
}

prepend-path    MANPATH         $mandir;
