#!/usr/bin/env python
##---------------------------------------------------------------------------##
## Depends
##
## Michael W. Buksas
##
## $Id$
##---------------------------------------------------------------------------##

"""Depends

Usage: depends [-d dir]

Depends searches for component dependencies in C/C++ files in the
current directory, or the directory specified by -d and, if it
exists, a test sub-directory.

Without arguments, 'depends' will list all of the component
directories that files in the current directory depend on. It then
lists all components that the testing sub-directory depends on
which the main directory does not.

"""
##---------------------------------------------------------------------------##
## MAIN PROGRAM
##---------------------------------------------------------------------------##

if __name__=='__main__':

    import os, os.path, sys, getopt
    import Dependencies, Jayenne

    try:
        options, component_names = getopt.getopt(sys.argv[1:], 'd:h', ['help'])
    except getopt.GetoptError:
        sys.exit('ERROR: bad option or missing argument')

    options_dict = dict(options)

    # Default values:
    directory = os.getcwd()

    if '-h' in options_dict or '--help' in options_dict:
        print __doc__
        sys.exit()

    if '-d' in options_dict:
        directory = os.path.abspath(options_dict['-d'])
        if not os.path.exists(directory):
            sys.exit("ERROR: Directory %s does not exist." % directory);
        
    print "Working in package directory  : %s" % (directory)
    print "Package name is               : %s\n" % (os.path.basename(directory))
    
    deps = Dependencies.directory_dependencies(directory)

    print "Referenced components:"
    for comp in deps: print "  %s" % comp
    print

    test_directory = os.path.join(directory,'test')
    if os.path.exists(test_directory):
        print "Test only components:"
        test_deps = Dependencies.directory_dependencies(test_directory)

        for comp in test_deps: 
            if comp not in deps: print "  %s" % comp
        print

    

        
