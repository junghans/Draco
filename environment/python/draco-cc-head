#! /usr/bin/env python

################################################################################
# Imported modules
################################################################################
import os
import sys
import re
import commands
import datetime

cwd = os.getcwd()
subdir = re.sub('^.*[\/]', '', cwd)

################################################################################
# request name
################################################################################
output = raw_input('C++ Header Name: ')
classname = output
if(re.match('\.hh', output) == None):
	hhfile = output + '.hh'
	ihhfile = output + '.i.hh'

default = 'y'
templated = raw_input('Templated Class? [Y/n] ' %
   {'default' : default})
if templated in (''): templated = default

if default in ('y'):
    default = 'typename'
    typename = raw_input('Type [TYPENAME/class] ' %
        {'default' : default})
    if typename in (''): typename = default

    default = 'T'
    parameter = raw_input('Parameter [T] ' %
        {'default' : default})
    if parameter in (''): parameter = default

################################################################################
# request package path
################################################################################
default = subdir
pkgpath = raw_input('Package path [%(default)s]: ' %
	{'default' : default})
if pkgpath in (''): pkgpath = default

################################################################################
# request namespace
################################################################################
default = 'rtt_' + pkgpath
namespace = raw_input('Namespace for this package [%(default)s]: ' %
	{'default' : default})
if namespace in (''): namespace = default

################################################################################
# classname.hh file
################################################################################
if templated in ('y'):
   os.system('parse-draco-template -n %(ns)s -p %(pkg)s -t %(pkg)s \
      -s %(pkg)s -c %(class)s -l %(tn)s -f %(pm)s \
      templatet.hh %(hhfile)s' %
      {'ns' : namespace, 'pkg' : pkgpath, 'hhfile' : hhfile,
      'class' : classname, 'tn' : typename, 'pm' : parameter})
else:
   os.system('parse-draco-template -n %(ns)s -p %(pkg)s -t %(pkg)s \
      -s %(pkg)s -c %(class)s template.hh %(hhfile)s' %
      {'ns' : namespace, 'pkg' : pkgpath, 'hhfile' : hhfile,
      'class' : classname})

################################################################################
# classname.i.hh file
################################################################################
if templated in ('y'):
   os.system('parse-draco-template -n %(ns)s -p %(pkg)s -t %(pkg)s \
      -s %(pkg)s -c %(class)s -l %(tn)s -f %(param)s \
      templatet.i.hh %(ihhfile)s' %
      {'ns' : namespace, 'pkg' : pkgpath, 'ihhfile' : ihhfile,
      'class' : classname, 'tn' : typename, 'param' : parameter})
else:
   os.system('parse-draco-template -n %(ns)s -p %(pkg)s -t %(pkg)s \
      -s %(pkg)s -c %(class)s template.i.hh %(ihhfile)s' %
      {'ns' : namespace, 'pkg' : pkgpath, 'ihhfile' : ihhfile,
      'class' : classname})
