#! /usr/local/bin/perl

# This script modifies the pslatex mode output of transfig
# so that it is simultaneously compatible with latex and pdflatex
# Brendt Wohlberg
# Most recent modification: 21 February 2003

use Getopt::Long;

# Parse command line options
GetOptions("e+" => \$epsfig,
	   "x+" => \$extension,
	   "c+" => \$colour) or
  die 'usage: figfix [ -e ] [ -x ] [ -c ]\n';

# Ensure that at least one flag has been specified
die 'figfix: Must specify at least one of -e, -x or -c\n'
  if ($epsfig eq '' && $extension eq '' && $colour eq '');


while ($line = <STDIN>) {
# Replace \epsfig with \includegraphics
  if ($epsfig ne '' && $line =~ /\\epsfig\{file\=.+\.pstex\}/) {
    $line =~ s/\\epsfig\{file\=(.+)\.pstex/\\includegraphics\{$1/;
  }
# Remove .pstex extension from included file name
 if ($extension ne '' && $line =~ /\\includegraphics\{.*\.pstex\}/) {
    $line =~ s/\\includegraphics\{(.*)\.pstex/\\includegraphics\{$1/;
  }
# Replace ps special colour handling with standard colour package method
  if ($colour ne '' &&
      $line =~ /\\special\{ps\:\sgsave\s([\d|\s]+)setrgbcolor\}(.*)\\special\{ps\:\sgrestore\}/) {
    $pre = $`;
    $colour = $1;
    $text = $2;
    $post = $';
    if ($colour =~ /([\d\.]+)\s([\d\.]+)\s([\d\.]+)/) {
      $colour = "$1, $2, $3";
      $line = "$pre\{\\color[rgb]{$colour}$text\}$post";
    }
  }
  print STDOUT $line;
}
