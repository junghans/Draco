		       Draco 99 Project Charter

Mission

Traditionally XTM transport packages have been developed in "one-off"
fashion: each package was designed, coded, tested, debugged and
documented completely from scratch.  As a result each package required
large investments of time and effort to achieve high quality, or
skimped on quality (testing and debugging) to meet time and effort
constraints.

Now the demands of our customers require us to deliver more packages
with more capabilities and of higher quality more quickly than ever
before.  These demands cannot be met using the traditional development
model.

In order to meet these needs the Draco project is designed to provide
a managed set of common features which can be used in various radiation
transport packages.  These common features include:

	- Reusable components
	- Architecture
	- Test cases and testing framework
	- Development infrastructure
	- Documentation

Goal

To provide support features for existing (Solon, Milagro) and new
(Zathras, Pericles) Draco customer FY99 goals.

Objectives

To provide controller, testing, profiling, and debugging support
for Solon

To provide controller, testing, profiling, debugging, and
communications support for Milagro
 
To provide unstructured mesh, testing, profiling, debugging, and
communications support for Pericles

To provide interlanguage, controller, testing, profiling and debugging
support for Zathras

Scope

Draco is not a radiation transport package; it will not replace any
existing transport package.  Draco will provide architecture and reusable
components for Solon, Milagro, and Pericles.  Draco will provide testing
support for Zathras.  Draco will not reinvent existing tools; whenever
possible it will interface to existing communications (POOMA, UPS),
scripting (PYTHON), grid generation (X3D, Gridgen, ICEM), visualizaton
(GMV, Ensight) tools.
