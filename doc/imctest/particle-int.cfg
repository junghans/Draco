%%
%% Creator: c++2latex -n -f -o particle-int.cfg particle-int.tex
%% Date:    Tue Apr 28 11:16:54 1998
%%
\expandafter\ifx\csname indentation\endcsname\relax
\newlength{\indentation}\fi
\setlength{\indentation}{0.5em}
\begin{tabbing}
\mbox{}\\
{\bf public\/}:\mbox{}\\
{\em \hspace*{2\indentation}//\hspace*{1\indentation}Particle\hspace*{1\indentation}constructor}\mbox{}\\
\hspace*{4\indentation}{\bf inline\/} Particle({\bf const\/} MT \&, {\bf long\/}, {\bf double\/});\mbox{}\\
\mbox{}\\
{\em \hspace*{2\indentation}//\hspace*{1\indentation}null\hspace*{1\indentation}constructor\hspace*{1\indentation}required\hspace*{1\indentation}as\hspace*{1\indentation}kluge\hspace*{1\indentation}for\hspace*{1\indentation}the\hspace*{1\indentation}STL\hspace*{1\indentation}containers\hspace*{1\indentation}which\hspace*{1\indentation}need\hspace*{1\indentation}a}\mbox{}\\
{\em \hspace*{2\indentation}//\hspace*{1\indentation}default\hspace*{1\indentation}constructor,\hspace*{1\indentation}this\hspace*{1\indentation}calls\hspace*{1\indentation}an\hspace*{1\indentation}assert(0)\hspace*{1\indentation}so\hspace*{1\indentation}you\hspace*{1\indentation}can't\hspace*{1\indentation}use\hspace*{1\indentation}it}\mbox{}\\
\hspace*{4\indentation}{\bf inline\/} Particle();\mbox{}\\
\mbox{}\\
{\em \hspace*{2\indentation}//\hspace*{1\indentation}transport\hspace*{1\indentation}solvers}\mbox{}\\
\mbox{}\\
{\em \hspace*{2\indentation}//\hspace*{1\indentation}source\hspace*{1\indentation}is\hspace*{1\indentation}temporary\hspace*{1\indentation}until\hspace*{1\indentation}the\hspace*{1\indentation}real\hspace*{1\indentation}source\hspace*{1\indentation}object\hspace*{1\indentation}arrives\hspace*{1\indentation}}\mbox{}\\
\hspace*{4\indentation}{\bf void\/} source(vector$<${\bf double\/}$>$ \&, vector$<${\bf double\/}$>$ \&, {\bf const\/} MT \&);\mbox{}\\
\mbox{}\\
{\em \hspace*{2\indentation}//\hspace*{1\indentation}IMC\hspace*{1\indentation}transport\hspace*{1\indentation}step}\mbox{}\\
\hspace*{4\indentation}{\bf void\/} transport({\bf const\/} MT \&, {\bf const\/} Opacity$<$MT$>$ \&, Tally$<$MT$>$ \&,\mbox{}\\
\hspace*{19\indentation}SP$<$Diagnostic$>$ = SP$<$Diagnostic$>$());\mbox{}\\
\mbox{}\\
{\em \hspace*{2\indentation}//\hspace*{1\indentation}other\hspace*{1\indentation}services}\mbox{}\\
\hspace*{4\indentation}{\bf bool\/} status() {\bf const\/} \{ {\bf return\/} alive; \}\mbox{}\\
\mbox{}\\
{\em \hspace*{2\indentation}//\hspace*{1\indentation}public\hspace*{1\indentation}diagnostic\hspace*{1\indentation}services}\mbox{}\\
\hspace*{4\indentation}{\bf void\/} print(ostream \&) {\bf const\/};\mbox{}\\
\mbox{}\\
\end{tabbing}
