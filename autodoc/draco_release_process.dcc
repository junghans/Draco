//---------------------------------------------------------------------------//
// draco_release_process.dcc
// $Id$
//---------------------------------------------------------------------------//

/*!
\page draco_release_process Draco Release Requirements and Procedure
\author Kelly Thompson, Gabe Rockefeller, Jae Chang

\section draco_release_abstract Abstract

The libraries provided by the Draco project are used by multiple projects
including Capsaicin and Jayenne (milagro, wedgehog, serrano, ancho, etc.)
When installed on the ICN machines, client projects must link against the
official Draco installations provided at
<tt>/usr/projects/draco/draco-\#_\#_\#</tt>. 

The purpose of this document is to outline the release policy and procedures
for Draco products.  The Draco team requires that regular releases be made for
code libraries and executables.  These releases will be given a revision
number.  Since we use CVS, these release numbers must also coincide with a CVS
tag.

<!-- ---------------------------------------------------------------------- -->
    
\section release_toc Table of Contents

- \ref release_policy

- \ref draco_release_prepare
- \ref draco_release_target_platforms
- \ref draco_release_id_last_rel 
- \ref draco_release_list_changes
- \ref draco_release_create_changelog
- \ref draco_release_update_tags 
- \ref draco_release_check_code
- \ref draco_release_tag_cvs
- \ref draco_release_generate_release
- \ref draco_release_notification

<!-- ---------------------------------------------------------------------- -->
<!-- POLICY -->
<!-- ---------------------------------------------------------------------- -->
<hr>
\section release_policy Release Policy

The Draco release policy is a set of general requirements that control the
proccess of software release in the Draco code system.

<ol>

<li>The general release policy in Draco requires that all components be
released with a common Draco version/tag number.  This tag should take the
form <tt>draco-\#_\#_\#</tt> for packages.  This release number should be
present in the top level CMakelists.txt file.  This version number will be
automatically written to the ds++/Release.hh file and all other Draco
components will point to this file.</li>

<li>Before a release may be done the following requirements must all
be met:
   <ul>

      <li>Each component must pass its respective suite of regression
      tests on all currently supported platforms. (As of August 2011
      we support CCS-2 64-bit Linux, YellowRail/RedTail,
      Turing/Hurricane/Typhoon, Cielito/Cielo and rr-dev/RoadRunner.)</li> 

      <li>Documentation must be fully up-to-date.</li>

      <li>Coverage must be checked to ensure that at least 90% of
      non-diagnostic statements are exercised by the unit tests.</li>

      <li>Exceptions to the general release policy must be discussed,
          agreed to and fully documented.</li>
   </ul>
</li>

<li>Files under the Draco CVS repository should only have
draco CVS tags (no 3rd party tags in our repository).</li>

<li>The number scheme for release tags is major_minor_bugfix.  The
first digit only changes for a major release.  The second digit
changes for minor changes in the code and the last digit is reserved
for specific bug fixes.  
   <ul>
      <li>Most of our releases will have a zero as the
          last digit.</li>
      <li>When moving to a new major release the minor and bugfix
          indices should be reset to zero.</li>
   </ul>

<li>The build must be reproducible:
  <ul>
    <li>All vendors used must be version or tag releases (see \ref vendors).</li>
  </ul>
</li>

<li>Must provide a list of SF artifacts that are associated with this
release (tasks and trackers).  This is done in the ChangeLog and for major
releases in the Release memo.

</ol>

<!-- ---------------------------------------------------------------------- -->
<!-- PROCEDURE -->
<!-- ---------------------------------------------------------------------- -->
<hr>
\section draco_release_prepare Prerequisites for release

The following checklist provides the basic procedure that should be
followed when making a formal release of the Capsaicin libraries and
binaries. 

- Determine what capabilities/bugs must be implemented/fixed for release.
  This is often a list generated at a team meeting or through email
  discussions. The <a
  href="http://tf.lanl.gov/sf/projects/draco">SourceForge</a> <em>version</em>
  key on tracker artifacts can also be used to help with this item.  This
  information should be recorded in the top level \c ChangeLog.  The format
  for your release notes should be similar to previous release notes in the \c
  ChangeLog.

- Because several projects link against Draco, the release should be
  coordinated with all parties involved.  At a minimum, the Capsaicin and
  Jayenne teams should be involved with planning the release.

- Ensure appropriate unit testing for each package.  All tests must report
  pass when \c ctest is executed from the Draco build directory for each build
  type (Debug with full DBC, Release w/o DBC, etc.). The code coverage reports
  found on <a href="coder.lanl.gov/cdash>CDash</a> may also be used to
  evaluate if additional tests are needed.

- Ensure that the software will compile and all tests will pass for target
  platforms and build types. See \ref draco_how_to_build and \ref
  draco_release_target_platforms. 

- Propose a release date.  This proposal should be send to the
  <a href="mailto:draco@lanl.gov">Draco mailing list</a>.

- Vendors: Note that you may also need to build and install vendor libraries
  at \c /usr/projects/draco/vendors (i.e.: atlas, gsl, etc.).  See \ref
  vendors for more details.

Now you are sure you have a head version that you are happy to tag and
release. 

<!-- ---------------------------------------------------------------------- -->

\section draco_release_target_platforms Target Platforms

- Draco is used by the Eularian Applications Project, EAP, and the target
  platforms for each release will mirror EAP's targets.

- The best way to determine the target platforms and the compiler and vendor
  versions for each platform is to examine Creston's configuration file \c
  /usr/projects/crestone/dotfiles/Cshrc.

- Currently the following machines are targets:

\code
Machine                Compilers        Vendors
----------------       ---------------  -----------
TLCC hurricane/turing  Intel 10.0.023   OpenMPI-1.4.3
Roadrunner             GCC 4.3.0        OpenMPI-1.4.3
Redtail/YellowRail     PGI 9.0-3        OpenMPI-1.4.3
Dawn                   --               --
Ceilo/Ceilito          PGI 10.9.0       MPICH2-5.2.0.7
\endcode

<!-- ---------------------------------------------------------------------- -->

\section draco_release_id_last_rel Identify the last release

Determine the last release number

\code
   % cd draco
   % cvs log CMakeLists.txt | more
 
   RCS file: /ccs/codes/radtran/cvsroot/draco/CMakeLists.txt,v
   Working file: CMakeLists.txt
   head: 1.5
   symbolic names:
        draco-5_20_0: 1.3  <-- This is what you are looking for.
\endcode

<!-- ---------------------------------------------------------------------- -->

\section draco_release_list_changes Identify what has changed

There are several commands that can be used to build a description of code
changes.

- List files that have been modified:
\code
   % cvs -q diff -N -c -r draco-5_20_0 &> changes_since_#_#_#.log
\endcode

- List the cvs log comments for files that have been changed:
\code
   % cat changes_since_5_20_0.log | grep "Index:" &> files_changed_since_5_20_0.log  
# Number of files changed is approximately:
   % cat files_changed_since_5_20_0.log | sort -u | wc -l
   \endcode
or
\code
   % cvs -q log -NS -d"2010-01-29<now" > comments_since_5_20_0.log
# number of commits is approximately:
   % cat comments_since_5_20_0.log | grep "date: " | sort -u | wc -l
\endcode
- Dates are samples.  You will need to use the actual date range for your query.
- Summarize changes in the Draco ChangeLog and in the ReleaseNote.

<!-- ---------------------------------------------------------------------- -->

\section draco_release_create_changelog Update ChangeLog
  
Condense list of changes and record at \c draco/ChangeLog.  For major
releases, generate a full technical memo that advertises the release (see
\c draco/doc/releases for examples).

For a minor release, we just log what has changed since the last minor
release, for a major release, we have a memo with more in depth discussion of
all the things that have changed since the last major release. Generally the
more in depth discussion just means that we have a memo for the release and in
that memo we reference all the other memos that we wrote for each new
capability as it was added along the way.


<!-- ---------------------------------------------------------------------- -->

\section draco_release_update_tags Update version tags

Update the version number found at \c draco\CMakeLists.txt

Replace all version tags found in source code with the new version number. 

- Update \c $RELEASEDIR/draco/README.draco by hand
       
- get both the version number right under author list, and
  update the dependency table. 

<!-- ---------------------------------------------------------------------- -->

\section draco_release_check_code Ensure that the code still works!

- If time has elapsed, you should probably at least make sure it
  builds and passes the tests locally before pressing on.
- One way to convince yourself of this is to start the tagging
  process after seeing that the nightly regression build and test
  suite happened successfully the night before.  Either way, I am
  assuming you have checked out a fresh head version of the
  packages to be released in a directory called \c $RELEASEDIR

<!-- ---------------------------------------------------------------------- -->

\section draco_release_tag_cvs Tag the CVS repsitory

- Commit all these changes to CVS (new version tag, updated \c ChangeLog, xml
  files, etc.). For example,
  \code
     % cvs commit -m"Preparing for release of draco-#_#_#"
  \endcode    
- Place a CVS tag on the source files.
  - Checkout clean copies of all packages:
  \code
       % cd $RELEASEDIR
       % cvs co draco
  \endcode
  - For each directory, tag the local copy:
  \code
       % cvs tag 'draco-#_#_#'
  \endcode
  - If you need to move a tag (e.g.: A file was changed that must be included
    in the rlease.), you can force-move the version tag.
  \code
       % cvs tag -r 1.6 -F draco-#_#_# myfile.cc
  \endcode
  In the above example, '1.6' is the current version of the modified file (use
  \c cvs \c log \c myfile.cc to see the version numbers)

<!-- ---------------------------------------------------------------------- -->

\section draco_release_generate_release Generate the Release

- Access the files from the release folder
\code
% export CVSROOT=ccscs9:/ccs/codes/radtran/cvsroot
% export CVS_RSH=ssh
% cd /usr/projects/draco
% cd /usr/projects/draco
% install -d draco-6_2_0/source draco-6_2_0/scripts draco-6_2_0/logs
% cd draco-6_2_0/scripts
% cp ../../draco-6_1_0/scripts/* .
% cd ../source
% cvs -d ccscs8:/ccs/codes/radtran/cvsroot co -P -r draco-6_2_0 draco
\endcode
- Examine \c /usr/projects/crestone/dotfiles/Cshrc to determine what
  compilers to use for each platform (see \ref
  draco_release_target_platforms). 
- Edit and run the local \c 'buildit-*' and \c 'checkit-*' scripts to build
  the specific versions needed.
<ul>
<li>review loaded modules and update as needed.</li>
<li> update $ddir</li>
<li> more details can be found from the autodoc page \ref
draco_how_to_build. </li>
</ul>

- Run the \c buildit scripts capturing the output into a log file.
- Check the output (log file).

- Review the checkit msub script.  Ensure that draco version number and
  modules match the build environment.
- Run the checkit msub script.
- Examine the output.

- tar the cvsroot/draco directory and push it.


<!-- ---------------------------------------------------------------------- -->

\section draco_release_notification Release Notification

- Email draco@lanl.gov plus other interested parties concerning the release.
  Sample email notices can be found at draco/doc/releases.
- Post a note on \c tf.lanl.gov.
- Tar \c CVSROOT/draco and copy to \c /usr/projects/asc_bkups.
\code
% cd /usr/projects/draco/cvsroot
% tar --use-compress-program /usr/bin/bzip2 cvf dracoNNN.tar.bz2 draco
% mv dracoNNN.tar.bz2 /usr/projects/asc_bkups/draco/.
\endcode



*/
//---------------------------------------------------------------------------//
// end 
//---------------------------------------------------------------------------//
