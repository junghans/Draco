###############################################################################
# draco/configure/Makefile.autodoc.in
# Thomas M. Evans
# Wed Sep  1 16:14:07 1999
# $Id$
###############################################################################
# @> General Makefile.in for draco/autodoc
###############################################################################

# @configure_input@

# Automatic autoconf variables:
top_srcdir = @abs_top_srcdir@
srcdir = @abs_srcdir@
top_builddir = @abs_top_builddir@
builddir = @abs_builddir@

# doxygen executable
DOXYGEN = @DOXYGEN_PATH@

#installation executable
INSTALL = @INSTALL@

# directory for doxygen output
doxygen_html_output = @doxygen_html_output@
doxygen_latex_output = @doxygen_latex_output@

# pacakage top source directory
package_top_srcdir = @package_top_srcdir@

# Get the config directory from the package root.
config_dir = ${package_top_srcdir}/config

header_dir = @header_dir@
autodoc_dir = @autodoc_dir@

# Header files and supplemental files go straight to the publish
# directory 
header_files := $(wildcard ${header_dir}/*.png)\
	$(wildcard ${header_dir}/*.gif)\
	$(wildcard ${header_dir}/*.jpg)\
	$(wildcard ${header_dir}/*.css)\
	$(wildcard ${header_dir}/*.pdf)\
	$(wildcard ${header_dir}/*.ps)

support_files := $(wildcard ${autodoc_dir}/*.png)\
	$(wildcard ${autodoc_dir}/*.gif)\
	$(wildcard ${autodoc_dir}/*.jpg)

# We deduce the targets from the source files, because we do not have
# dependency information for the resulting documentation.
html_support_targets := $(subst ${autodoc_dir},\
                          ${doxygen_html_output}, ${support_files})

# If we're using pdfLaTeX, all of these image formats are supported
# natively. Otherwise, we'll need to do some conversion. 
# XXX This need to made conditional on do-latex.
latex_support_targets := $(subst ${autodoc_dir},\
                           ${doxygen_latex_output},${support_files})

##---------------------------------------------------------------------------##

.SUFFIXES : .png .gif .jpg .css .html
.PHONY : html latex install autodoc configure reconfigure \
	install_header install_support autodoc doc docs default

default: autodoc

autodoc: install_header install_support
	@if test ${DOXYGEN} = 'null'; then \
	   echo Doxygen not available; \
	else \
	   ${DOXYGEN} doxygen_config; \
	fi

all check install run: # do nothing on install, all, check or run

##---------------------------------------------------------------------------##
## Install support files

install_header: 
	@for file in ${header_files}; do \
	  echo "Install $${file} to ${doxygen_html_output}";\
	  ${INSTALL} $${file} ${doxygen_html_output}/; \
	done

install_support: ${html_support_targets} # ${latex_support_targets}

${doxygen_html_output}/%.png: ${autodoc_dir}/%.png
	@echo "Installing file: \"$@\""
	${VERBOSE} ${INSTALL} $< $@
${doxygen_html_output}/%.jpg: ${autodoc_dir}/%.jpg
	@echo "Installing file: \"$@\""
	${VERBOSE} ${INSTALL} $< $@
${doxygen_html_output}/%.gif: ${autodoc_dir}/%.gif
	@echo "Installing file: \"$@\""
	${VERBOSE} ${INSTALL} $< $@

# XXX Need attitional copiers and/or conversion operators for
# doxygen_latex_output 

##---------------------------------------------------------------------------##
## Build system targets and rules

# get the pkg_config directory and include statement
pkg_config_dir  = ${package_top_srcdir}/pkg_config
pkg_config_inc := $(shell if test -d ${pkg_config_dir}; then \
                    echo "-I ${pkg_config_dir}"; fi)

configure:
	@echo "Rebuilding ${top_srcdir}/aclocal.m4"
	@cd ${top_srcdir} && aclocal -I ${config_dir} ${pkg_config_inc}
	@echo "Rebuilding ${top_srcdir}/configure"
	@cd ${top_srcdir} && autoconf
	@cd ${top_builddir} && ./config.status --recheck
	@cd ${top_builddir} && ./config.status

reconfigure:
	@cd ${top_builddir} && ./config.status --recheck
	@cd ${top_builddir} && ./config.status

##---------------------------------------------------------------------------##
## clean targets

clean: forced-clean

forced-clean:
	-rm -rf ${doxygen_html_output}/*

mostlyclean: clean

distclean: mostlyclean forced-distclean

forced-distclean:
	-rm -f config.status config.cache config.log
	-rm -f header.html footer.html doxygen_config
	-rm -f Makefile

# any other hand-coded dependencies or any thing **additional** can
# be put into Makefile.misc in the source directory

-include ${srcdir}/Makefile.misc

###############################################################################
#			 end of draco/autodoc Makefile.in
###############################################################################
