###############################################################################
# draco/src/ Makefile.in
# Thomas M. Evans
# $Id$
###############################################################################
# @> Makefile for draco/src directory
###############################################################################

# @configure_input@

top_srcdir = @top_srcdir@
srcdir = @srcdir@

# package top source directory
package_top_srcdir = @package_top_srcdir@

VPATH = @srcdir@  # : this colon is a bug work around.

# The subdirectories to recurs into (if they exist).

subdirs = @subdirs@

# If the make flags include a -k then do not exit on errors.

ifneq (,$(findstring k,${MAKEFLAGS}))
  EXIT = :
else
  EXIT = exit
endif

## get the config directory
config_dir = ${package_top_srcdir}/config

# get the pkg_config directory and include statement
pkg_config_dir  = ${package_top_srcdir}/pkg_config
pkg_config_inc := $(shell if test -d ${pkg_config_dir}; then \
                    echo "-I ${pkg_config_dir}"; fi)

# Parallel flag

ifndef nj
nj	:= 1
endif
subnj	:= -j $(nj)

##---------------------------------------------------------------------------##
## TARGETS AND RULES
##---------------------------------------------------------------------------##

.PHONY : all run install installdirs clean distclean mostlyclean maintainer-clean \
	check build_check uninstall forced-distclean forced-maintainer-clean \
	dvi configure reconfigure autodoc

run: 
	@for dir in ${subdirs} ; do \
	    if test -d "$${dir}" ; then \
		(cd $${dir} && ${MAKE} $@ $(subnj)) || ${EXIT}; \
	    fi; \
	done

install dvi: 
	@for dir in ${subdirs} ; do \
	    if test -d "$${dir}" ; then \
		(cd $${dir} && ${MAKE} dependencies $(subnj)) || ${EXIT}; \
		(cd $${dir} && ${MAKE} installdirs) || ${EXIT}; \
		(cd $${dir} && ${MAKE} $@ $(subnj)) || ${EXIT}; \
	    fi; \
	done

# Make sure that we do not install a subdirectory before it is checked.

check build_check all:
	@for dir in ${subdirs} ; do \
	    if test -d "$${dir}" ; then \
	        (cd $${dir} && ${MAKE} dependencies $(subnj)) || ${EXIT}; \
		(cd $${dir} && ${MAKE} installdirs) || ${EXIT}; \
		(cd $${dir} && ${MAKE} all $(subnj)) || ${EXIT}; \
		(cd $${dir} && ${MAKE} $@ $(subnj)) || ${EXIT}; \
		(cd $${dir} && ${MAKE} install) || ${EXIT}; \
	    fi; \
	done

autodoc:
	@for dir in ${subdirs} ; do \
		if test -d "$${dir}" ; then \
			(cd $${dir} && ${MAKE} $@) || ${EXIT}; \
		fi; \
	done

##---------------------------------------------------------------------------##
## Configure targets

# first we configure in the top-level directory; then we go into each
# subdir and handle things
configure:
	@echo "Rebuilding ${srcdir}/aclocal.m4"
	@cd ${srcdir} && aclocal -I ${config_dir} ${pkg_config_inc}
	@echo "Rebuilding ${top_srcdir}/configure"
	@cd ${srcdir} && autoconf
	@./config.status --recheck
	@./config.status
	@for dir in ${subdirs} ; do \
		if test -d "$${dir}" ; then \
			(cd $${dir} && ${MAKE} $@) || ${EXIT}; \
		fi; \
	done

# first we reconfigure in the top-level directory; then we go into
# each subdir and handle things
reconfigure: 
	@./config.status --recheck
	@./config.status
	@for dir in ${subdirs} ; do \
		if test -d "$${dir}" ; then \
			(cd $${dir} && ${MAKE} $@) || ${EXIT}; \
		fi; \
	done

##---------------------------------------------------------------------------##
## Clean targets

uninstall clean mostlyclean distclean maintainer-clean:
	@for dir in ${subdirs} ; do \
		if test -d "$${dir}" ; then \
			(cd $${dir} && ${MAKE} $@); \
		fi \
	done

distclean: forced-distclean
forced-distclean:
	-rm config.status config.cache config.log config.h stamp-h Makefile

maintainer-clean: forced-maintainer-clean distclean
forced-maintainer-clean:
	@echo 'This command is intended for maintainers to use; it'
	@echo 'deletes files that may need special tools to rebuild.'

##---------------------------------------------------------------------------##
## ADDITIONAL RULES AND TARGETS
##---------------------------------------------------------------------------##

# any other hand-coded dependencies or any thing **additional** can
# be put into Makefile.misc in the source directory

-include ${srcdir}/Makefile.misc

###############################################################################
#                       end of draco/src/ Makefile.in
###############################################################################

